// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles
parcelRequire = (function (modules, cache, entry, globalName) {
  // Save the require from previous bundle to this closure if any
  var previousRequire = typeof parcelRequire === 'function' && parcelRequire;
  var nodeRequire = typeof require === 'function' && require;

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire = typeof parcelRequire === 'function' && parcelRequire;
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error('Cannot find module \'' + name + '\'');
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = cache[name] = new newRequire.Module(name);

      modules[name][0].call(module.exports, localRequire, module, module.exports, this);
    }

    return cache[name].exports;

    function localRequire(x){
      return newRequire(localRequire.resolve(x));
    }

    function resolve(x){
      return modules[name][1][x] || x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [function (require, module) {
      module.exports = exports;
    }, {}];
  };

  var error;
  for (var i = 0; i < entry.length; i++) {
    try {
      newRequire(entry[i]);
    } catch (e) {
      // Save first error but execute all entries
      if (!error) {
        error = e;
      }
    }
  }

  if (entry.length) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(entry[entry.length - 1]);

    // CommonJS
    if (typeof exports === "object" && typeof module !== "undefined") {
      module.exports = mainExports;

    // RequireJS
    } else if (typeof define === "function" && define.amd) {
     define(function () {
       return mainExports;
     });

    // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }

  // Override the current require with this new one
  parcelRequire = newRequire;

  if (error) {
    // throw error from earlier, _after updating parcelRequire_
    throw error;
  }

  return newRequire;
})({"../node_modules/babylon/lib/index.js":[function(require,module,exports) {
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

/* eslint max-len: 0 */

// This is a trick taken from Esprima. It turns out that, on
// non-Chrome browsers, to check whether a string is in a set, a
// predicate containing a big ugly `switch` statement is faster than
// a regular expression, and on Chrome the two are about on par.
// This function uses `eval` (non-lexical) to produce such a
// predicate from a space-separated string of words.
//
// It starts by sorting the words by length.

function makePredicate(words) {
  words = words.split(" ");
  return function (str) {
    return words.indexOf(str) >= 0;
  };
}

// Reserved word lists for various dialects of the language

var reservedWords = {
  6: makePredicate("enum await"),
  strict: makePredicate("implements interface let package private protected public static yield"),
  strictBind: makePredicate("eval arguments")
};

// And the keywords

var isKeyword = makePredicate("break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this let const class extends export import yield super");

// ## Character categories

// Big ugly regular expressions that match characters in the
// whitespace, identifier, and identifier-start categories. These
// are only applied when a character is found to actually have a
// code point above 128.
// Generated by `bin/generate-identifier-regex.js`.

var nonASCIIidentifierStartChars = "\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC";
var nonASCIIidentifierChars = "\u200C\u200D\xB7\u0300-\u036F\u0387\u0483-\u0487\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u0669\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u06F0-\u06F9\u0711\u0730-\u074A\u07A6-\u07B0\u07C0-\u07C9\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08D4-\u08E1\u08E3-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0966-\u096F\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u09E6-\u09EF\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A66-\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0AE6-\u0AEF\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B66-\u0B6F\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0CE6-\u0CEF\u0D01-\u0D03\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D66-\u0D6F\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0E50-\u0E59\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0ED0-\u0ED9\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1040-\u1049\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F-\u109D\u135D-\u135F\u1369-\u1371\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u18A9\u1920-\u192B\u1930-\u193B\u1946-\u194F\u19D0-\u19DA\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AB0-\u1ABD\u1B00-\u1B04\u1B34-\u1B44\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BB0-\u1BB9\u1BE6-\u1BF3\u1C24-\u1C37\u1C40-\u1C49\u1C50-\u1C59\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF5\u1DFB-\u1DFF\u203F\u2040\u2054\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA620-\uA629\uA66F\uA674-\uA67D\uA69E\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F1\uA900-\uA909\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9D0-\uA9D9\uA9E5\uA9F0-\uA9F9\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA50-\uAA59\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uABF0-\uABF9\uFB1E\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFF10-\uFF19\uFF3F";

var nonASCIIidentifierStart = new RegExp("[" + nonASCIIidentifierStartChars + "]");
var nonASCIIidentifier = new RegExp("[" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + "]");

nonASCIIidentifierStartChars = nonASCIIidentifierChars = null;

// These are a run-length and offset encoded representation of the
// >0xffff code points that are a valid part of identifiers. The
// offset starts at 0x10000, and each pair of numbers represents an
// offset to the next range, and then a size of the range. They were
// generated by `bin/generate-identifier-regex.js`.
// eslint-disable-next-line comma-spacing
var astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 17, 26, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 26, 45, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 785, 52, 76, 44, 33, 24, 27, 35, 42, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 54, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 86, 25, 391, 63, 32, 0, 449, 56, 264, 8, 2, 36, 18, 0, 50, 29, 881, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 881, 68, 12, 0, 67, 12, 65, 0, 32, 6124, 20, 754, 9486, 1, 3071, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 4149, 196, 60, 67, 1213, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42710, 42, 4148, 12, 221, 3, 5761, 10591, 541];
// eslint-disable-next-line comma-spacing
var astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 1306, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 52, 0, 13, 2, 49, 13, 10, 2, 4, 9, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 57, 0, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 87, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 423, 9, 838, 7, 2, 7, 17, 9, 57, 21, 2, 13, 19882, 9, 135, 4, 60, 6, 26, 9, 1016, 45, 17, 3, 19723, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 2214, 6, 110, 6, 6, 9, 792487, 239];

// This has a complexity linear to the value of the code. The
// assumption is that looking up astral identifier characters is
// rare.
function isInAstralSet(code, set) {
  var pos = 0x10000;
  for (var i = 0; i < set.length; i += 2) {
    pos += set[i];
    if (pos > code) return false;

    pos += set[i + 1];
    if (pos >= code) return true;
  }
}

// Test whether a given character code starts an identifier.

function isIdentifierStart(code) {
  if (code < 65) return code === 36;
  if (code < 91) return true;
  if (code < 97) return code === 95;
  if (code < 123) return true;
  if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));
  return isInAstralSet(code, astralIdentifierStartCodes);
}

// Test whether a given character is part of an identifier.

function isIdentifierChar(code) {
  if (code < 48) return code === 36;
  if (code < 58) return true;
  if (code < 65) return false;
  if (code < 91) return true;
  if (code < 97) return code === 95;
  if (code < 123) return true;
  if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));
  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);
}

// A second optional argument can be given to further configure
var defaultOptions = {
  // Source type ("script" or "module") for different semantics
  sourceType: "script",
  // Source filename.
  sourceFilename: undefined,
  // Line from which to start counting source. Useful for
  // integration with other tools.
  startLine: 1,
  // When enabled, a return at the top level is not considered an
  // error.
  allowReturnOutsideFunction: false,
  // When enabled, import/export statements are not constrained to
  // appearing at the top of the program.
  allowImportExportEverywhere: false,
  // TODO
  allowSuperOutsideMethod: false,
  // An array of plugins to enable
  plugins: [],
  // TODO
  strictMode: null
};

// Interpret and default an options object

function getOptions(opts) {
  var options = {};
  for (var key in defaultOptions) {
    options[key] = opts && key in opts ? opts[key] : defaultOptions[key];
  }
  return options;
}

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
};











var classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};











var inherits = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
};











var possibleConstructorReturn = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
};

// ## Token types

// The assignment of fine-grained, information-carrying type objects
// allows the tokenizer to store the information it has about a
// token in a way that is very cheap for the parser to look up.

// All token type variables start with an underscore, to make them
// easy to recognize.

// The `beforeExpr` property is used to disambiguate between regular
// expressions and divisions. It is set on all token types that can
// be followed by an expression (thus, a slash after them would be a
// regular expression).
//
// `isLoop` marks a keyword as starting a loop, which is important
// to know when parsing a label, in order to allow or disallow
// continue jumps to that label.

var beforeExpr = true;
var startsExpr = true;
var isLoop = true;
var isAssign = true;
var prefix = true;
var postfix = true;

var TokenType = function TokenType(label) {
  var conf = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  classCallCheck(this, TokenType);

  this.label = label;
  this.keyword = conf.keyword;
  this.beforeExpr = !!conf.beforeExpr;
  this.startsExpr = !!conf.startsExpr;
  this.rightAssociative = !!conf.rightAssociative;
  this.isLoop = !!conf.isLoop;
  this.isAssign = !!conf.isAssign;
  this.prefix = !!conf.prefix;
  this.postfix = !!conf.postfix;
  this.binop = conf.binop || null;
  this.updateContext = null;
};

var KeywordTokenType = function (_TokenType) {
  inherits(KeywordTokenType, _TokenType);

  function KeywordTokenType(name) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    classCallCheck(this, KeywordTokenType);

    options.keyword = name;

    return possibleConstructorReturn(this, _TokenType.call(this, name, options));
  }

  return KeywordTokenType;
}(TokenType);

var BinopTokenType = function (_TokenType2) {
  inherits(BinopTokenType, _TokenType2);

  function BinopTokenType(name, prec) {
    classCallCheck(this, BinopTokenType);
    return possibleConstructorReturn(this, _TokenType2.call(this, name, { beforeExpr: beforeExpr, binop: prec }));
  }

  return BinopTokenType;
}(TokenType);

var types = {
  num: new TokenType("num", { startsExpr: startsExpr }),
  regexp: new TokenType("regexp", { startsExpr: startsExpr }),
  string: new TokenType("string", { startsExpr: startsExpr }),
  name: new TokenType("name", { startsExpr: startsExpr }),
  eof: new TokenType("eof"),

  // Punctuation token types.
  bracketL: new TokenType("[", { beforeExpr: beforeExpr, startsExpr: startsExpr }),
  bracketR: new TokenType("]"),
  braceL: new TokenType("{", { beforeExpr: beforeExpr, startsExpr: startsExpr }),
  braceBarL: new TokenType("{|", { beforeExpr: beforeExpr, startsExpr: startsExpr }),
  braceR: new TokenType("}"),
  braceBarR: new TokenType("|}"),
  parenL: new TokenType("(", { beforeExpr: beforeExpr, startsExpr: startsExpr }),
  parenR: new TokenType(")"),
  comma: new TokenType(",", { beforeExpr: beforeExpr }),
  semi: new TokenType(";", { beforeExpr: beforeExpr }),
  colon: new TokenType(":", { beforeExpr: beforeExpr }),
  doubleColon: new TokenType("::", { beforeExpr: beforeExpr }),
  dot: new TokenType("."),
  question: new TokenType("?", { beforeExpr: beforeExpr }),
  arrow: new TokenType("=>", { beforeExpr: beforeExpr }),
  template: new TokenType("template"),
  ellipsis: new TokenType("...", { beforeExpr: beforeExpr }),
  backQuote: new TokenType("`", { startsExpr: startsExpr }),
  dollarBraceL: new TokenType("${", { beforeExpr: beforeExpr, startsExpr: startsExpr }),
  at: new TokenType("@"),

  // Operators. These carry several kinds of properties to help the
  // parser use them properly (the presence of these properties is
  // what categorizes them as operators).
  //
  // `binop`, when present, specifies that this operator is a binary
  // operator, and will refer to its precedence.
  //
  // `prefix` and `postfix` mark the operator as a prefix or postfix
  // unary operator.
  //
  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as
  // binary operators with a very low precedence, that should result
  // in AssignmentExpression nodes.

  eq: new TokenType("=", { beforeExpr: beforeExpr, isAssign: isAssign }),
  assign: new TokenType("_=", { beforeExpr: beforeExpr, isAssign: isAssign }),
  incDec: new TokenType("++/--", { prefix: prefix, postfix: postfix, startsExpr: startsExpr }),
  prefix: new TokenType("prefix", { beforeExpr: beforeExpr, prefix: prefix, startsExpr: startsExpr }),
  logicalOR: new BinopTokenType("||", 1),
  logicalAND: new BinopTokenType("&&", 2),
  bitwiseOR: new BinopTokenType("|", 3),
  bitwiseXOR: new BinopTokenType("^", 4),
  bitwiseAND: new BinopTokenType("&", 5),
  equality: new BinopTokenType("==/!=", 6),
  relational: new BinopTokenType("</>", 7),
  bitShift: new BinopTokenType("<</>>", 8),
  plusMin: new TokenType("+/-", { beforeExpr: beforeExpr, binop: 9, prefix: prefix, startsExpr: startsExpr }),
  modulo: new BinopTokenType("%", 10),
  star: new BinopTokenType("*", 10),
  slash: new BinopTokenType("/", 10),
  exponent: new TokenType("**", { beforeExpr: beforeExpr, binop: 11, rightAssociative: true })
};

var keywords = {
  "break": new KeywordTokenType("break"),
  "case": new KeywordTokenType("case", { beforeExpr: beforeExpr }),
  "catch": new KeywordTokenType("catch"),
  "continue": new KeywordTokenType("continue"),
  "debugger": new KeywordTokenType("debugger"),
  "default": new KeywordTokenType("default", { beforeExpr: beforeExpr }),
  "do": new KeywordTokenType("do", { isLoop: isLoop, beforeExpr: beforeExpr }),
  "else": new KeywordTokenType("else", { beforeExpr: beforeExpr }),
  "finally": new KeywordTokenType("finally"),
  "for": new KeywordTokenType("for", { isLoop: isLoop }),
  "function": new KeywordTokenType("function", { startsExpr: startsExpr }),
  "if": new KeywordTokenType("if"),
  "return": new KeywordTokenType("return", { beforeExpr: beforeExpr }),
  "switch": new KeywordTokenType("switch"),
  "throw": new KeywordTokenType("throw", { beforeExpr: beforeExpr }),
  "try": new KeywordTokenType("try"),
  "var": new KeywordTokenType("var"),
  "let": new KeywordTokenType("let"),
  "const": new KeywordTokenType("const"),
  "while": new KeywordTokenType("while", { isLoop: isLoop }),
  "with": new KeywordTokenType("with"),
  "new": new KeywordTokenType("new", { beforeExpr: beforeExpr, startsExpr: startsExpr }),
  "this": new KeywordTokenType("this", { startsExpr: startsExpr }),
  "super": new KeywordTokenType("super", { startsExpr: startsExpr }),
  "class": new KeywordTokenType("class"),
  "extends": new KeywordTokenType("extends", { beforeExpr: beforeExpr }),
  "export": new KeywordTokenType("export"),
  "import": new KeywordTokenType("import", { startsExpr: startsExpr }),
  "yield": new KeywordTokenType("yield", { beforeExpr: beforeExpr, startsExpr: startsExpr }),
  "null": new KeywordTokenType("null", { startsExpr: startsExpr }),
  "true": new KeywordTokenType("true", { startsExpr: startsExpr }),
  "false": new KeywordTokenType("false", { startsExpr: startsExpr }),
  "in": new KeywordTokenType("in", { beforeExpr: beforeExpr, binop: 7 }),
  "instanceof": new KeywordTokenType("instanceof", { beforeExpr: beforeExpr, binop: 7 }),
  "typeof": new KeywordTokenType("typeof", { beforeExpr: beforeExpr, prefix: prefix, startsExpr: startsExpr }),
  "void": new KeywordTokenType("void", { beforeExpr: beforeExpr, prefix: prefix, startsExpr: startsExpr }),
  "delete": new KeywordTokenType("delete", { beforeExpr: beforeExpr, prefix: prefix, startsExpr: startsExpr })
};

// Map keyword names to token types.
Object.keys(keywords).forEach(function (name) {
  types["_" + name] = keywords[name];
});

// Matches a whole line break (where CRLF is considered a single
// line break). Used to count lines.

var lineBreak = /\r\n?|\n|\u2028|\u2029/;
var lineBreakG = new RegExp(lineBreak.source, "g");

function isNewLine(code) {
  return code === 10 || code === 13 || code === 0x2028 || code === 0x2029;
}

var nonASCIIwhitespace = /[\u1680\u180e\u2000-\u200a\u202f\u205f\u3000\ufeff]/;

// The algorithm used to determine whether a regexp can appear at a
// given point in the program is loosely based on sweet.js' approach.
// See https://github.com/mozilla/sweet.js/wiki/design

var TokContext = function TokContext(token, isExpr, preserveSpace, override) {
  classCallCheck(this, TokContext);

  this.token = token;
  this.isExpr = !!isExpr;
  this.preserveSpace = !!preserveSpace;
  this.override = override;
};

var types$1 = {
  braceStatement: new TokContext("{", false),
  braceExpression: new TokContext("{", true),
  templateQuasi: new TokContext("${", true),
  parenStatement: new TokContext("(", false),
  parenExpression: new TokContext("(", true),
  template: new TokContext("`", true, true, function (p) {
    return p.readTmplToken();
  }),
  functionExpression: new TokContext("function", true)
};

// Token-specific context update code

types.parenR.updateContext = types.braceR.updateContext = function () {
  if (this.state.context.length === 1) {
    this.state.exprAllowed = true;
    return;
  }

  var out = this.state.context.pop();
  if (out === types$1.braceStatement && this.curContext() === types$1.functionExpression) {
    this.state.context.pop();
    this.state.exprAllowed = false;
  } else if (out === types$1.templateQuasi) {
    this.state.exprAllowed = true;
  } else {
    this.state.exprAllowed = !out.isExpr;
  }
};

types.name.updateContext = function (prevType) {
  this.state.exprAllowed = false;

  if (prevType === types._let || prevType === types._const || prevType === types._var) {
    if (lineBreak.test(this.input.slice(this.state.end))) {
      this.state.exprAllowed = true;
    }
  }
};

types.braceL.updateContext = function (prevType) {
  this.state.context.push(this.braceIsBlock(prevType) ? types$1.braceStatement : types$1.braceExpression);
  this.state.exprAllowed = true;
};

types.dollarBraceL.updateContext = function () {
  this.state.context.push(types$1.templateQuasi);
  this.state.exprAllowed = true;
};

types.parenL.updateContext = function (prevType) {
  var statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;
  this.state.context.push(statementParens ? types$1.parenStatement : types$1.parenExpression);
  this.state.exprAllowed = true;
};

types.incDec.updateContext = function () {
  // tokExprAllowed stays unchanged
};

types._function.updateContext = function () {
  if (this.curContext() !== types$1.braceStatement) {
    this.state.context.push(types$1.functionExpression);
  }

  this.state.exprAllowed = false;
};

types.backQuote.updateContext = function () {
  if (this.curContext() === types$1.template) {
    this.state.context.pop();
  } else {
    this.state.context.push(types$1.template);
  }
  this.state.exprAllowed = false;
};

// These are used when `options.locations` is on, for the
// `startLoc` and `endLoc` properties.

var Position = function Position(line, col) {
  classCallCheck(this, Position);

  this.line = line;
  this.column = col;
};

var SourceLocation = function SourceLocation(start, end) {
  classCallCheck(this, SourceLocation);

  this.start = start;
  this.end = end;
};

// The `getLineInfo` function is mostly useful when the
// `locations` option is off (for performance reasons) and you
// want to find the line/column position for a given character
// offset. `input` should be the code string that the offset refers
// into.

function getLineInfo(input, offset) {
  for (var line = 1, cur = 0;;) {
    lineBreakG.lastIndex = cur;
    var match = lineBreakG.exec(input);
    if (match && match.index < offset) {
      ++line;
      cur = match.index + match[0].length;
    } else {
      return new Position(line, offset - cur);
    }
  }
}

var State = function () {
  function State() {
    classCallCheck(this, State);
  }

  State.prototype.init = function init(options, input) {
    this.strict = options.strictMode === false ? false : options.sourceType === "module";

    this.input = input;

    this.potentialArrowAt = -1;

    this.inMethod = this.inFunction = this.inGenerator = this.inAsync = this.inPropertyName = this.inType = this.inClassProperty = this.noAnonFunctionType = false;

    this.labels = [];

    this.decorators = [];

    this.tokens = [];

    this.comments = [];

    this.trailingComments = [];
    this.leadingComments = [];
    this.commentStack = [];

    this.pos = this.lineStart = 0;
    this.curLine = options.startLine;

    this.type = types.eof;
    this.value = null;
    this.start = this.end = this.pos;
    this.startLoc = this.endLoc = this.curPosition();

    this.lastTokEndLoc = this.lastTokStartLoc = null;
    this.lastTokStart = this.lastTokEnd = this.pos;

    this.context = [types$1.braceStatement];
    this.exprAllowed = true;

    this.containsEsc = this.containsOctal = false;
    this.octalPosition = null;

    this.invalidTemplateEscapePosition = null;

    this.exportedIdentifiers = [];

    return this;
  };

  // TODO


  // TODO


  // Used to signify the start of a potential arrow function


  // Flags to track whether we are in a function, a generator.


  // Labels in scope.


  // Leading decorators.


  // Token store.


  // Comment store.


  // Comment attachment store


  // The current position of the tokenizer in the input.


  // Properties of the current token:
  // Its type


  // For tokens that include more information than their type, the value


  // Its start and end offset


  // And, if locations are used, the {line, column} object
  // corresponding to those offsets


  // Position information for the previous token


  // The context stack is used to superficially track syntactic
  // context to predict whether a regular expression is allowed in a
  // given position.


  // Used to signal to callers of `readWord1` whether the word
  // contained any escape sequences. This is needed because words with
  // escape sequences must not be interpreted as keywords.


  // TODO


  // Names of exports store. `default` is stored as a name for both
  // `export default foo;` and `export { foo as default };`.


  State.prototype.curPosition = function curPosition() {
    return new Position(this.curLine, this.pos - this.lineStart);
  };

  State.prototype.clone = function clone(skipArrays) {
    var state = new State();
    for (var key in this) {
      var val = this[key];

      if ((!skipArrays || key === "context") && Array.isArray(val)) {
        val = val.slice();
      }

      state[key] = val;
    }
    return state;
  };

  return State;
}();

// Object type used to represent tokens. Note that normally, tokens
// simply exist as properties on the parser object. This is only
// used for the onToken callback and the external tokenizer.

var Token = function Token(state) {
  classCallCheck(this, Token);

  this.type = state.type;
  this.value = state.value;
  this.start = state.start;
  this.end = state.end;
  this.loc = new SourceLocation(state.startLoc, state.endLoc);
};

// ## Tokenizer

function codePointToString(code) {
  // UTF-16 Decoding
  if (code <= 0xFFFF) {
    return String.fromCharCode(code);
  } else {
    return String.fromCharCode((code - 0x10000 >> 10) + 0xD800, (code - 0x10000 & 1023) + 0xDC00);
  }
}

var Tokenizer = function () {
  function Tokenizer(options, input) {
    classCallCheck(this, Tokenizer);

    this.state = new State();
    this.state.init(options, input);
  }

  // Move to the next token

  Tokenizer.prototype.next = function next() {
    if (!this.isLookahead) {
      this.state.tokens.push(new Token(this.state));
    }

    this.state.lastTokEnd = this.state.end;
    this.state.lastTokStart = this.state.start;
    this.state.lastTokEndLoc = this.state.endLoc;
    this.state.lastTokStartLoc = this.state.startLoc;
    this.nextToken();
  };

  // TODO

  Tokenizer.prototype.eat = function eat(type) {
    if (this.match(type)) {
      this.next();
      return true;
    } else {
      return false;
    }
  };

  // TODO

  Tokenizer.prototype.match = function match(type) {
    return this.state.type === type;
  };

  // TODO

  Tokenizer.prototype.isKeyword = function isKeyword$$1(word) {
    return isKeyword(word);
  };

  // TODO

  Tokenizer.prototype.lookahead = function lookahead() {
    var old = this.state;
    this.state = old.clone(true);

    this.isLookahead = true;
    this.next();
    this.isLookahead = false;

    var curr = this.state.clone(true);
    this.state = old;
    return curr;
  };

  // Toggle strict mode. Re-reads the next number or string to please
  // pedantic tests (`"use strict"; 010;` should fail).

  Tokenizer.prototype.setStrict = function setStrict(strict) {
    this.state.strict = strict;
    if (!this.match(types.num) && !this.match(types.string)) return;
    this.state.pos = this.state.start;
    while (this.state.pos < this.state.lineStart) {
      this.state.lineStart = this.input.lastIndexOf("\n", this.state.lineStart - 2) + 1;
      --this.state.curLine;
    }
    this.nextToken();
  };

  Tokenizer.prototype.curContext = function curContext() {
    return this.state.context[this.state.context.length - 1];
  };

  // Read a single token, updating the parser object's token-related
  // properties.

  Tokenizer.prototype.nextToken = function nextToken() {
    var curContext = this.curContext();
    if (!curContext || !curContext.preserveSpace) this.skipSpace();

    this.state.containsOctal = false;
    this.state.octalPosition = null;
    this.state.start = this.state.pos;
    this.state.startLoc = this.state.curPosition();
    if (this.state.pos >= this.input.length) return this.finishToken(types.eof);

    if (curContext.override) {
      return curContext.override(this);
    } else {
      return this.readToken(this.fullCharCodeAtPos());
    }
  };

  Tokenizer.prototype.readToken = function readToken(code) {
    // Identifier or keyword. '\uXXXX' sequences are allowed in
    // identifiers, so '\' also dispatches to that.
    if (isIdentifierStart(code) || code === 92 /* '\' */) {
        return this.readWord();
      } else {
      return this.getTokenFromCode(code);
    }
  };

  Tokenizer.prototype.fullCharCodeAtPos = function fullCharCodeAtPos() {
    var code = this.input.charCodeAt(this.state.pos);
    if (code <= 0xd7ff || code >= 0xe000) return code;

    var next = this.input.charCodeAt(this.state.pos + 1);
    return (code << 10) + next - 0x35fdc00;
  };

  Tokenizer.prototype.pushComment = function pushComment(block, text, start, end, startLoc, endLoc) {
    var comment = {
      type: block ? "CommentBlock" : "CommentLine",
      value: text,
      start: start,
      end: end,
      loc: new SourceLocation(startLoc, endLoc)
    };

    if (!this.isLookahead) {
      this.state.tokens.push(comment);
      this.state.comments.push(comment);
      this.addComment(comment);
    }
  };

  Tokenizer.prototype.skipBlockComment = function skipBlockComment() {
    var startLoc = this.state.curPosition();
    var start = this.state.pos;
    var end = this.input.indexOf("*/", this.state.pos += 2);
    if (end === -1) this.raise(this.state.pos - 2, "Unterminated comment");

    this.state.pos = end + 2;
    lineBreakG.lastIndex = start;
    var match = void 0;
    while ((match = lineBreakG.exec(this.input)) && match.index < this.state.pos) {
      ++this.state.curLine;
      this.state.lineStart = match.index + match[0].length;
    }

    this.pushComment(true, this.input.slice(start + 2, end), start, this.state.pos, startLoc, this.state.curPosition());
  };

  Tokenizer.prototype.skipLineComment = function skipLineComment(startSkip) {
    var start = this.state.pos;
    var startLoc = this.state.curPosition();
    var ch = this.input.charCodeAt(this.state.pos += startSkip);
    while (this.state.pos < this.input.length && ch !== 10 && ch !== 13 && ch !== 8232 && ch !== 8233) {
      ++this.state.pos;
      ch = this.input.charCodeAt(this.state.pos);
    }

    this.pushComment(false, this.input.slice(start + startSkip, this.state.pos), start, this.state.pos, startLoc, this.state.curPosition());
  };

  // Called at the start of the parse and after every token. Skips
  // whitespace and comments, and.

  Tokenizer.prototype.skipSpace = function skipSpace() {
    loop: while (this.state.pos < this.input.length) {
      var ch = this.input.charCodeAt(this.state.pos);
      switch (ch) {
        case 32:case 160:
          // ' '
          ++this.state.pos;
          break;

        case 13:
          if (this.input.charCodeAt(this.state.pos + 1) === 10) {
            ++this.state.pos;
          }

        case 10:case 8232:case 8233:
          ++this.state.pos;
          ++this.state.curLine;
          this.state.lineStart = this.state.pos;
          break;

        case 47:
          // '/'
          switch (this.input.charCodeAt(this.state.pos + 1)) {
            case 42:
              // '*'
              this.skipBlockComment();
              break;

            case 47:
              this.skipLineComment(2);
              break;

            default:
              break loop;
          }
          break;

        default:
          if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {
            ++this.state.pos;
          } else {
            break loop;
          }
      }
    }
  };

  // Called at the end of every token. Sets `end`, `val`, and
  // maintains `context` and `exprAllowed`, and skips the space after
  // the token, so that the next one's `start` will point at the
  // right position.

  Tokenizer.prototype.finishToken = function finishToken(type, val) {
    this.state.end = this.state.pos;
    this.state.endLoc = this.state.curPosition();
    var prevType = this.state.type;
    this.state.type = type;
    this.state.value = val;

    this.updateContext(prevType);
  };

  // ### Token reading

  // This is the function that is called to fetch the next token. It
  // is somewhat obscure, because it works in character codes rather
  // than characters, and because operator parsing has been inlined
  // into it.
  //
  // All in the name of speed.
  //


  Tokenizer.prototype.readToken_dot = function readToken_dot() {
    var next = this.input.charCodeAt(this.state.pos + 1);
    if (next >= 48 && next <= 57) {
      return this.readNumber(true);
    }

    var next2 = this.input.charCodeAt(this.state.pos + 2);
    if (next === 46 && next2 === 46) {
      // 46 = dot '.'
      this.state.pos += 3;
      return this.finishToken(types.ellipsis);
    } else {
      ++this.state.pos;
      return this.finishToken(types.dot);
    }
  };

  Tokenizer.prototype.readToken_slash = function readToken_slash() {
    // '/'
    if (this.state.exprAllowed) {
      ++this.state.pos;
      return this.readRegexp();
    }

    var next = this.input.charCodeAt(this.state.pos + 1);
    if (next === 61) {
      return this.finishOp(types.assign, 2);
    } else {
      return this.finishOp(types.slash, 1);
    }
  };

  Tokenizer.prototype.readToken_mult_modulo = function readToken_mult_modulo(code) {
    // '%*'
    var type = code === 42 ? types.star : types.modulo;
    var width = 1;
    var next = this.input.charCodeAt(this.state.pos + 1);

    if (next === 42) {
      // '*'
      width++;
      next = this.input.charCodeAt(this.state.pos + 2);
      type = types.exponent;
    }

    if (next === 61) {
      width++;
      type = types.assign;
    }

    return this.finishOp(type, width);
  };

  Tokenizer.prototype.readToken_pipe_amp = function readToken_pipe_amp(code) {
    // '|&'
    var next = this.input.charCodeAt(this.state.pos + 1);
    if (next === code) return this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2);
    if (next === 61) return this.finishOp(types.assign, 2);
    if (code === 124 && next === 125 && this.hasPlugin("flow")) return this.finishOp(types.braceBarR, 2);
    return this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1);
  };

  Tokenizer.prototype.readToken_caret = function readToken_caret() {
    // '^'
    var next = this.input.charCodeAt(this.state.pos + 1);
    if (next === 61) {
      return this.finishOp(types.assign, 2);
    } else {
      return this.finishOp(types.bitwiseXOR, 1);
    }
  };

  Tokenizer.prototype.readToken_plus_min = function readToken_plus_min(code) {
    // '+-'
    var next = this.input.charCodeAt(this.state.pos + 1);

    if (next === code) {
      if (next === 45 && this.input.charCodeAt(this.state.pos + 2) === 62 && lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.pos))) {
        // A `-->` line comment
        this.skipLineComment(3);
        this.skipSpace();
        return this.nextToken();
      }
      return this.finishOp(types.incDec, 2);
    }

    if (next === 61) {
      return this.finishOp(types.assign, 2);
    } else {
      return this.finishOp(types.plusMin, 1);
    }
  };

  Tokenizer.prototype.readToken_lt_gt = function readToken_lt_gt(code) {
    // '<>'
    var next = this.input.charCodeAt(this.state.pos + 1);
    var size = 1;

    if (next === code) {
      size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;
      if (this.input.charCodeAt(this.state.pos + size) === 61) return this.finishOp(types.assign, size + 1);
      return this.finishOp(types.bitShift, size);
    }

    if (next === 33 && code === 60 && this.input.charCodeAt(this.state.pos + 2) === 45 && this.input.charCodeAt(this.state.pos + 3) === 45) {
      if (this.inModule) this.unexpected();
      // `<!--`, an XML-style comment that should be interpreted as a line comment
      this.skipLineComment(4);
      this.skipSpace();
      return this.nextToken();
    }

    if (next === 61) {
      // <= | >=
      size = 2;
    }

    return this.finishOp(types.relational, size);
  };

  Tokenizer.prototype.readToken_eq_excl = function readToken_eq_excl(code) {
    // '=!'
    var next = this.input.charCodeAt(this.state.pos + 1);
    if (next === 61) return this.finishOp(types.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);
    if (code === 61 && next === 62) {
      // '=>'
      this.state.pos += 2;
      return this.finishToken(types.arrow);
    }
    return this.finishOp(code === 61 ? types.eq : types.prefix, 1);
  };

  Tokenizer.prototype.getTokenFromCode = function getTokenFromCode(code) {
    switch (code) {
      // The interpretation of a dot depends on whether it is followed
      // by a digit or another two dots.
      case 46:
        // '.'
        return this.readToken_dot();

      // Punctuation tokens.
      case 40:
        ++this.state.pos;return this.finishToken(types.parenL);
      case 41:
        ++this.state.pos;return this.finishToken(types.parenR);
      case 59:
        ++this.state.pos;return this.finishToken(types.semi);
      case 44:
        ++this.state.pos;return this.finishToken(types.comma);
      case 91:
        ++this.state.pos;return this.finishToken(types.bracketL);
      case 93:
        ++this.state.pos;return this.finishToken(types.bracketR);

      case 123:
        if (this.hasPlugin("flow") && this.input.charCodeAt(this.state.pos + 1) === 124) {
          return this.finishOp(types.braceBarL, 2);
        } else {
          ++this.state.pos;
          return this.finishToken(types.braceL);
        }

      case 125:
        ++this.state.pos;return this.finishToken(types.braceR);

      case 58:
        if (this.hasPlugin("functionBind") && this.input.charCodeAt(this.state.pos + 1) === 58) {
          return this.finishOp(types.doubleColon, 2);
        } else {
          ++this.state.pos;
          return this.finishToken(types.colon);
        }

      case 63:
        ++this.state.pos;return this.finishToken(types.question);
      case 64:
        ++this.state.pos;return this.finishToken(types.at);

      case 96:
        // '`'
        ++this.state.pos;
        return this.finishToken(types.backQuote);

      case 48:
        // '0'
        var next = this.input.charCodeAt(this.state.pos + 1);
        if (next === 120 || next === 88) return this.readRadixNumber(16); // '0x', '0X' - hex number
        if (next === 111 || next === 79) return this.readRadixNumber(8); // '0o', '0O' - octal number
        if (next === 98 || next === 66) return this.readRadixNumber(2); // '0b', '0B' - binary number
      // Anything else beginning with a digit is an integer, octal
      // number, or float.
      case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
        // 1-9
        return this.readNumber(false);

      // Quotes produce strings.
      case 34:case 39:
        // '"', "'"
        return this.readString(code);

      // Operators are parsed inline in tiny state machines. '=' (61) is
      // often referred to. `finishOp` simply skips the amount of
      // characters it is given as second argument, and returns a token
      // of the type given by its first argument.

      case 47:
        // '/'
        return this.readToken_slash();

      case 37:case 42:
        // '%*'
        return this.readToken_mult_modulo(code);

      case 124:case 38:
        // '|&'
        return this.readToken_pipe_amp(code);

      case 94:
        // '^'
        return this.readToken_caret();

      case 43:case 45:
        // '+-'
        return this.readToken_plus_min(code);

      case 60:case 62:
        // '<>'
        return this.readToken_lt_gt(code);

      case 61:case 33:
        // '=!'
        return this.readToken_eq_excl(code);

      case 126:
        // '~'
        return this.finishOp(types.prefix, 1);
    }

    this.raise(this.state.pos, "Unexpected character '" + codePointToString(code) + "'");
  };

  Tokenizer.prototype.finishOp = function finishOp(type, size) {
    var str = this.input.slice(this.state.pos, this.state.pos + size);
    this.state.pos += size;
    return this.finishToken(type, str);
  };

  Tokenizer.prototype.readRegexp = function readRegexp() {
    var start = this.state.pos;
    var escaped = void 0,
        inClass = void 0;
    for (;;) {
      if (this.state.pos >= this.input.length) this.raise(start, "Unterminated regular expression");
      var ch = this.input.charAt(this.state.pos);
      if (lineBreak.test(ch)) {
        this.raise(start, "Unterminated regular expression");
      }
      if (escaped) {
        escaped = false;
      } else {
        if (ch === "[") {
          inClass = true;
        } else if (ch === "]" && inClass) {
          inClass = false;
        } else if (ch === "/" && !inClass) {
          break;
        }
        escaped = ch === "\\";
      }
      ++this.state.pos;
    }
    var content = this.input.slice(start, this.state.pos);
    ++this.state.pos;
    // Need to use `readWord1` because '\uXXXX' sequences are allowed
    // here (don't ask).
    var mods = this.readWord1();
    if (mods) {
      var validFlags = /^[gmsiyu]*$/;
      if (!validFlags.test(mods)) this.raise(start, "Invalid regular expression flag");
    }
    return this.finishToken(types.regexp, {
      pattern: content,
      flags: mods
    });
  };

  // Read an integer in the given radix. Return null if zero digits
  // were read, the integer value otherwise. When `len` is given, this
  // will return `null` unless the integer has exactly `len` digits.

  Tokenizer.prototype.readInt = function readInt(radix, len) {
    var start = this.state.pos;
    var total = 0;

    for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {
      var code = this.input.charCodeAt(this.state.pos);
      var val = void 0;
      if (code >= 97) {
        val = code - 97 + 10; // a
      } else if (code >= 65) {
        val = code - 65 + 10; // A
      } else if (code >= 48 && code <= 57) {
        val = code - 48; // 0-9
      } else {
        val = Infinity;
      }
      if (val >= radix) break;
      ++this.state.pos;
      total = total * radix + val;
    }
    if (this.state.pos === start || len != null && this.state.pos - start !== len) return null;

    return total;
  };

  Tokenizer.prototype.readRadixNumber = function readRadixNumber(radix) {
    this.state.pos += 2; // 0x
    var val = this.readInt(radix);
    if (val == null) this.raise(this.state.start + 2, "Expected number in radix " + radix);
    if (isIdentifierStart(this.fullCharCodeAtPos())) this.raise(this.state.pos, "Identifier directly after number");
    return this.finishToken(types.num, val);
  };

  // Read an integer, octal integer, or floating-point number.

  Tokenizer.prototype.readNumber = function readNumber(startsWithDot) {
    var start = this.state.pos;
    var octal = this.input.charCodeAt(start) === 48; // '0'
    var isFloat = false;

    if (!startsWithDot && this.readInt(10) === null) this.raise(start, "Invalid number");
    if (octal && this.state.pos == start + 1) octal = false; // number === 0

    var next = this.input.charCodeAt(this.state.pos);
    if (next === 46 && !octal) {
      // '.'
      ++this.state.pos;
      this.readInt(10);
      isFloat = true;
      next = this.input.charCodeAt(this.state.pos);
    }

    if ((next === 69 || next === 101) && !octal) {
      // 'eE'
      next = this.input.charCodeAt(++this.state.pos);
      if (next === 43 || next === 45) ++this.state.pos; // '+-'
      if (this.readInt(10) === null) this.raise(start, "Invalid number");
      isFloat = true;
    }

    if (isIdentifierStart(this.fullCharCodeAtPos())) this.raise(this.state.pos, "Identifier directly after number");

    var str = this.input.slice(start, this.state.pos);
    var val = void 0;
    if (isFloat) {
      val = parseFloat(str);
    } else if (!octal || str.length === 1) {
      val = parseInt(str, 10);
    } else if (this.state.strict) {
      this.raise(start, "Invalid number");
    } else if (/[89]/.test(str)) {
      val = parseInt(str, 10);
    } else {
      val = parseInt(str, 8);
    }
    return this.finishToken(types.num, val);
  };

  // Read a string value, interpreting backslash-escapes.

  Tokenizer.prototype.readCodePoint = function readCodePoint(throwOnInvalid) {
    var ch = this.input.charCodeAt(this.state.pos);
    var code = void 0;

    if (ch === 123) {
      // '{'
      var codePos = ++this.state.pos;
      code = this.readHexChar(this.input.indexOf("}", this.state.pos) - this.state.pos, throwOnInvalid);
      ++this.state.pos;
      if (code === null) {
        --this.state.invalidTemplateEscapePosition; // to point to the '\'' instead of the 'u'
      } else if (code > 0x10FFFF) {
        if (throwOnInvalid) {
          this.raise(codePos, "Code point out of bounds");
        } else {
          this.state.invalidTemplateEscapePosition = codePos - 2;
          return null;
        }
      }
    } else {
      code = this.readHexChar(4, throwOnInvalid);
    }
    return code;
  };

  Tokenizer.prototype.readString = function readString(quote) {
    var out = "",
        chunkStart = ++this.state.pos;
    for (;;) {
      if (this.state.pos >= this.input.length) this.raise(this.state.start, "Unterminated string constant");
      var ch = this.input.charCodeAt(this.state.pos);
      if (ch === quote) break;
      if (ch === 92) {
        // '\'
        out += this.input.slice(chunkStart, this.state.pos);
        out += this.readEscapedChar(false);
        chunkStart = this.state.pos;
      } else {
        if (isNewLine(ch)) this.raise(this.state.start, "Unterminated string constant");
        ++this.state.pos;
      }
    }
    out += this.input.slice(chunkStart, this.state.pos++);
    return this.finishToken(types.string, out);
  };

  // Reads template string tokens.

  Tokenizer.prototype.readTmplToken = function readTmplToken() {
    var out = "",
        chunkStart = this.state.pos,
        containsInvalid = false;
    for (;;) {
      if (this.state.pos >= this.input.length) this.raise(this.state.start, "Unterminated template");
      var ch = this.input.charCodeAt(this.state.pos);
      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {
        // '`', '${'
        if (this.state.pos === this.state.start && this.match(types.template)) {
          if (ch === 36) {
            this.state.pos += 2;
            return this.finishToken(types.dollarBraceL);
          } else {
            ++this.state.pos;
            return this.finishToken(types.backQuote);
          }
        }
        out += this.input.slice(chunkStart, this.state.pos);
        return this.finishToken(types.template, containsInvalid ? null : out);
      }
      if (ch === 92) {
        // '\'
        out += this.input.slice(chunkStart, this.state.pos);
        var escaped = this.readEscapedChar(true);
        if (escaped === null) {
          containsInvalid = true;
        } else {
          out += escaped;
        }
        chunkStart = this.state.pos;
      } else if (isNewLine(ch)) {
        out += this.input.slice(chunkStart, this.state.pos);
        ++this.state.pos;
        switch (ch) {
          case 13:
            if (this.input.charCodeAt(this.state.pos) === 10) ++this.state.pos;
          case 10:
            out += "\n";
            break;
          default:
            out += String.fromCharCode(ch);
            break;
        }
        ++this.state.curLine;
        this.state.lineStart = this.state.pos;
        chunkStart = this.state.pos;
      } else {
        ++this.state.pos;
      }
    }
  };

  // Used to read escaped characters

  Tokenizer.prototype.readEscapedChar = function readEscapedChar(inTemplate) {
    var throwOnInvalid = !inTemplate;
    var ch = this.input.charCodeAt(++this.state.pos);
    ++this.state.pos;
    switch (ch) {
      case 110:
        return "\n"; // 'n' -> '\n'
      case 114:
        return "\r"; // 'r' -> '\r'
      case 120:
        {
          // 'x'
          var code = this.readHexChar(2, throwOnInvalid);
          return code === null ? null : String.fromCharCode(code);
        }
      case 117:
        {
          // 'u'
          var _code = this.readCodePoint(throwOnInvalid);
          return _code === null ? null : codePointToString(_code);
        }
      case 116:
        return "\t"; // 't' -> '\t'
      case 98:
        return "\b"; // 'b' -> '\b'
      case 118:
        return "\x0B"; // 'v' -> '\u000b'
      case 102:
        return "\f"; // 'f' -> '\f'
      case 13:
        if (this.input.charCodeAt(this.state.pos) === 10) ++this.state.pos; // '\r\n'
      case 10:
        // ' \n'
        this.state.lineStart = this.state.pos;
        ++this.state.curLine;
        return "";
      default:
        if (ch >= 48 && ch <= 55) {
          var codePos = this.state.pos - 1;
          var octalStr = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/)[0];
          var octal = parseInt(octalStr, 8);
          if (octal > 255) {
            octalStr = octalStr.slice(0, -1);
            octal = parseInt(octalStr, 8);
          }
          if (octal > 0) {
            if (inTemplate) {
              this.state.invalidTemplateEscapePosition = codePos;
              return null;
            } else if (this.state.strict) {
              this.raise(codePos, "Octal literal in strict mode");
            } else if (!this.state.containsOctal) {
              // These properties are only used to throw an error for an octal which occurs
              // in a directive which occurs prior to a "use strict" directive.
              this.state.containsOctal = true;
              this.state.octalPosition = codePos;
            }
          }
          this.state.pos += octalStr.length - 1;
          return String.fromCharCode(octal);
        }
        return String.fromCharCode(ch);
    }
  };

  // Used to read character escape sequences ('\x', '\u').

  Tokenizer.prototype.readHexChar = function readHexChar(len, throwOnInvalid) {
    var codePos = this.state.pos;
    var n = this.readInt(16, len);
    if (n === null) {
      if (throwOnInvalid) {
        this.raise(codePos, "Bad character escape sequence");
      } else {
        this.state.pos = codePos - 1;
        this.state.invalidTemplateEscapePosition = codePos - 1;
      }
    }
    return n;
  };

  // Read an identifier, and return it as a string. Sets `this.state.containsEsc`
  // to whether the word contained a '\u' escape.
  //
  // Incrementally adds only escaped chars, adding other chunks as-is
  // as a micro-optimization.

  Tokenizer.prototype.readWord1 = function readWord1() {
    this.state.containsEsc = false;
    var word = "",
        first = true,
        chunkStart = this.state.pos;
    while (this.state.pos < this.input.length) {
      var ch = this.fullCharCodeAtPos();
      if (isIdentifierChar(ch)) {
        this.state.pos += ch <= 0xffff ? 1 : 2;
      } else if (ch === 92) {
        // "\"
        this.state.containsEsc = true;

        word += this.input.slice(chunkStart, this.state.pos);
        var escStart = this.state.pos;

        if (this.input.charCodeAt(++this.state.pos) !== 117) {
          // "u"
          this.raise(this.state.pos, "Expecting Unicode escape sequence \\uXXXX");
        }

        ++this.state.pos;
        var esc = this.readCodePoint(true);
        if (!(first ? isIdentifierStart : isIdentifierChar)(esc, true)) {
          this.raise(escStart, "Invalid Unicode escape");
        }

        word += codePointToString(esc);
        chunkStart = this.state.pos;
      } else {
        break;
      }
      first = false;
    }
    return word + this.input.slice(chunkStart, this.state.pos);
  };

  // Read an identifier or keyword token. Will check for reserved
  // words when necessary.

  Tokenizer.prototype.readWord = function readWord() {
    var word = this.readWord1();
    var type = types.name;
    if (!this.state.containsEsc && this.isKeyword(word)) {
      type = keywords[word];
    }
    return this.finishToken(type, word);
  };

  Tokenizer.prototype.braceIsBlock = function braceIsBlock(prevType) {
    if (prevType === types.colon) {
      var parent = this.curContext();
      if (parent === types$1.braceStatement || parent === types$1.braceExpression) {
        return !parent.isExpr;
      }
    }

    if (prevType === types._return) {
      return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));
    }

    if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR) {
      return true;
    }

    if (prevType === types.braceL) {
      return this.curContext() === types$1.braceStatement;
    }

    return !this.state.exprAllowed;
  };

  Tokenizer.prototype.updateContext = function updateContext(prevType) {
    var type = this.state.type;
    var update = void 0;

    if (type.keyword && prevType === types.dot) {
      this.state.exprAllowed = false;
    } else if (update = type.updateContext) {
      update.call(this, prevType);
    } else {
      this.state.exprAllowed = type.beforeExpr;
    }
  };

  return Tokenizer;
}();

var plugins = {};
var frozenDeprecatedWildcardPluginList = ["jsx", "doExpressions", "objectRestSpread", "decorators", "classProperties", "exportExtensions", "asyncGenerators", "functionBind", "functionSent", "dynamicImport", "flow"];

var Parser = function (_Tokenizer) {
  inherits(Parser, _Tokenizer);

  function Parser(options, input) {
    classCallCheck(this, Parser);

    options = getOptions(options);

    var _this = possibleConstructorReturn(this, _Tokenizer.call(this, options, input));

    _this.options = options;
    _this.inModule = _this.options.sourceType === "module";
    _this.input = input;
    _this.plugins = _this.loadPlugins(_this.options.plugins);
    _this.filename = options.sourceFilename;

    // If enabled, skip leading hashbang line.
    if (_this.state.pos === 0 && _this.input[0] === "#" && _this.input[1] === "!") {
      _this.skipLineComment(2);
    }
    return _this;
  }

  Parser.prototype.isReservedWord = function isReservedWord(word) {
    if (word === "await") {
      return this.inModule;
    } else {
      return reservedWords[6](word);
    }
  };

  Parser.prototype.hasPlugin = function hasPlugin(name) {
    if (this.plugins["*"] && frozenDeprecatedWildcardPluginList.indexOf(name) > -1) {
      return true;
    }

    return !!this.plugins[name];
  };

  Parser.prototype.extend = function extend(name, f) {
    this[name] = f(this[name]);
  };

  Parser.prototype.loadAllPlugins = function loadAllPlugins() {
    var _this2 = this;

    // ensure flow plugin loads last, also ensure estree is not loaded with *
    var pluginNames = Object.keys(plugins).filter(function (name) {
      return name !== "flow" && name !== "estree";
    });
    pluginNames.push("flow");

    pluginNames.forEach(function (name) {
      var plugin = plugins[name];
      if (plugin) plugin(_this2);
    });
  };

  Parser.prototype.loadPlugins = function loadPlugins(pluginList) {
    // TODO: Deprecate "*" option in next major version of Babylon
    if (pluginList.indexOf("*") >= 0) {
      this.loadAllPlugins();

      return { "*": true };
    }

    var pluginMap = {};

    if (pluginList.indexOf("flow") >= 0) {
      // ensure flow plugin loads last
      pluginList = pluginList.filter(function (plugin) {
        return plugin !== "flow";
      });
      pluginList.push("flow");
    }

    if (pluginList.indexOf("estree") >= 0) {
      // ensure estree plugin loads first
      pluginList = pluginList.filter(function (plugin) {
        return plugin !== "estree";
      });
      pluginList.unshift("estree");
    }

    for (var _iterator = pluginList, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
      var _ref;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var name = _ref;

      if (!pluginMap[name]) {
        pluginMap[name] = true;

        var plugin = plugins[name];
        if (plugin) plugin(this);
      }
    }

    return pluginMap;
  };

  Parser.prototype.parse = function parse() {
    var file = this.startNode();
    var program = this.startNode();
    this.nextToken();
    return this.parseTopLevel(file, program);
  };

  return Parser;
}(Tokenizer);

var pp = Parser.prototype;

// ## Parser utilities

// TODO

pp.addExtra = function (node, key, val) {
  if (!node) return;

  var extra = node.extra = node.extra || {};
  extra[key] = val;
};

// TODO

pp.isRelational = function (op) {
  return this.match(types.relational) && this.state.value === op;
};

// TODO

pp.expectRelational = function (op) {
  if (this.isRelational(op)) {
    this.next();
  } else {
    this.unexpected(null, types.relational);
  }
};

// Tests whether parsed token is a contextual keyword.

pp.isContextual = function (name) {
  return this.match(types.name) && this.state.value === name;
};

// Consumes contextual keyword if possible.

pp.eatContextual = function (name) {
  return this.state.value === name && this.eat(types.name);
};

// Asserts that following token is given contextual keyword.

pp.expectContextual = function (name, message) {
  if (!this.eatContextual(name)) this.unexpected(null, message);
};

// Test whether a semicolon can be inserted at the current position.

pp.canInsertSemicolon = function () {
  return this.match(types.eof) || this.match(types.braceR) || lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));
};

// TODO

pp.isLineTerminator = function () {
  return this.eat(types.semi) || this.canInsertSemicolon();
};

// Consume a semicolon, or, failing that, see if we are allowed to
// pretend that there is a semicolon at this position.

pp.semicolon = function () {
  if (!this.isLineTerminator()) this.unexpected(null, types.semi);
};

// Expect a token of a given type. If found, consume it, otherwise,
// raise an unexpected token error at given pos.

pp.expect = function (type, pos) {
  return this.eat(type) || this.unexpected(pos, type);
};

// Raise an unexpected token error. Can take the expected token type
// instead of a message string.

pp.unexpected = function (pos) {
  var messageOrType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "Unexpected token";

  if (messageOrType && (typeof messageOrType === "undefined" ? "undefined" : _typeof(messageOrType)) === "object" && messageOrType.label) {
    messageOrType = "Unexpected token, expected " + messageOrType.label;
  }
  this.raise(pos != null ? pos : this.state.start, messageOrType);
};

/* eslint max-len: 0 */

var pp$1 = Parser.prototype;

// ### Statement parsing

// Parse a program. Initializes the parser, reads any number of
// statements, and wraps them in a Program node.  Optionally takes a
// `program` argument.  If present, the statements will be appended
// to its body instead of creating a new node.

pp$1.parseTopLevel = function (file, program) {
  program.sourceType = this.options.sourceType;

  this.parseBlockBody(program, true, true, types.eof);

  file.program = this.finishNode(program, "Program");
  file.comments = this.state.comments;
  file.tokens = this.state.tokens;

  return this.finishNode(file, "File");
};

var loopLabel = { kind: "loop" };
var switchLabel = { kind: "switch" };

// TODO

pp$1.stmtToDirective = function (stmt) {
  var expr = stmt.expression;

  var directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);
  var directive = this.startNodeAt(stmt.start, stmt.loc.start);

  var raw = this.input.slice(expr.start, expr.end);
  var val = directiveLiteral.value = raw.slice(1, -1); // remove quotes

  this.addExtra(directiveLiteral, "raw", raw);
  this.addExtra(directiveLiteral, "rawValue", val);

  directive.value = this.finishNodeAt(directiveLiteral, "DirectiveLiteral", expr.end, expr.loc.end);

  return this.finishNodeAt(directive, "Directive", stmt.end, stmt.loc.end);
};

// Parse a single statement.
//
// If expecting a statement and finding a slash operator, parse a
// regular expression literal. This is to handle cases like
// `if (foo) /blah/.exec(foo)`, where looking at the previous token
// does not help.

pp$1.parseStatement = function (declaration, topLevel) {
  if (this.match(types.at)) {
    this.parseDecorators(true);
  }

  var starttype = this.state.type;
  var node = this.startNode();

  // Most types of statements are recognized by the keyword they
  // start with. Many are trivial to parse, some require a bit of
  // complexity.

  switch (starttype) {
    case types._break:case types._continue:
      return this.parseBreakContinueStatement(node, starttype.keyword);
    case types._debugger:
      return this.parseDebuggerStatement(node);
    case types._do:
      return this.parseDoStatement(node);
    case types._for:
      return this.parseForStatement(node);
    case types._function:
      if (!declaration) this.unexpected();
      return this.parseFunctionStatement(node);

    case types._class:
      if (!declaration) this.unexpected();
      return this.parseClass(node, true);

    case types._if:
      return this.parseIfStatement(node);
    case types._return:
      return this.parseReturnStatement(node);
    case types._switch:
      return this.parseSwitchStatement(node);
    case types._throw:
      return this.parseThrowStatement(node);
    case types._try:
      return this.parseTryStatement(node);

    case types._let:
    case types._const:
      if (!declaration) this.unexpected(); // NOTE: falls through to _var

    case types._var:
      return this.parseVarStatement(node, starttype);

    case types._while:
      return this.parseWhileStatement(node);
    case types._with:
      return this.parseWithStatement(node);
    case types.braceL:
      return this.parseBlock();
    case types.semi:
      return this.parseEmptyStatement(node);
    case types._export:
    case types._import:
      if (this.hasPlugin("dynamicImport") && this.lookahead().type === types.parenL) break;

      if (!this.options.allowImportExportEverywhere) {
        if (!topLevel) {
          this.raise(this.state.start, "'import' and 'export' may only appear at the top level");
        }

        if (!this.inModule) {
          this.raise(this.state.start, "'import' and 'export' may appear only with 'sourceType: \"module\"'");
        }
      }
      return starttype === types._import ? this.parseImport(node) : this.parseExport(node);

    case types.name:
      if (this.state.value === "async") {
        // peek ahead and see if next token is a function
        var state = this.state.clone();
        this.next();
        if (this.match(types._function) && !this.canInsertSemicolon()) {
          this.expect(types._function);
          return this.parseFunction(node, true, false, true);
        } else {
          this.state = state;
        }
      }
  }

  // If the statement does not start with a statement keyword or a
  // brace, it's an ExpressionStatement or LabeledStatement. We
  // simply start parsing an expression, and afterwards, if the
  // next token is a colon and the expression was a simple
  // Identifier node, we switch to interpreting it as a label.
  var maybeName = this.state.value;
  var expr = this.parseExpression();

  if (starttype === types.name && expr.type === "Identifier" && this.eat(types.colon)) {
    return this.parseLabeledStatement(node, maybeName, expr);
  } else {
    return this.parseExpressionStatement(node, expr);
  }
};

pp$1.takeDecorators = function (node) {
  if (this.state.decorators.length) {
    node.decorators = this.state.decorators;
    this.state.decorators = [];
  }
};

pp$1.parseDecorators = function (allowExport) {
  while (this.match(types.at)) {
    var decorator = this.parseDecorator();
    this.state.decorators.push(decorator);
  }

  if (allowExport && this.match(types._export)) {
    return;
  }

  if (!this.match(types._class)) {
    this.raise(this.state.start, "Leading decorators must be attached to a class declaration");
  }
};

pp$1.parseDecorator = function () {
  if (!this.hasPlugin("decorators")) {
    this.unexpected();
  }
  var node = this.startNode();
  this.next();
  node.expression = this.parseMaybeAssign();
  return this.finishNode(node, "Decorator");
};

pp$1.parseBreakContinueStatement = function (node, keyword) {
  var isBreak = keyword === "break";
  this.next();

  if (this.isLineTerminator()) {
    node.label = null;
  } else if (!this.match(types.name)) {
    this.unexpected();
  } else {
    node.label = this.parseIdentifier();
    this.semicolon();
  }

  // Verify that there is an actual destination to break or
  // continue to.
  var i = void 0;
  for (i = 0; i < this.state.labels.length; ++i) {
    var lab = this.state.labels[i];
    if (node.label == null || lab.name === node.label.name) {
      if (lab.kind != null && (isBreak || lab.kind === "loop")) break;
      if (node.label && isBreak) break;
    }
  }
  if (i === this.state.labels.length) this.raise(node.start, "Unsyntactic " + keyword);
  return this.finishNode(node, isBreak ? "BreakStatement" : "ContinueStatement");
};

pp$1.parseDebuggerStatement = function (node) {
  this.next();
  this.semicolon();
  return this.finishNode(node, "DebuggerStatement");
};

pp$1.parseDoStatement = function (node) {
  this.next();
  this.state.labels.push(loopLabel);
  node.body = this.parseStatement(false);
  this.state.labels.pop();
  this.expect(types._while);
  node.test = this.parseParenExpression();
  this.eat(types.semi);
  return this.finishNode(node, "DoWhileStatement");
};

// Disambiguating between a `for` and a `for`/`in` or `for`/`of`
// loop is non-trivial. Basically, we have to parse the init `var`
// statement or expression, disallowing the `in` operator (see
// the second parameter to `parseExpression`), and then check
// whether the next token is `in` or `of`. When there is no init
// part (semicolon immediately after the opening parenthesis), it
// is a regular `for` loop.

pp$1.parseForStatement = function (node) {
  this.next();
  this.state.labels.push(loopLabel);

  var forAwait = false;
  if (this.hasPlugin("asyncGenerators") && this.state.inAsync && this.isContextual("await")) {
    forAwait = true;
    this.next();
  }
  this.expect(types.parenL);

  if (this.match(types.semi)) {
    if (forAwait) {
      this.unexpected();
    }
    return this.parseFor(node, null);
  }

  if (this.match(types._var) || this.match(types._let) || this.match(types._const)) {
    var _init = this.startNode();
    var varKind = this.state.type;
    this.next();
    this.parseVar(_init, true, varKind);
    this.finishNode(_init, "VariableDeclaration");

    if (this.match(types._in) || this.isContextual("of")) {
      if (_init.declarations.length === 1 && !_init.declarations[0].init) {
        return this.parseForIn(node, _init, forAwait);
      }
    }
    if (forAwait) {
      this.unexpected();
    }
    return this.parseFor(node, _init);
  }

  var refShorthandDefaultPos = { start: 0 };
  var init = this.parseExpression(true, refShorthandDefaultPos);
  if (this.match(types._in) || this.isContextual("of")) {
    var description = this.isContextual("of") ? "for-of statement" : "for-in statement";
    this.toAssignable(init, undefined, description);
    this.checkLVal(init, undefined, undefined, description);
    return this.parseForIn(node, init, forAwait);
  } else if (refShorthandDefaultPos.start) {
    this.unexpected(refShorthandDefaultPos.start);
  }
  if (forAwait) {
    this.unexpected();
  }
  return this.parseFor(node, init);
};

pp$1.parseFunctionStatement = function (node) {
  this.next();
  return this.parseFunction(node, true);
};

pp$1.parseIfStatement = function (node) {
  this.next();
  node.test = this.parseParenExpression();
  node.consequent = this.parseStatement(false);
  node.alternate = this.eat(types._else) ? this.parseStatement(false) : null;
  return this.finishNode(node, "IfStatement");
};

pp$1.parseReturnStatement = function (node) {
  if (!this.state.inFunction && !this.options.allowReturnOutsideFunction) {
    this.raise(this.state.start, "'return' outside of function");
  }

  this.next();

  // In `return` (and `break`/`continue`), the keywords with
  // optional arguments, we eagerly look for a semicolon or the
  // possibility to insert one.

  if (this.isLineTerminator()) {
    node.argument = null;
  } else {
    node.argument = this.parseExpression();
    this.semicolon();
  }

  return this.finishNode(node, "ReturnStatement");
};

pp$1.parseSwitchStatement = function (node) {
  this.next();
  node.discriminant = this.parseParenExpression();
  node.cases = [];
  this.expect(types.braceL);
  this.state.labels.push(switchLabel);

  // Statements under must be grouped (by label) in SwitchCase
  // nodes. `cur` is used to keep the node that we are currently
  // adding statements to.

  var cur = void 0;
  for (var sawDefault; !this.match(types.braceR);) {
    if (this.match(types._case) || this.match(types._default)) {
      var isCase = this.match(types._case);
      if (cur) this.finishNode(cur, "SwitchCase");
      node.cases.push(cur = this.startNode());
      cur.consequent = [];
      this.next();
      if (isCase) {
        cur.test = this.parseExpression();
      } else {
        if (sawDefault) this.raise(this.state.lastTokStart, "Multiple default clauses");
        sawDefault = true;
        cur.test = null;
      }
      this.expect(types.colon);
    } else {
      if (cur) {
        cur.consequent.push(this.parseStatement(true));
      } else {
        this.unexpected();
      }
    }
  }
  if (cur) this.finishNode(cur, "SwitchCase");
  this.next(); // Closing brace
  this.state.labels.pop();
  return this.finishNode(node, "SwitchStatement");
};

pp$1.parseThrowStatement = function (node) {
  this.next();
  if (lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start))) this.raise(this.state.lastTokEnd, "Illegal newline after throw");
  node.argument = this.parseExpression();
  this.semicolon();
  return this.finishNode(node, "ThrowStatement");
};

// Reused empty array added for node fields that are always empty.

var empty = [];

pp$1.parseTryStatement = function (node) {
  this.next();

  node.block = this.parseBlock();
  node.handler = null;

  if (this.match(types._catch)) {
    var clause = this.startNode();
    this.next();

    this.expect(types.parenL);
    clause.param = this.parseBindingAtom();
    this.checkLVal(clause.param, true, Object.create(null), "catch clause");
    this.expect(types.parenR);

    clause.body = this.parseBlock();
    node.handler = this.finishNode(clause, "CatchClause");
  }

  node.guardedHandlers = empty;
  node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;

  if (!node.handler && !node.finalizer) {
    this.raise(node.start, "Missing catch or finally clause");
  }

  return this.finishNode(node, "TryStatement");
};

pp$1.parseVarStatement = function (node, kind) {
  this.next();
  this.parseVar(node, false, kind);
  this.semicolon();
  return this.finishNode(node, "VariableDeclaration");
};

pp$1.parseWhileStatement = function (node) {
  this.next();
  node.test = this.parseParenExpression();
  this.state.labels.push(loopLabel);
  node.body = this.parseStatement(false);
  this.state.labels.pop();
  return this.finishNode(node, "WhileStatement");
};

pp$1.parseWithStatement = function (node) {
  if (this.state.strict) this.raise(this.state.start, "'with' in strict mode");
  this.next();
  node.object = this.parseParenExpression();
  node.body = this.parseStatement(false);
  return this.finishNode(node, "WithStatement");
};

pp$1.parseEmptyStatement = function (node) {
  this.next();
  return this.finishNode(node, "EmptyStatement");
};

pp$1.parseLabeledStatement = function (node, maybeName, expr) {
  for (var _iterator = this.state.labels, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
    var _ref;

    if (_isArray) {
      if (_i >= _iterator.length) break;
      _ref = _iterator[_i++];
    } else {
      _i = _iterator.next();
      if (_i.done) break;
      _ref = _i.value;
    }

    var _label = _ref;

    if (_label.name === maybeName) {
      this.raise(expr.start, "Label '" + maybeName + "' is already declared");
    }
  }

  var kind = this.state.type.isLoop ? "loop" : this.match(types._switch) ? "switch" : null;
  for (var i = this.state.labels.length - 1; i >= 0; i--) {
    var label = this.state.labels[i];
    if (label.statementStart === node.start) {
      label.statementStart = this.state.start;
      label.kind = kind;
    } else {
      break;
    }
  }

  this.state.labels.push({ name: maybeName, kind: kind, statementStart: this.state.start });
  node.body = this.parseStatement(true);
  this.state.labels.pop();
  node.label = expr;
  return this.finishNode(node, "LabeledStatement");
};

pp$1.parseExpressionStatement = function (node, expr) {
  node.expression = expr;
  this.semicolon();
  return this.finishNode(node, "ExpressionStatement");
};

// Parse a semicolon-enclosed block of statements, handling `"use
// strict"` declarations when `allowStrict` is true (used for
// function bodies).

pp$1.parseBlock = function (allowDirectives) {
  var node = this.startNode();
  this.expect(types.braceL);
  this.parseBlockBody(node, allowDirectives, false, types.braceR);
  return this.finishNode(node, "BlockStatement");
};

pp$1.isValidDirective = function (stmt) {
  return stmt.type === "ExpressionStatement" && stmt.expression.type === "StringLiteral" && !stmt.expression.extra.parenthesized;
};

pp$1.parseBlockBody = function (node, allowDirectives, topLevel, end) {
  node.body = [];
  node.directives = [];

  var parsedNonDirective = false;
  var oldStrict = void 0;
  var octalPosition = void 0;

  while (!this.eat(end)) {
    if (!parsedNonDirective && this.state.containsOctal && !octalPosition) {
      octalPosition = this.state.octalPosition;
    }

    var stmt = this.parseStatement(true, topLevel);

    if (allowDirectives && !parsedNonDirective && this.isValidDirective(stmt)) {
      var directive = this.stmtToDirective(stmt);
      node.directives.push(directive);

      if (oldStrict === undefined && directive.value.value === "use strict") {
        oldStrict = this.state.strict;
        this.setStrict(true);

        if (octalPosition) {
          this.raise(octalPosition, "Octal literal in strict mode");
        }
      }

      continue;
    }

    parsedNonDirective = true;
    node.body.push(stmt);
  }

  if (oldStrict === false) {
    this.setStrict(false);
  }
};

// Parse a regular `for` loop. The disambiguation code in
// `parseStatement` will already have parsed the init statement or
// expression.

pp$1.parseFor = function (node, init) {
  node.init = init;
  this.expect(types.semi);
  node.test = this.match(types.semi) ? null : this.parseExpression();
  this.expect(types.semi);
  node.update = this.match(types.parenR) ? null : this.parseExpression();
  this.expect(types.parenR);
  node.body = this.parseStatement(false);
  this.state.labels.pop();
  return this.finishNode(node, "ForStatement");
};

// Parse a `for`/`in` and `for`/`of` loop, which are almost
// same from parser's perspective.

pp$1.parseForIn = function (node, init, forAwait) {
  var type = void 0;
  if (forAwait) {
    this.eatContextual("of");
    type = "ForAwaitStatement";
  } else {
    type = this.match(types._in) ? "ForInStatement" : "ForOfStatement";
    this.next();
  }
  node.left = init;
  node.right = this.parseExpression();
  this.expect(types.parenR);
  node.body = this.parseStatement(false);
  this.state.labels.pop();
  return this.finishNode(node, type);
};

// Parse a list of variable declarations.

pp$1.parseVar = function (node, isFor, kind) {
  node.declarations = [];
  node.kind = kind.keyword;
  for (;;) {
    var decl = this.startNode();
    this.parseVarHead(decl);
    if (this.eat(types.eq)) {
      decl.init = this.parseMaybeAssign(isFor);
    } else if (kind === types._const && !(this.match(types._in) || this.isContextual("of"))) {
      this.unexpected();
    } else if (decl.id.type !== "Identifier" && !(isFor && (this.match(types._in) || this.isContextual("of")))) {
      this.raise(this.state.lastTokEnd, "Complex binding patterns require an initialization value");
    } else {
      decl.init = null;
    }
    node.declarations.push(this.finishNode(decl, "VariableDeclarator"));
    if (!this.eat(types.comma)) break;
  }
  return node;
};

pp$1.parseVarHead = function (decl) {
  decl.id = this.parseBindingAtom();
  this.checkLVal(decl.id, true, undefined, "variable declaration");
};

// Parse a function declaration or literal (depending on the
// `isStatement` parameter).

pp$1.parseFunction = function (node, isStatement, allowExpressionBody, isAsync, optionalId) {
  var oldInMethod = this.state.inMethod;
  this.state.inMethod = false;

  this.initFunction(node, isAsync);

  if (this.match(types.star)) {
    if (node.async && !this.hasPlugin("asyncGenerators")) {
      this.unexpected();
    } else {
      node.generator = true;
      this.next();
    }
  }

  if (isStatement && !optionalId && !this.match(types.name) && !this.match(types._yield)) {
    this.unexpected();
  }

  if (this.match(types.name) || this.match(types._yield)) {
    node.id = this.parseBindingIdentifier();
  }

  this.parseFunctionParams(node);
  this.parseFunctionBody(node, allowExpressionBody);

  this.state.inMethod = oldInMethod;

  return this.finishNode(node, isStatement ? "FunctionDeclaration" : "FunctionExpression");
};

pp$1.parseFunctionParams = function (node) {
  this.expect(types.parenL);
  node.params = this.parseBindingList(types.parenR);
};

// Parse a class declaration or literal (depending on the
// `isStatement` parameter).

pp$1.parseClass = function (node, isStatement, optionalId) {
  this.next();
  this.takeDecorators(node);
  this.parseClassId(node, isStatement, optionalId);
  this.parseClassSuper(node);
  this.parseClassBody(node);
  return this.finishNode(node, isStatement ? "ClassDeclaration" : "ClassExpression");
};

pp$1.isClassProperty = function () {
  return this.match(types.eq) || this.match(types.semi) || this.match(types.braceR);
};

pp$1.isClassMethod = function () {
  return this.match(types.parenL);
};

pp$1.isNonstaticConstructor = function (method) {
  return !method.computed && !method.static && (method.key.name === "constructor" || // Identifier
  method.key.value === "constructor" // Literal
  );
};

pp$1.parseClassBody = function (node) {
  // class bodies are implicitly strict
  var oldStrict = this.state.strict;
  this.state.strict = true;

  var hadConstructorCall = false;
  var hadConstructor = false;
  var decorators = [];
  var classBody = this.startNode();

  classBody.body = [];

  this.expect(types.braceL);

  while (!this.eat(types.braceR)) {
    if (this.eat(types.semi)) {
      if (decorators.length > 0) {
        this.raise(this.state.lastTokEnd, "Decorators must not be followed by a semicolon");
      }
      continue;
    }

    if (this.match(types.at)) {
      decorators.push(this.parseDecorator());
      continue;
    }

    var method = this.startNode();

    // steal the decorators if there are any
    if (decorators.length) {
      method.decorators = decorators;
      decorators = [];
    }

    method.static = false;
    if (this.match(types.name) && this.state.value === "static") {
      var key = this.parseIdentifier(true); // eats 'static'
      if (this.isClassMethod()) {
        // a method named 'static'
        method.kind = "method";
        method.computed = false;
        method.key = key;
        this.parseClassMethod(classBody, method, false, false);
        continue;
      } else if (this.isClassProperty()) {
        // a property named 'static'
        method.computed = false;
        method.key = key;
        classBody.body.push(this.parseClassProperty(method));
        continue;
      }
      // otherwise something static
      method.static = true;
    }

    if (this.eat(types.star)) {
      // a generator
      method.kind = "method";
      this.parsePropertyName(method);
      if (this.isNonstaticConstructor(method)) {
        this.raise(method.key.start, "Constructor can't be a generator");
      }
      if (!method.computed && method.static && (method.key.name === "prototype" || method.key.value === "prototype")) {
        this.raise(method.key.start, "Classes may not have static property named prototype");
      }
      this.parseClassMethod(classBody, method, true, false);
    } else {
      var isSimple = this.match(types.name);
      var _key = this.parsePropertyName(method);
      if (!method.computed && method.static && (method.key.name === "prototype" || method.key.value === "prototype")) {
        this.raise(method.key.start, "Classes may not have static property named prototype");
      }
      if (this.isClassMethod()) {
        // a normal method
        if (this.isNonstaticConstructor(method)) {
          if (hadConstructor) {
            this.raise(_key.start, "Duplicate constructor in the same class");
          } else if (method.decorators) {
            this.raise(method.start, "You can't attach decorators to a class constructor");
          }
          hadConstructor = true;
          method.kind = "constructor";
        } else {
          method.kind = "method";
        }
        this.parseClassMethod(classBody, method, false, false);
      } else if (this.isClassProperty()) {
        // a normal property
        if (this.isNonstaticConstructor(method)) {
          this.raise(method.key.start, "Classes may not have a non-static field named 'constructor'");
        }
        classBody.body.push(this.parseClassProperty(method));
      } else if (isSimple && _key.name === "async" && !this.isLineTerminator()) {
        // an async method
        var isGenerator = this.hasPlugin("asyncGenerators") && this.eat(types.star);
        method.kind = "method";
        this.parsePropertyName(method);
        if (this.isNonstaticConstructor(method)) {
          this.raise(method.key.start, "Constructor can't be an async function");
        }
        this.parseClassMethod(classBody, method, isGenerator, true);
      } else if (isSimple && (_key.name === "get" || _key.name === "set") && !(this.isLineTerminator() && this.match(types.star))) {
        // `get\n*` is an uninitialized property named 'get' followed by a generator.
        // a getter or setter
        method.kind = _key.name;
        this.parsePropertyName(method);
        if (this.isNonstaticConstructor(method)) {
          this.raise(method.key.start, "Constructor can't have get/set modifier");
        }
        this.parseClassMethod(classBody, method, false, false);
        this.checkGetterSetterParamCount(method);
      } else if (this.hasPlugin("classConstructorCall") && isSimple && _key.name === "call" && this.match(types.name) && this.state.value === "constructor") {
        // a (deprecated) call constructor
        if (hadConstructorCall) {
          this.raise(method.start, "Duplicate constructor call in the same class");
        } else if (method.decorators) {
          this.raise(method.start, "You can't attach decorators to a class constructor");
        }
        hadConstructorCall = true;
        method.kind = "constructorCall";
        this.parsePropertyName(method); // consume "constructor" and make it the method's name
        this.parseClassMethod(classBody, method, false, false);
      } else if (this.isLineTerminator()) {
        // an uninitialized class property (due to ASI, since we don't otherwise recognize the next token)
        if (this.isNonstaticConstructor(method)) {
          this.raise(method.key.start, "Classes may not have a non-static field named 'constructor'");
        }
        classBody.body.push(this.parseClassProperty(method));
      } else {
        this.unexpected();
      }
    }
  }

  if (decorators.length) {
    this.raise(this.state.start, "You have trailing decorators with no method");
  }

  node.body = this.finishNode(classBody, "ClassBody");

  this.state.strict = oldStrict;
};

pp$1.parseClassProperty = function (node) {
  this.state.inClassProperty = true;
  if (this.match(types.eq)) {
    if (!this.hasPlugin("classProperties")) this.unexpected();
    this.next();
    node.value = this.parseMaybeAssign();
  } else {
    node.value = null;
  }
  this.semicolon();
  this.state.inClassProperty = false;
  return this.finishNode(node, "ClassProperty");
};

pp$1.parseClassMethod = function (classBody, method, isGenerator, isAsync) {
  this.parseMethod(method, isGenerator, isAsync);
  classBody.body.push(this.finishNode(method, "ClassMethod"));
};

pp$1.parseClassId = function (node, isStatement, optionalId) {
  if (this.match(types.name)) {
    node.id = this.parseIdentifier();
  } else {
    if (optionalId || !isStatement) {
      node.id = null;
    } else {
      this.unexpected();
    }
  }
};

pp$1.parseClassSuper = function (node) {
  node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;
};

// Parses module export declaration.

pp$1.parseExport = function (node) {
  this.next();
  // export * from '...'
  if (this.match(types.star)) {
    var specifier = this.startNode();
    this.next();
    if (this.hasPlugin("exportExtensions") && this.eatContextual("as")) {
      specifier.exported = this.parseIdentifier();
      node.specifiers = [this.finishNode(specifier, "ExportNamespaceSpecifier")];
      this.parseExportSpecifiersMaybe(node);
      this.parseExportFrom(node, true);
    } else {
      this.parseExportFrom(node, true);
      return this.finishNode(node, "ExportAllDeclaration");
    }
  } else if (this.hasPlugin("exportExtensions") && this.isExportDefaultSpecifier()) {
    var _specifier = this.startNode();
    _specifier.exported = this.parseIdentifier(true);
    node.specifiers = [this.finishNode(_specifier, "ExportDefaultSpecifier")];
    if (this.match(types.comma) && this.lookahead().type === types.star) {
      this.expect(types.comma);
      var _specifier2 = this.startNode();
      this.expect(types.star);
      this.expectContextual("as");
      _specifier2.exported = this.parseIdentifier();
      node.specifiers.push(this.finishNode(_specifier2, "ExportNamespaceSpecifier"));
    } else {
      this.parseExportSpecifiersMaybe(node);
    }
    this.parseExportFrom(node, true);
  } else if (this.eat(types._default)) {
    // export default ...
    var expr = this.startNode();
    var needsSemi = false;
    if (this.eat(types._function)) {
      expr = this.parseFunction(expr, true, false, false, true);
    } else if (this.match(types._class)) {
      expr = this.parseClass(expr, true, true);
    } else {
      needsSemi = true;
      expr = this.parseMaybeAssign();
    }
    node.declaration = expr;
    if (needsSemi) this.semicolon();
    this.checkExport(node, true, true);
    return this.finishNode(node, "ExportDefaultDeclaration");
  } else if (this.shouldParseExportDeclaration()) {
    node.specifiers = [];
    node.source = null;
    node.declaration = this.parseExportDeclaration(node);
  } else {
    // export { x, y as z } [from '...']
    node.declaration = null;
    node.specifiers = this.parseExportSpecifiers();
    this.parseExportFrom(node);
  }
  this.checkExport(node, true);
  return this.finishNode(node, "ExportNamedDeclaration");
};

pp$1.parseExportDeclaration = function () {
  return this.parseStatement(true);
};

pp$1.isExportDefaultSpecifier = function () {
  if (this.match(types.name)) {
    return this.state.value !== "async";
  }

  if (!this.match(types._default)) {
    return false;
  }

  var lookahead = this.lookahead();
  return lookahead.type === types.comma || lookahead.type === types.name && lookahead.value === "from";
};

pp$1.parseExportSpecifiersMaybe = function (node) {
  if (this.eat(types.comma)) {
    node.specifiers = node.specifiers.concat(this.parseExportSpecifiers());
  }
};

pp$1.parseExportFrom = function (node, expect) {
  if (this.eatContextual("from")) {
    node.source = this.match(types.string) ? this.parseExprAtom() : this.unexpected();
    this.checkExport(node);
  } else {
    if (expect) {
      this.unexpected();
    } else {
      node.source = null;
    }
  }

  this.semicolon();
};

pp$1.shouldParseExportDeclaration = function () {
  return this.state.type.keyword === "var" || this.state.type.keyword === "const" || this.state.type.keyword === "let" || this.state.type.keyword === "function" || this.state.type.keyword === "class" || this.isContextual("async");
};

pp$1.checkExport = function (node, checkNames, isDefault) {
  if (checkNames) {
    // Check for duplicate exports
    if (isDefault) {
      // Default exports
      this.checkDuplicateExports(node, "default");
    } else if (node.specifiers && node.specifiers.length) {
      // Named exports
      for (var _iterator2 = node.specifiers, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {
        var _ref2;

        if (_isArray2) {
          if (_i2 >= _iterator2.length) break;
          _ref2 = _iterator2[_i2++];
        } else {
          _i2 = _iterator2.next();
          if (_i2.done) break;
          _ref2 = _i2.value;
        }

        var specifier = _ref2;

        this.checkDuplicateExports(specifier, specifier.exported.name);
      }
    } else if (node.declaration) {
      // Exported declarations
      if (node.declaration.type === "FunctionDeclaration" || node.declaration.type === "ClassDeclaration") {
        this.checkDuplicateExports(node, node.declaration.id.name);
      } else if (node.declaration.type === "VariableDeclaration") {
        for (var _iterator3 = node.declaration.declarations, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {
          var _ref3;

          if (_isArray3) {
            if (_i3 >= _iterator3.length) break;
            _ref3 = _iterator3[_i3++];
          } else {
            _i3 = _iterator3.next();
            if (_i3.done) break;
            _ref3 = _i3.value;
          }

          var declaration = _ref3;

          this.checkDeclaration(declaration.id);
        }
      }
    }
  }

  if (this.state.decorators.length) {
    var isClass = node.declaration && (node.declaration.type === "ClassDeclaration" || node.declaration.type === "ClassExpression");
    if (!node.declaration || !isClass) {
      this.raise(node.start, "You can only use decorators on an export when exporting a class");
    }
    this.takeDecorators(node.declaration);
  }
};

pp$1.checkDeclaration = function (node) {
  if (node.type === "ObjectPattern") {
    for (var _iterator4 = node.properties, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {
      var _ref4;

      if (_isArray4) {
        if (_i4 >= _iterator4.length) break;
        _ref4 = _iterator4[_i4++];
      } else {
        _i4 = _iterator4.next();
        if (_i4.done) break;
        _ref4 = _i4.value;
      }

      var prop = _ref4;

      this.checkDeclaration(prop);
    }
  } else if (node.type === "ArrayPattern") {
    for (var _iterator5 = node.elements, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {
      var _ref5;

      if (_isArray5) {
        if (_i5 >= _iterator5.length) break;
        _ref5 = _iterator5[_i5++];
      } else {
        _i5 = _iterator5.next();
        if (_i5.done) break;
        _ref5 = _i5.value;
      }

      var elem = _ref5;

      if (elem) {
        this.checkDeclaration(elem);
      }
    }
  } else if (node.type === "ObjectProperty") {
    this.checkDeclaration(node.value);
  } else if (node.type === "RestElement" || node.type === "RestProperty") {
    this.checkDeclaration(node.argument);
  } else if (node.type === "Identifier") {
    this.checkDuplicateExports(node, node.name);
  }
};

pp$1.checkDuplicateExports = function (node, name) {
  if (this.state.exportedIdentifiers.indexOf(name) > -1) {
    this.raiseDuplicateExportError(node, name);
  }
  this.state.exportedIdentifiers.push(name);
};

pp$1.raiseDuplicateExportError = function (node, name) {
  this.raise(node.start, name === "default" ? "Only one default export allowed per module." : "`" + name + "` has already been exported. Exported identifiers must be unique.");
};

// Parses a comma-separated list of module exports.

pp$1.parseExportSpecifiers = function () {
  var nodes = [];
  var first = true;
  var needsFrom = void 0;

  // export { x, y as z } [from '...']
  this.expect(types.braceL);

  while (!this.eat(types.braceR)) {
    if (first) {
      first = false;
    } else {
      this.expect(types.comma);
      if (this.eat(types.braceR)) break;
    }

    var isDefault = this.match(types._default);
    if (isDefault && !needsFrom) needsFrom = true;

    var node = this.startNode();
    node.local = this.parseIdentifier(isDefault);
    node.exported = this.eatContextual("as") ? this.parseIdentifier(true) : node.local.__clone();
    nodes.push(this.finishNode(node, "ExportSpecifier"));
  }

  // https://github.com/ember-cli/ember-cli/pull/3739
  if (needsFrom && !this.isContextual("from")) {
    this.unexpected();
  }

  return nodes;
};

// Parses import declaration.

pp$1.parseImport = function (node) {
  this.eat(types._import);

  // import '...'
  if (this.match(types.string)) {
    node.specifiers = [];
    node.source = this.parseExprAtom();
  } else {
    node.specifiers = [];
    this.parseImportSpecifiers(node);
    this.expectContextual("from");
    node.source = this.match(types.string) ? this.parseExprAtom() : this.unexpected();
  }
  this.semicolon();
  return this.finishNode(node, "ImportDeclaration");
};

// Parses a comma-separated list of module imports.

pp$1.parseImportSpecifiers = function (node) {
  var first = true;
  if (this.match(types.name)) {
    // import defaultObj, { x, y as z } from '...'
    var startPos = this.state.start;
    var startLoc = this.state.startLoc;
    node.specifiers.push(this.parseImportSpecifierDefault(this.parseIdentifier(), startPos, startLoc));
    if (!this.eat(types.comma)) return;
  }

  if (this.match(types.star)) {
    var specifier = this.startNode();
    this.next();
    this.expectContextual("as");
    specifier.local = this.parseIdentifier();
    this.checkLVal(specifier.local, true, undefined, "import namespace specifier");
    node.specifiers.push(this.finishNode(specifier, "ImportNamespaceSpecifier"));
    return;
  }

  this.expect(types.braceL);
  while (!this.eat(types.braceR)) {
    if (first) {
      first = false;
    } else {
      // Detect an attempt to deep destructure
      if (this.eat(types.colon)) {
        this.unexpected(null, "ES2015 named imports do not destructure. Use another statement for destructuring after the import.");
      }

      this.expect(types.comma);
      if (this.eat(types.braceR)) break;
    }

    this.parseImportSpecifier(node);
  }
};

pp$1.parseImportSpecifier = function (node) {
  var specifier = this.startNode();
  specifier.imported = this.parseIdentifier(true);
  if (this.eatContextual("as")) {
    specifier.local = this.parseIdentifier();
  } else {
    this.checkReservedWord(specifier.imported.name, specifier.start, true, true);
    specifier.local = specifier.imported.__clone();
  }
  this.checkLVal(specifier.local, true, undefined, "import specifier");
  node.specifiers.push(this.finishNode(specifier, "ImportSpecifier"));
};

pp$1.parseImportSpecifierDefault = function (id, startPos, startLoc) {
  var node = this.startNodeAt(startPos, startLoc);
  node.local = id;
  this.checkLVal(node.local, true, undefined, "default import specifier");
  return this.finishNode(node, "ImportDefaultSpecifier");
};

var pp$2 = Parser.prototype;

// Convert existing expression atom to assignable pattern
// if possible.

pp$2.toAssignable = function (node, isBinding, contextDescription) {
  if (node) {
    switch (node.type) {
      case "Identifier":
      case "ObjectPattern":
      case "ArrayPattern":
      case "AssignmentPattern":
        break;

      case "ObjectExpression":
        node.type = "ObjectPattern";
        for (var _iterator = node.properties, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
          var _ref;

          if (_isArray) {
            if (_i >= _iterator.length) break;
            _ref = _iterator[_i++];
          } else {
            _i = _iterator.next();
            if (_i.done) break;
            _ref = _i.value;
          }

          var prop = _ref;

          if (prop.type === "ObjectMethod") {
            if (prop.kind === "get" || prop.kind === "set") {
              this.raise(prop.key.start, "Object pattern can't contain getter or setter");
            } else {
              this.raise(prop.key.start, "Object pattern can't contain methods");
            }
          } else {
            this.toAssignable(prop, isBinding, "object destructuring pattern");
          }
        }
        break;

      case "ObjectProperty":
        this.toAssignable(node.value, isBinding, contextDescription);
        break;

      case "SpreadProperty":
        node.type = "RestProperty";
        var arg = node.argument;
        this.toAssignable(arg, isBinding, contextDescription);
        break;

      case "ArrayExpression":
        node.type = "ArrayPattern";
        this.toAssignableList(node.elements, isBinding, contextDescription);
        break;

      case "AssignmentExpression":
        if (node.operator === "=") {
          node.type = "AssignmentPattern";
          delete node.operator;
        } else {
          this.raise(node.left.end, "Only '=' operator can be used for specifying default value.");
        }
        break;

      case "MemberExpression":
        if (!isBinding) break;

      default:
        {
          var message = "Invalid left-hand side" + (contextDescription ? " in " + contextDescription : /* istanbul ignore next */"expression");
          this.raise(node.start, message);
        }
    }
  }
  return node;
};

// Convert list of expression atoms to binding list.

pp$2.toAssignableList = function (exprList, isBinding, contextDescription) {
  var end = exprList.length;
  if (end) {
    var last = exprList[end - 1];
    if (last && last.type === "RestElement") {
      --end;
    } else if (last && last.type === "SpreadElement") {
      last.type = "RestElement";
      var arg = last.argument;
      this.toAssignable(arg, isBinding, contextDescription);
      if (arg.type !== "Identifier" && arg.type !== "MemberExpression" && arg.type !== "ArrayPattern") {
        this.unexpected(arg.start);
      }
      --end;
    }
  }
  for (var i = 0; i < end; i++) {
    var elt = exprList[i];
    if (elt) this.toAssignable(elt, isBinding, contextDescription);
  }
  return exprList;
};

// Convert list of expression atoms to a list of

pp$2.toReferencedList = function (exprList) {
  return exprList;
};

// Parses spread element.

pp$2.parseSpread = function (refShorthandDefaultPos) {
  var node = this.startNode();
  this.next();
  node.argument = this.parseMaybeAssign(false, refShorthandDefaultPos);
  return this.finishNode(node, "SpreadElement");
};

pp$2.parseRest = function () {
  var node = this.startNode();
  this.next();
  node.argument = this.parseBindingIdentifier();
  return this.finishNode(node, "RestElement");
};

pp$2.shouldAllowYieldIdentifier = function () {
  return this.match(types._yield) && !this.state.strict && !this.state.inGenerator;
};

pp$2.parseBindingIdentifier = function () {
  return this.parseIdentifier(this.shouldAllowYieldIdentifier());
};

// Parses lvalue (assignable) atom.

pp$2.parseBindingAtom = function () {
  switch (this.state.type) {
    case types._yield:
      if (this.state.strict || this.state.inGenerator) this.unexpected();
    // fall-through
    case types.name:
      return this.parseIdentifier(true);

    case types.bracketL:
      var node = this.startNode();
      this.next();
      node.elements = this.parseBindingList(types.bracketR, true);
      return this.finishNode(node, "ArrayPattern");

    case types.braceL:
      return this.parseObj(true);

    default:
      this.unexpected();
  }
};

pp$2.parseBindingList = function (close, allowEmpty) {
  var elts = [];
  var first = true;
  while (!this.eat(close)) {
    if (first) {
      first = false;
    } else {
      this.expect(types.comma);
    }
    if (allowEmpty && this.match(types.comma)) {
      elts.push(null);
    } else if (this.eat(close)) {
      break;
    } else if (this.match(types.ellipsis)) {
      elts.push(this.parseAssignableListItemTypes(this.parseRest()));
      this.expect(close);
      break;
    } else {
      var decorators = [];
      while (this.match(types.at)) {
        decorators.push(this.parseDecorator());
      }
      var left = this.parseMaybeDefault();
      if (decorators.length) {
        left.decorators = decorators;
      }
      this.parseAssignableListItemTypes(left);
      elts.push(this.parseMaybeDefault(left.start, left.loc.start, left));
    }
  }
  return elts;
};

pp$2.parseAssignableListItemTypes = function (param) {
  return param;
};

// Parses assignment pattern around given atom if possible.

pp$2.parseMaybeDefault = function (startPos, startLoc, left) {
  startLoc = startLoc || this.state.startLoc;
  startPos = startPos || this.state.start;
  left = left || this.parseBindingAtom();
  if (!this.eat(types.eq)) return left;

  var node = this.startNodeAt(startPos, startLoc);
  node.left = left;
  node.right = this.parseMaybeAssign();
  return this.finishNode(node, "AssignmentPattern");
};

// Verify that a node is an lval — something that can be assigned
// to.

pp$2.checkLVal = function (expr, isBinding, checkClashes, contextDescription) {
  switch (expr.type) {
    case "Identifier":
      this.checkReservedWord(expr.name, expr.start, false, true);

      if (checkClashes) {
        // we need to prefix this with an underscore for the cases where we have a key of
        // `__proto__`. there's a bug in old V8 where the following wouldn't work:
        //
        //   > var obj = Object.create(null);
        //   undefined
        //   > obj.__proto__
        //   null
        //   > obj.__proto__ = true;
        //   true
        //   > obj.__proto__
        //   null
        var key = "_" + expr.name;

        if (checkClashes[key]) {
          this.raise(expr.start, "Argument name clash in strict mode");
        } else {
          checkClashes[key] = true;
        }
      }
      break;

    case "MemberExpression":
      if (isBinding) this.raise(expr.start, (isBinding ? "Binding" : "Assigning to") + " member expression");
      break;

    case "ObjectPattern":
      for (var _iterator2 = expr.properties, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {
        var _ref2;

        if (_isArray2) {
          if (_i2 >= _iterator2.length) break;
          _ref2 = _iterator2[_i2++];
        } else {
          _i2 = _iterator2.next();
          if (_i2.done) break;
          _ref2 = _i2.value;
        }

        var prop = _ref2;

        if (prop.type === "ObjectProperty") prop = prop.value;
        this.checkLVal(prop, isBinding, checkClashes, "object destructuring pattern");
      }
      break;

    case "ArrayPattern":
      for (var _iterator3 = expr.elements, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {
        var _ref3;

        if (_isArray3) {
          if (_i3 >= _iterator3.length) break;
          _ref3 = _iterator3[_i3++];
        } else {
          _i3 = _iterator3.next();
          if (_i3.done) break;
          _ref3 = _i3.value;
        }

        var elem = _ref3;

        if (elem) this.checkLVal(elem, isBinding, checkClashes, "array destructuring pattern");
      }
      break;

    case "AssignmentPattern":
      this.checkLVal(expr.left, isBinding, checkClashes, "assignment pattern");
      break;

    case "RestProperty":
      this.checkLVal(expr.argument, isBinding, checkClashes, "rest property");
      break;

    case "RestElement":
      this.checkLVal(expr.argument, isBinding, checkClashes, "rest element");
      break;

    default:
      {
        var message = (isBinding ? /* istanbul ignore next */"Binding invalid" : "Invalid") + " left-hand side" + (contextDescription ? " in " + contextDescription : /* istanbul ignore next */"expression");
        this.raise(expr.start, message);
      }
  }
};

/* eslint max-len: 0 */

// A recursive descent parser operates by defining functions for all
// syntactic elements, and recursively calling those, each function
// advancing the input stream and returning an AST node. Precedence
// of constructs (for example, the fact that `!x[1]` means `!(x[1])`
// instead of `(!x)[1]` is handled by the fact that the parser
// function that parses unary prefix operators is called first, and
// in turn calls the function that parses `[]` subscripts — that
// way, it'll receive the node for `x[1]` already parsed, and wraps
// *that* in the unary operator node.
//
// Acorn uses an [operator precedence parser][opp] to handle binary
// operator precedence, because it is much more compact than using
// the technique outlined above, which uses different, nesting
// functions to specify precedence, for all of the ten binary
// precedence levels that JavaScript defines.
//
// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser

var pp$3 = Parser.prototype;

// Check if property name clashes with already added.
// Object/class getters and setters are not allowed to clash —
// either with each other or with an init property — and in
// strict mode, init properties are also not allowed to be repeated.

pp$3.checkPropClash = function (prop, propHash) {
  if (prop.computed || prop.kind) return;

  var key = prop.key;
  // It is either an Identifier or a String/NumericLiteral
  var name = key.type === "Identifier" ? key.name : String(key.value);

  if (name === "__proto__") {
    if (propHash.proto) this.raise(key.start, "Redefinition of __proto__ property");
    propHash.proto = true;
  }
};

// Convenience method to parse an Expression only
pp$3.getExpression = function () {
  this.nextToken();
  var expr = this.parseExpression();
  if (!this.match(types.eof)) {
    this.unexpected();
  }
  return expr;
};

// ### Expression parsing

// These nest, from the most general expression type at the top to
// 'atomic', nondivisible expression types at the bottom. Most of
// the functions will simply let the function (s) below them parse,
// and, *if* the syntactic construct they handle is present, wrap
// the AST node that the inner parser gave them in another node.

// Parse a full expression. The optional arguments are used to
// forbid the `in` operator (in for loops initialization expressions)
// and provide reference for storing '=' operator inside shorthand
// property assignment in contexts where both object expression
// and object pattern might appear (so it's possible to raise
// delayed syntax error at correct position).

pp$3.parseExpression = function (noIn, refShorthandDefaultPos) {
  var startPos = this.state.start;
  var startLoc = this.state.startLoc;
  var expr = this.parseMaybeAssign(noIn, refShorthandDefaultPos);
  if (this.match(types.comma)) {
    var node = this.startNodeAt(startPos, startLoc);
    node.expressions = [expr];
    while (this.eat(types.comma)) {
      node.expressions.push(this.parseMaybeAssign(noIn, refShorthandDefaultPos));
    }
    this.toReferencedList(node.expressions);
    return this.finishNode(node, "SequenceExpression");
  }
  return expr;
};

// Parse an assignment expression. This includes applications of
// operators like `+=`.

pp$3.parseMaybeAssign = function (noIn, refShorthandDefaultPos, afterLeftParse, refNeedsArrowPos) {
  var startPos = this.state.start;
  var startLoc = this.state.startLoc;

  if (this.match(types._yield) && this.state.inGenerator) {
    var _left = this.parseYield();
    if (afterLeftParse) _left = afterLeftParse.call(this, _left, startPos, startLoc);
    return _left;
  }

  var failOnShorthandAssign = void 0;
  if (refShorthandDefaultPos) {
    failOnShorthandAssign = false;
  } else {
    refShorthandDefaultPos = { start: 0 };
    failOnShorthandAssign = true;
  }

  if (this.match(types.parenL) || this.match(types.name)) {
    this.state.potentialArrowAt = this.state.start;
  }

  var left = this.parseMaybeConditional(noIn, refShorthandDefaultPos, refNeedsArrowPos);
  if (afterLeftParse) left = afterLeftParse.call(this, left, startPos, startLoc);
  if (this.state.type.isAssign) {
    var node = this.startNodeAt(startPos, startLoc);
    node.operator = this.state.value;
    node.left = this.match(types.eq) ? this.toAssignable(left, undefined, "assignment expression") : left;
    refShorthandDefaultPos.start = 0; // reset because shorthand default was used correctly

    this.checkLVal(left, undefined, undefined, "assignment expression");

    if (left.extra && left.extra.parenthesized) {
      var errorMsg = void 0;
      if (left.type === "ObjectPattern") {
        errorMsg = "`({a}) = 0` use `({a} = 0)`";
      } else if (left.type === "ArrayPattern") {
        errorMsg = "`([a]) = 0` use `([a] = 0)`";
      }
      if (errorMsg) {
        this.raise(left.start, "You're trying to assign to a parenthesized expression, eg. instead of " + errorMsg);
      }
    }

    this.next();
    node.right = this.parseMaybeAssign(noIn);
    return this.finishNode(node, "AssignmentExpression");
  } else if (failOnShorthandAssign && refShorthandDefaultPos.start) {
    this.unexpected(refShorthandDefaultPos.start);
  }

  return left;
};

// Parse a ternary conditional (`?:`) operator.

pp$3.parseMaybeConditional = function (noIn, refShorthandDefaultPos, refNeedsArrowPos) {
  var startPos = this.state.start;
  var startLoc = this.state.startLoc;
  var expr = this.parseExprOps(noIn, refShorthandDefaultPos);
  if (refShorthandDefaultPos && refShorthandDefaultPos.start) return expr;

  return this.parseConditional(expr, noIn, startPos, startLoc, refNeedsArrowPos);
};

pp$3.parseConditional = function (expr, noIn, startPos, startLoc) {
  if (this.eat(types.question)) {
    var node = this.startNodeAt(startPos, startLoc);
    node.test = expr;
    node.consequent = this.parseMaybeAssign();
    this.expect(types.colon);
    node.alternate = this.parseMaybeAssign(noIn);
    return this.finishNode(node, "ConditionalExpression");
  }
  return expr;
};

// Start the precedence parser.

pp$3.parseExprOps = function (noIn, refShorthandDefaultPos) {
  var startPos = this.state.start;
  var startLoc = this.state.startLoc;
  var expr = this.parseMaybeUnary(refShorthandDefaultPos);
  if (refShorthandDefaultPos && refShorthandDefaultPos.start) {
    return expr;
  } else {
    return this.parseExprOp(expr, startPos, startLoc, -1, noIn);
  }
};

// Parse binary operators with the operator precedence parsing
// algorithm. `left` is the left-hand side of the operator.
// `minPrec` provides context that allows the function to stop and
// defer further parser to one of its callers when it encounters an
// operator that has a lower precedence than the set it is parsing.

pp$3.parseExprOp = function (left, leftStartPos, leftStartLoc, minPrec, noIn) {
  var prec = this.state.type.binop;
  if (prec != null && (!noIn || !this.match(types._in))) {
    if (prec > minPrec) {
      var node = this.startNodeAt(leftStartPos, leftStartLoc);
      node.left = left;
      node.operator = this.state.value;

      if (node.operator === "**" && left.type === "UnaryExpression" && left.extra && !left.extra.parenthesizedArgument && !left.extra.parenthesized) {
        this.raise(left.argument.start, "Illegal expression. Wrap left hand side or entire exponentiation in parentheses.");
      }

      var op = this.state.type;
      this.next();

      var startPos = this.state.start;
      var startLoc = this.state.startLoc;
      node.right = this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec, noIn);

      this.finishNode(node, op === types.logicalOR || op === types.logicalAND ? "LogicalExpression" : "BinaryExpression");
      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn);
    }
  }
  return left;
};

// Parse unary operators, both prefix and postfix.

pp$3.parseMaybeUnary = function (refShorthandDefaultPos) {
  if (this.state.type.prefix) {
    var node = this.startNode();
    var update = this.match(types.incDec);
    node.operator = this.state.value;
    node.prefix = true;
    this.next();

    var argType = this.state.type;
    node.argument = this.parseMaybeUnary();

    this.addExtra(node, "parenthesizedArgument", argType === types.parenL && (!node.argument.extra || !node.argument.extra.parenthesized));

    if (refShorthandDefaultPos && refShorthandDefaultPos.start) {
      this.unexpected(refShorthandDefaultPos.start);
    }

    if (update) {
      this.checkLVal(node.argument, undefined, undefined, "prefix operation");
    } else if (this.state.strict && node.operator === "delete" && node.argument.type === "Identifier") {
      this.raise(node.start, "Deleting local variable in strict mode");
    }

    return this.finishNode(node, update ? "UpdateExpression" : "UnaryExpression");
  }

  var startPos = this.state.start;
  var startLoc = this.state.startLoc;
  var expr = this.parseExprSubscripts(refShorthandDefaultPos);
  if (refShorthandDefaultPos && refShorthandDefaultPos.start) return expr;
  while (this.state.type.postfix && !this.canInsertSemicolon()) {
    var _node = this.startNodeAt(startPos, startLoc);
    _node.operator = this.state.value;
    _node.prefix = false;
    _node.argument = expr;
    this.checkLVal(expr, undefined, undefined, "postfix operation");
    this.next();
    expr = this.finishNode(_node, "UpdateExpression");
  }
  return expr;
};

// Parse call, dot, and `[]`-subscript expressions.

pp$3.parseExprSubscripts = function (refShorthandDefaultPos) {
  var startPos = this.state.start;
  var startLoc = this.state.startLoc;
  var potentialArrowAt = this.state.potentialArrowAt;
  var expr = this.parseExprAtom(refShorthandDefaultPos);

  if (expr.type === "ArrowFunctionExpression" && expr.start === potentialArrowAt) {
    return expr;
  }

  if (refShorthandDefaultPos && refShorthandDefaultPos.start) {
    return expr;
  }

  return this.parseSubscripts(expr, startPos, startLoc);
};

pp$3.parseSubscripts = function (base, startPos, startLoc, noCalls) {
  for (;;) {
    if (!noCalls && this.eat(types.doubleColon)) {
      var node = this.startNodeAt(startPos, startLoc);
      node.object = base;
      node.callee = this.parseNoCallExpr();
      return this.parseSubscripts(this.finishNode(node, "BindExpression"), startPos, startLoc, noCalls);
    } else if (this.eat(types.dot)) {
      var _node2 = this.startNodeAt(startPos, startLoc);
      _node2.object = base;
      _node2.property = this.parseIdentifier(true);
      _node2.computed = false;
      base = this.finishNode(_node2, "MemberExpression");
    } else if (this.eat(types.bracketL)) {
      var _node3 = this.startNodeAt(startPos, startLoc);
      _node3.object = base;
      _node3.property = this.parseExpression();
      _node3.computed = true;
      this.expect(types.bracketR);
      base = this.finishNode(_node3, "MemberExpression");
    } else if (!noCalls && this.match(types.parenL)) {
      var possibleAsync = this.state.potentialArrowAt === base.start && base.type === "Identifier" && base.name === "async" && !this.canInsertSemicolon();
      this.next();

      var _node4 = this.startNodeAt(startPos, startLoc);
      _node4.callee = base;
      _node4.arguments = this.parseCallExpressionArguments(types.parenR, possibleAsync);
      if (_node4.callee.type === "Import" && _node4.arguments.length !== 1) {
        this.raise(_node4.start, "import() requires exactly one argument");
      }
      base = this.finishNode(_node4, "CallExpression");

      if (possibleAsync && this.shouldParseAsyncArrow()) {
        return this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), _node4);
      } else {
        this.toReferencedList(_node4.arguments);
      }
    } else if (this.match(types.backQuote)) {
      var _node5 = this.startNodeAt(startPos, startLoc);
      _node5.tag = base;
      _node5.quasi = this.parseTemplate(true);
      base = this.finishNode(_node5, "TaggedTemplateExpression");
    } else {
      return base;
    }
  }
};

pp$3.parseCallExpressionArguments = function (close, possibleAsyncArrow) {
  var elts = [];
  var innerParenStart = void 0;
  var first = true;

  while (!this.eat(close)) {
    if (first) {
      first = false;
    } else {
      this.expect(types.comma);
      if (this.eat(close)) break;
    }

    // we need to make sure that if this is an async arrow functions, that we don't allow inner parens inside the params
    if (this.match(types.parenL) && !innerParenStart) {
      innerParenStart = this.state.start;
    }

    elts.push(this.parseExprListItem(false, possibleAsyncArrow ? { start: 0 } : undefined, possibleAsyncArrow ? { start: 0 } : undefined));
  }

  // we found an async arrow function so let's not allow any inner parens
  if (possibleAsyncArrow && innerParenStart && this.shouldParseAsyncArrow()) {
    this.unexpected();
  }

  return elts;
};

pp$3.shouldParseAsyncArrow = function () {
  return this.match(types.arrow);
};

pp$3.parseAsyncArrowFromCallExpression = function (node, call) {
  this.expect(types.arrow);
  return this.parseArrowExpression(node, call.arguments, true);
};

// Parse a no-call expression (like argument of `new` or `::` operators).

pp$3.parseNoCallExpr = function () {
  var startPos = this.state.start;
  var startLoc = this.state.startLoc;
  return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);
};

// Parse an atomic expression — either a single token that is an
// expression, an expression started by a keyword like `function` or
// `new`, or an expression wrapped in punctuation like `()`, `[]`,
// or `{}`.

pp$3.parseExprAtom = function (refShorthandDefaultPos) {
  var canBeArrow = this.state.potentialArrowAt === this.state.start;
  var node = void 0;

  switch (this.state.type) {
    case types._super:
      if (!this.state.inMethod && !this.state.inClassProperty && !this.options.allowSuperOutsideMethod) {
        this.raise(this.state.start, "'super' outside of function or class");
      }

      node = this.startNode();
      this.next();
      if (!this.match(types.parenL) && !this.match(types.bracketL) && !this.match(types.dot)) {
        this.unexpected();
      }
      if (this.match(types.parenL) && this.state.inMethod !== "constructor" && !this.options.allowSuperOutsideMethod) {
        this.raise(node.start, "super() outside of class constructor");
      }
      return this.finishNode(node, "Super");

    case types._import:
      if (!this.hasPlugin("dynamicImport")) this.unexpected();

      node = this.startNode();
      this.next();
      if (!this.match(types.parenL)) {
        this.unexpected(null, types.parenL);
      }
      return this.finishNode(node, "Import");

    case types._this:
      node = this.startNode();
      this.next();
      return this.finishNode(node, "ThisExpression");

    case types._yield:
      if (this.state.inGenerator) this.unexpected();

    case types.name:
      node = this.startNode();
      var allowAwait = this.state.value === "await" && this.state.inAsync;
      var allowYield = this.shouldAllowYieldIdentifier();
      var id = this.parseIdentifier(allowAwait || allowYield);

      if (id.name === "await") {
        if (this.state.inAsync || this.inModule) {
          return this.parseAwait(node);
        }
      } else if (id.name === "async" && this.match(types._function) && !this.canInsertSemicolon()) {
        this.next();
        return this.parseFunction(node, false, false, true);
      } else if (canBeArrow && id.name === "async" && this.match(types.name)) {
        var params = [this.parseIdentifier()];
        this.expect(types.arrow);
        // let foo = bar => {};
        return this.parseArrowExpression(node, params, true);
      }

      if (canBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {
        return this.parseArrowExpression(node, [id]);
      }

      return id;

    case types._do:
      if (this.hasPlugin("doExpressions")) {
        var _node6 = this.startNode();
        this.next();
        var oldInFunction = this.state.inFunction;
        var oldLabels = this.state.labels;
        this.state.labels = [];
        this.state.inFunction = false;
        _node6.body = this.parseBlock(false, true);
        this.state.inFunction = oldInFunction;
        this.state.labels = oldLabels;
        return this.finishNode(_node6, "DoExpression");
      }

    case types.regexp:
      var value = this.state.value;
      node = this.parseLiteral(value.value, "RegExpLiteral");
      node.pattern = value.pattern;
      node.flags = value.flags;
      return node;

    case types.num:
      return this.parseLiteral(this.state.value, "NumericLiteral");

    case types.string:
      return this.parseLiteral(this.state.value, "StringLiteral");

    case types._null:
      node = this.startNode();
      this.next();
      return this.finishNode(node, "NullLiteral");

    case types._true:case types._false:
      node = this.startNode();
      node.value = this.match(types._true);
      this.next();
      return this.finishNode(node, "BooleanLiteral");

    case types.parenL:
      return this.parseParenAndDistinguishExpression(null, null, canBeArrow);

    case types.bracketL:
      node = this.startNode();
      this.next();
      node.elements = this.parseExprList(types.bracketR, true, refShorthandDefaultPos);
      this.toReferencedList(node.elements);
      return this.finishNode(node, "ArrayExpression");

    case types.braceL:
      return this.parseObj(false, refShorthandDefaultPos);

    case types._function:
      return this.parseFunctionExpression();

    case types.at:
      this.parseDecorators();

    case types._class:
      node = this.startNode();
      this.takeDecorators(node);
      return this.parseClass(node, false);

    case types._new:
      return this.parseNew();

    case types.backQuote:
      return this.parseTemplate(false);

    case types.doubleColon:
      node = this.startNode();
      this.next();
      node.object = null;
      var callee = node.callee = this.parseNoCallExpr();
      if (callee.type === "MemberExpression") {
        return this.finishNode(node, "BindExpression");
      } else {
        this.raise(callee.start, "Binding should be performed on object property.");
      }

    default:
      this.unexpected();
  }
};

pp$3.parseFunctionExpression = function () {
  var node = this.startNode();
  var meta = this.parseIdentifier(true);
  if (this.state.inGenerator && this.eat(types.dot) && this.hasPlugin("functionSent")) {
    return this.parseMetaProperty(node, meta, "sent");
  } else {
    return this.parseFunction(node, false);
  }
};

pp$3.parseMetaProperty = function (node, meta, propertyName) {
  node.meta = meta;
  node.property = this.parseIdentifier(true);

  if (node.property.name !== propertyName) {
    this.raise(node.property.start, "The only valid meta property for new is " + meta.name + "." + propertyName);
  }

  return this.finishNode(node, "MetaProperty");
};

pp$3.parseLiteral = function (value, type, startPos, startLoc) {
  startPos = startPos || this.state.start;
  startLoc = startLoc || this.state.startLoc;

  var node = this.startNodeAt(startPos, startLoc);
  this.addExtra(node, "rawValue", value);
  this.addExtra(node, "raw", this.input.slice(startPos, this.state.end));
  node.value = value;
  this.next();
  return this.finishNode(node, type);
};

pp$3.parseParenExpression = function () {
  this.expect(types.parenL);
  var val = this.parseExpression();
  this.expect(types.parenR);
  return val;
};

pp$3.parseParenAndDistinguishExpression = function (startPos, startLoc, canBeArrow) {
  startPos = startPos || this.state.start;
  startLoc = startLoc || this.state.startLoc;

  var val = void 0;
  this.expect(types.parenL);

  var innerStartPos = this.state.start;
  var innerStartLoc = this.state.startLoc;
  var exprList = [];
  var refShorthandDefaultPos = { start: 0 };
  var refNeedsArrowPos = { start: 0 };
  var first = true;
  var spreadStart = void 0;
  var optionalCommaStart = void 0;

  while (!this.match(types.parenR)) {
    if (first) {
      first = false;
    } else {
      this.expect(types.comma, refNeedsArrowPos.start || null);
      if (this.match(types.parenR)) {
        optionalCommaStart = this.state.start;
        break;
      }
    }

    if (this.match(types.ellipsis)) {
      var spreadNodeStartPos = this.state.start;
      var spreadNodeStartLoc = this.state.startLoc;
      spreadStart = this.state.start;
      exprList.push(this.parseParenItem(this.parseRest(), spreadNodeStartPos, spreadNodeStartLoc));
      break;
    } else {
      exprList.push(this.parseMaybeAssign(false, refShorthandDefaultPos, this.parseParenItem, refNeedsArrowPos));
    }
  }

  var innerEndPos = this.state.start;
  var innerEndLoc = this.state.startLoc;
  this.expect(types.parenR);

  var arrowNode = this.startNodeAt(startPos, startLoc);
  if (canBeArrow && this.shouldParseArrow() && (arrowNode = this.parseArrow(arrowNode))) {
    for (var _iterator = exprList, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
      var _ref;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var param = _ref;

      if (param.extra && param.extra.parenthesized) this.unexpected(param.extra.parenStart);
    }

    return this.parseArrowExpression(arrowNode, exprList);
  }

  if (!exprList.length) {
    this.unexpected(this.state.lastTokStart);
  }
  if (optionalCommaStart) this.unexpected(optionalCommaStart);
  if (spreadStart) this.unexpected(spreadStart);
  if (refShorthandDefaultPos.start) this.unexpected(refShorthandDefaultPos.start);
  if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);

  if (exprList.length > 1) {
    val = this.startNodeAt(innerStartPos, innerStartLoc);
    val.expressions = exprList;
    this.toReferencedList(val.expressions);
    this.finishNodeAt(val, "SequenceExpression", innerEndPos, innerEndLoc);
  } else {
    val = exprList[0];
  }

  this.addExtra(val, "parenthesized", true);
  this.addExtra(val, "parenStart", startPos);

  return val;
};

pp$3.shouldParseArrow = function () {
  return !this.canInsertSemicolon();
};

pp$3.parseArrow = function (node) {
  if (this.eat(types.arrow)) {
    return node;
  }
};

pp$3.parseParenItem = function (node) {
  return node;
};

// New's precedence is slightly tricky. It must allow its argument
// to be a `[]` or dot subscript expression, but not a call — at
// least, not without wrapping it in parentheses. Thus, it uses the

pp$3.parseNew = function () {
  var node = this.startNode();
  var meta = this.parseIdentifier(true);

  if (this.eat(types.dot)) {
    var metaProp = this.parseMetaProperty(node, meta, "target");

    if (!this.state.inFunction) {
      this.raise(metaProp.property.start, "new.target can only be used in functions");
    }

    return metaProp;
  }

  node.callee = this.parseNoCallExpr();

  if (this.eat(types.parenL)) {
    node.arguments = this.parseExprList(types.parenR);
    this.toReferencedList(node.arguments);
  } else {
    node.arguments = [];
  }

  return this.finishNode(node, "NewExpression");
};

// Parse template expression.

pp$3.parseTemplateElement = function (isTagged) {
  var elem = this.startNode();
  if (this.state.value === null) {
    if (!isTagged || !this.hasPlugin("templateInvalidEscapes")) {
      this.raise(this.state.invalidTemplateEscapePosition, "Invalid escape sequence in template");
    } else {
      this.state.invalidTemplateEscapePosition = null;
    }
  }
  elem.value = {
    raw: this.input.slice(this.state.start, this.state.end).replace(/\r\n?/g, "\n"),
    cooked: this.state.value
  };
  this.next();
  elem.tail = this.match(types.backQuote);
  return this.finishNode(elem, "TemplateElement");
};

pp$3.parseTemplate = function (isTagged) {
  var node = this.startNode();
  this.next();
  node.expressions = [];
  var curElt = this.parseTemplateElement(isTagged);
  node.quasis = [curElt];
  while (!curElt.tail) {
    this.expect(types.dollarBraceL);
    node.expressions.push(this.parseExpression());
    this.expect(types.braceR);
    node.quasis.push(curElt = this.parseTemplateElement(isTagged));
  }
  this.next();
  return this.finishNode(node, "TemplateLiteral");
};

// Parse an object literal or binding pattern.

pp$3.parseObj = function (isPattern, refShorthandDefaultPos) {
  var decorators = [];
  var propHash = Object.create(null);
  var first = true;
  var node = this.startNode();

  node.properties = [];
  this.next();

  var firstRestLocation = null;

  while (!this.eat(types.braceR)) {
    if (first) {
      first = false;
    } else {
      this.expect(types.comma);
      if (this.eat(types.braceR)) break;
    }

    while (this.match(types.at)) {
      decorators.push(this.parseDecorator());
    }

    var prop = this.startNode(),
        isGenerator = false,
        isAsync = false,
        startPos = void 0,
        startLoc = void 0;
    if (decorators.length) {
      prop.decorators = decorators;
      decorators = [];
    }

    if (this.hasPlugin("objectRestSpread") && this.match(types.ellipsis)) {
      prop = this.parseSpread(isPattern ? { start: 0 } : undefined);
      prop.type = isPattern ? "RestProperty" : "SpreadProperty";
      if (isPattern) this.toAssignable(prop.argument, true, "object pattern");
      node.properties.push(prop);
      if (isPattern) {
        var position = this.state.start;
        if (firstRestLocation !== null) {
          this.unexpected(firstRestLocation, "Cannot have multiple rest elements when destructuring");
        } else if (this.eat(types.braceR)) {
          break;
        } else if (this.match(types.comma) && this.lookahead().type === types.braceR) {
          // TODO: temporary rollback
          // this.unexpected(position, "A trailing comma is not permitted after the rest element");
          continue;
        } else {
          firstRestLocation = position;
          continue;
        }
      } else {
        continue;
      }
    }

    prop.method = false;
    prop.shorthand = false;

    if (isPattern || refShorthandDefaultPos) {
      startPos = this.state.start;
      startLoc = this.state.startLoc;
    }

    if (!isPattern) {
      isGenerator = this.eat(types.star);
    }

    if (!isPattern && this.isContextual("async")) {
      if (isGenerator) this.unexpected();

      var asyncId = this.parseIdentifier();
      if (this.match(types.colon) || this.match(types.parenL) || this.match(types.braceR) || this.match(types.eq) || this.match(types.comma)) {
        prop.key = asyncId;
        prop.computed = false;
      } else {
        isAsync = true;
        if (this.hasPlugin("asyncGenerators")) isGenerator = this.eat(types.star);
        this.parsePropertyName(prop);
      }
    } else {
      this.parsePropertyName(prop);
    }

    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, refShorthandDefaultPos);
    this.checkPropClash(prop, propHash);

    if (prop.shorthand) {
      this.addExtra(prop, "shorthand", true);
    }

    node.properties.push(prop);
  }

  if (firstRestLocation !== null) {
    this.unexpected(firstRestLocation, "The rest element has to be the last element when destructuring");
  }

  if (decorators.length) {
    this.raise(this.state.start, "You have trailing decorators with no property");
  }

  return this.finishNode(node, isPattern ? "ObjectPattern" : "ObjectExpression");
};

pp$3.isGetterOrSetterMethod = function (prop, isPattern) {
  return !isPattern && !prop.computed && prop.key.type === "Identifier" && (prop.key.name === "get" || prop.key.name === "set") && (this.match(types.string) || // get "string"() {}
  this.match(types.num) || // get 1() {}
  this.match(types.bracketL) || // get ["string"]() {}
  this.match(types.name) || // get foo() {}
  this.state.type.keyword // get debugger() {}
  );
};

// get methods aren't allowed to have any parameters
// set methods must have exactly 1 parameter
pp$3.checkGetterSetterParamCount = function (method) {
  var paramCount = method.kind === "get" ? 0 : 1;
  if (method.params.length !== paramCount) {
    var start = method.start;
    if (method.kind === "get") {
      this.raise(start, "getter should have no params");
    } else {
      this.raise(start, "setter should have exactly one param");
    }
  }
};

pp$3.parseObjectMethod = function (prop, isGenerator, isAsync, isPattern) {
  if (isAsync || isGenerator || this.match(types.parenL)) {
    if (isPattern) this.unexpected();
    prop.kind = "method";
    prop.method = true;
    this.parseMethod(prop, isGenerator, isAsync);

    return this.finishNode(prop, "ObjectMethod");
  }

  if (this.isGetterOrSetterMethod(prop, isPattern)) {
    if (isGenerator || isAsync) this.unexpected();
    prop.kind = prop.key.name;
    this.parsePropertyName(prop);
    this.parseMethod(prop);
    this.checkGetterSetterParamCount(prop);

    return this.finishNode(prop, "ObjectMethod");
  }
};

pp$3.parseObjectProperty = function (prop, startPos, startLoc, isPattern, refShorthandDefaultPos) {
  if (this.eat(types.colon)) {
    prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssign(false, refShorthandDefaultPos);

    return this.finishNode(prop, "ObjectProperty");
  }

  if (!prop.computed && prop.key.type === "Identifier") {
    this.checkReservedWord(prop.key.name, prop.key.start, true, true);

    if (isPattern) {
      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());
    } else if (this.match(types.eq) && refShorthandDefaultPos) {
      if (!refShorthandDefaultPos.start) {
        refShorthandDefaultPos.start = this.state.start;
      }
      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());
    } else {
      prop.value = prop.key.__clone();
    }
    prop.shorthand = true;

    return this.finishNode(prop, "ObjectProperty");
  }
};

pp$3.parseObjPropValue = function (prop, startPos, startLoc, isGenerator, isAsync, isPattern, refShorthandDefaultPos) {
  var node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refShorthandDefaultPos);

  if (!node) this.unexpected();

  return node;
};

pp$3.parsePropertyName = function (prop) {
  if (this.eat(types.bracketL)) {
    prop.computed = true;
    prop.key = this.parseMaybeAssign();
    this.expect(types.bracketR);
  } else {
    prop.computed = false;
    var oldInPropertyName = this.state.inPropertyName;
    this.state.inPropertyName = true;
    prop.key = this.match(types.num) || this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);
    this.state.inPropertyName = oldInPropertyName;
  }
  return prop.key;
};

// Initialize empty function node.

pp$3.initFunction = function (node, isAsync) {
  node.id = null;
  node.generator = false;
  node.expression = false;
  node.async = !!isAsync;
};

// Parse object or class method.

pp$3.parseMethod = function (node, isGenerator, isAsync) {
  var oldInMethod = this.state.inMethod;
  this.state.inMethod = node.kind || true;
  this.initFunction(node, isAsync);
  this.expect(types.parenL);
  node.params = this.parseBindingList(types.parenR);
  node.generator = !!isGenerator;
  this.parseFunctionBody(node);
  this.state.inMethod = oldInMethod;
  return node;
};

// Parse arrow function expression with given parameters.

pp$3.parseArrowExpression = function (node, params, isAsync) {
  this.initFunction(node, isAsync);
  node.params = this.toAssignableList(params, true, "arrow function parameters");
  this.parseFunctionBody(node, true);
  return this.finishNode(node, "ArrowFunctionExpression");
};

pp$3.isStrictBody = function (node, isExpression) {
  if (!isExpression && node.body.directives.length) {
    for (var _iterator2 = node.body.directives, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {
      var _ref2;

      if (_isArray2) {
        if (_i2 >= _iterator2.length) break;
        _ref2 = _iterator2[_i2++];
      } else {
        _i2 = _iterator2.next();
        if (_i2.done) break;
        _ref2 = _i2.value;
      }

      var directive = _ref2;

      if (directive.value.value === "use strict") {
        return true;
      }
    }
  }

  return false;
};

// Parse function body and check parameters.
pp$3.parseFunctionBody = function (node, allowExpression) {
  var isExpression = allowExpression && !this.match(types.braceL);

  var oldInAsync = this.state.inAsync;
  this.state.inAsync = node.async;
  if (isExpression) {
    node.body = this.parseMaybeAssign();
    node.expression = true;
  } else {
    // Start a new scope with regard to labels and the `inFunction`
    // flag (restore them to their old value afterwards).
    var oldInFunc = this.state.inFunction;
    var oldInGen = this.state.inGenerator;
    var oldLabels = this.state.labels;
    this.state.inFunction = true;this.state.inGenerator = node.generator;this.state.labels = [];
    node.body = this.parseBlock(true);
    node.expression = false;
    this.state.inFunction = oldInFunc;this.state.inGenerator = oldInGen;this.state.labels = oldLabels;
  }
  this.state.inAsync = oldInAsync;

  // If this is a strict mode function, verify that argument names
  // are not repeated, and it does not try to bind the words `eval`
  // or `arguments`.
  var isStrict = this.isStrictBody(node, isExpression);
  // Also check when allowExpression === true for arrow functions
  var checkLVal = this.state.strict || allowExpression || isStrict;

  if (isStrict && node.id && node.id.type === "Identifier" && node.id.name === "yield") {
    this.raise(node.id.start, "Binding yield in strict mode");
  }

  if (checkLVal) {
    var nameHash = Object.create(null);
    var oldStrict = this.state.strict;
    if (isStrict) this.state.strict = true;
    if (node.id) {
      this.checkLVal(node.id, true, undefined, "function name");
    }
    for (var _iterator3 = node.params, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {
      var _ref3;

      if (_isArray3) {
        if (_i3 >= _iterator3.length) break;
        _ref3 = _iterator3[_i3++];
      } else {
        _i3 = _iterator3.next();
        if (_i3.done) break;
        _ref3 = _i3.value;
      }

      var param = _ref3;

      if (isStrict && param.type !== "Identifier") {
        this.raise(param.start, "Non-simple parameter in strict mode");
      }
      this.checkLVal(param, true, nameHash, "function parameter list");
    }
    this.state.strict = oldStrict;
  }
};

// Parses a comma-separated list of expressions, and returns them as
// an array. `close` is the token type that ends the list, and
// `allowEmpty` can be turned on to allow subsequent commas with
// nothing in between them to be parsed as `null` (which is needed
// for array literals).

pp$3.parseExprList = function (close, allowEmpty, refShorthandDefaultPos) {
  var elts = [];
  var first = true;

  while (!this.eat(close)) {
    if (first) {
      first = false;
    } else {
      this.expect(types.comma);
      if (this.eat(close)) break;
    }

    elts.push(this.parseExprListItem(allowEmpty, refShorthandDefaultPos));
  }
  return elts;
};

pp$3.parseExprListItem = function (allowEmpty, refShorthandDefaultPos, refNeedsArrowPos) {
  var elt = void 0;
  if (allowEmpty && this.match(types.comma)) {
    elt = null;
  } else if (this.match(types.ellipsis)) {
    elt = this.parseSpread(refShorthandDefaultPos);
  } else {
    elt = this.parseMaybeAssign(false, refShorthandDefaultPos, this.parseParenItem, refNeedsArrowPos);
  }
  return elt;
};

// Parse the next token as an identifier. If `liberal` is true (used
// when parsing properties), it will also convert keywords into
// identifiers.

pp$3.parseIdentifier = function (liberal) {
  var node = this.startNode();
  if (!liberal) {
    this.checkReservedWord(this.state.value, this.state.start, !!this.state.type.keyword, false);
  }

  if (this.match(types.name)) {
    node.name = this.state.value;
  } else if (this.state.type.keyword) {
    node.name = this.state.type.keyword;
  } else {
    this.unexpected();
  }

  if (!liberal && node.name === "await" && this.state.inAsync) {
    this.raise(node.start, "invalid use of await inside of an async function");
  }

  node.loc.identifierName = node.name;

  this.next();
  return this.finishNode(node, "Identifier");
};

pp$3.checkReservedWord = function (word, startLoc, checkKeywords, isBinding) {
  if (this.isReservedWord(word) || checkKeywords && this.isKeyword(word)) {
    this.raise(startLoc, word + " is a reserved word");
  }

  if (this.state.strict && (reservedWords.strict(word) || isBinding && reservedWords.strictBind(word))) {
    this.raise(startLoc, word + " is a reserved word in strict mode");
  }
};

// Parses await expression inside async function.

pp$3.parseAwait = function (node) {
  // istanbul ignore next: this condition is checked at the call site so won't be hit here
  if (!this.state.inAsync) {
    this.unexpected();
  }
  if (this.match(types.star)) {
    this.raise(node.start, "await* has been removed from the async functions proposal. Use Promise.all() instead.");
  }
  node.argument = this.parseMaybeUnary();
  return this.finishNode(node, "AwaitExpression");
};

// Parses yield expression inside generator.

pp$3.parseYield = function () {
  var node = this.startNode();
  this.next();
  if (this.match(types.semi) || this.canInsertSemicolon() || !this.match(types.star) && !this.state.type.startsExpr) {
    node.delegate = false;
    node.argument = null;
  } else {
    node.delegate = this.eat(types.star);
    node.argument = this.parseMaybeAssign();
  }
  return this.finishNode(node, "YieldExpression");
};

// Start an AST node, attaching a start offset.

var pp$4 = Parser.prototype;
var commentKeys = ["leadingComments", "trailingComments", "innerComments"];

var Node = function () {
  function Node(pos, loc, filename) {
    classCallCheck(this, Node);

    this.type = "";
    this.start = pos;
    this.end = 0;
    this.loc = new SourceLocation(loc);
    if (filename) this.loc.filename = filename;
  }

  Node.prototype.__clone = function __clone() {
    var node2 = new Node();
    for (var key in this) {
      // Do not clone comments that are already attached to the node
      if (commentKeys.indexOf(key) < 0) {
        node2[key] = this[key];
      }
    }

    return node2;
  };

  return Node;
}();

pp$4.startNode = function () {
  return new Node(this.state.start, this.state.startLoc, this.filename);
};

pp$4.startNodeAt = function (pos, loc) {
  return new Node(pos, loc, this.filename);
};

function finishNodeAt(node, type, pos, loc) {
  node.type = type;
  node.end = pos;
  node.loc.end = loc;
  this.processComment(node);
  return node;
}

// Finish an AST node, adding `type` and `end` properties.

pp$4.finishNode = function (node, type) {
  return finishNodeAt.call(this, node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);
};

// Finish node at given position

pp$4.finishNodeAt = function (node, type, pos, loc) {
  return finishNodeAt.call(this, node, type, pos, loc);
};

var pp$5 = Parser.prototype;

// This function is used to raise exceptions on parse errors. It
// takes an offset integer (into the current `input`) to indicate
// the location of the error, attaches the position to the end
// of the error message, and then raises a `SyntaxError` with that
// message.

pp$5.raise = function (pos, message) {
  var loc = getLineInfo(this.input, pos);
  message += " (" + loc.line + ":" + loc.column + ")";
  var err = new SyntaxError(message);
  err.pos = pos;
  err.loc = loc;
  throw err;
};

/* eslint max-len: 0 */

/**
 * Based on the comment attachment algorithm used in espree and estraverse.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright
 *   notice, this list of conditions and the following disclaimer.
 * * Redistributions in binary form must reproduce the above copyright
 *   notice, this list of conditions and the following disclaimer in the
 *   documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

function last(stack) {
  return stack[stack.length - 1];
}

var pp$6 = Parser.prototype;

pp$6.addComment = function (comment) {
  if (this.filename) comment.loc.filename = this.filename;
  this.state.trailingComments.push(comment);
  this.state.leadingComments.push(comment);
};

pp$6.processComment = function (node) {
  if (node.type === "Program" && node.body.length > 0) return;

  var stack = this.state.commentStack;

  var firstChild = void 0,
      lastChild = void 0,
      trailingComments = void 0,
      i = void 0,
      j = void 0;

  if (this.state.trailingComments.length > 0) {
    // If the first comment in trailingComments comes after the
    // current node, then we're good - all comments in the array will
    // come after the node and so it's safe to add them as official
    // trailingComments.
    if (this.state.trailingComments[0].start >= node.end) {
      trailingComments = this.state.trailingComments;
      this.state.trailingComments = [];
    } else {
      // Otherwise, if the first comment doesn't come after the
      // current node, that means we have a mix of leading and trailing
      // comments in the array and that leadingComments contains the
      // same items as trailingComments. Reset trailingComments to
      // zero items and we'll handle this by evaluating leadingComments
      // later.
      this.state.trailingComments.length = 0;
    }
  } else {
    var lastInStack = last(stack);
    if (stack.length > 0 && lastInStack.trailingComments && lastInStack.trailingComments[0].start >= node.end) {
      trailingComments = lastInStack.trailingComments;
      lastInStack.trailingComments = null;
    }
  }

  // Eating the stack.
  if (stack.length > 0 && last(stack).start >= node.start) {
    firstChild = stack.pop();
  }

  while (stack.length > 0 && last(stack).start >= node.start) {
    lastChild = stack.pop();
  }

  if (!lastChild && firstChild) lastChild = firstChild;

  // Attach comments that follow a trailing comma on the last
  // property in an object literal or a trailing comma in function arguments
  // as trailing comments
  if (firstChild && this.state.leadingComments.length > 0) {
    var lastComment = last(this.state.leadingComments);

    if (firstChild.type === "ObjectProperty") {
      if (lastComment.start >= node.start) {
        if (this.state.commentPreviousNode) {
          for (j = 0; j < this.state.leadingComments.length; j++) {
            if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {
              this.state.leadingComments.splice(j, 1);
              j--;
            }
          }

          if (this.state.leadingComments.length > 0) {
            firstChild.trailingComments = this.state.leadingComments;
            this.state.leadingComments = [];
          }
        }
      }
    } else if (node.type === "CallExpression" && node.arguments && node.arguments.length) {
      var lastArg = last(node.arguments);

      if (lastArg && lastComment.start >= lastArg.start && lastComment.end <= node.end) {
        if (this.state.commentPreviousNode) {
          if (this.state.leadingComments.length > 0) {
            lastArg.trailingComments = this.state.leadingComments;
            this.state.leadingComments = [];
          }
        }
      }
    }
  }

  if (lastChild) {
    if (lastChild.leadingComments) {
      if (lastChild !== node && last(lastChild.leadingComments).end <= node.start) {
        node.leadingComments = lastChild.leadingComments;
        lastChild.leadingComments = null;
      } else {
        // A leading comment for an anonymous class had been stolen by its first ClassMethod,
        // so this takes back the leading comment.
        // See also: https://github.com/eslint/espree/issues/158
        for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {
          if (lastChild.leadingComments[i].end <= node.start) {
            node.leadingComments = lastChild.leadingComments.splice(0, i + 1);
            break;
          }
        }
      }
    }
  } else if (this.state.leadingComments.length > 0) {
    if (last(this.state.leadingComments).end <= node.start) {
      if (this.state.commentPreviousNode) {
        for (j = 0; j < this.state.leadingComments.length; j++) {
          if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {
            this.state.leadingComments.splice(j, 1);
            j--;
          }
        }
      }
      if (this.state.leadingComments.length > 0) {
        node.leadingComments = this.state.leadingComments;
        this.state.leadingComments = [];
      }
    } else {
      // https://github.com/eslint/espree/issues/2
      //
      // In special cases, such as return (without a value) and
      // debugger, all comments will end up as leadingComments and
      // will otherwise be eliminated. This step runs when the
      // commentStack is empty and there are comments left
      // in leadingComments.
      //
      // This loop figures out the stopping point between the actual
      // leading and trailing comments by finding the location of the
      // first comment that comes after the given node.
      for (i = 0; i < this.state.leadingComments.length; i++) {
        if (this.state.leadingComments[i].end > node.start) {
          break;
        }
      }

      // Split the array based on the location of the first comment
      // that comes after the node. Keep in mind that this could
      // result in an empty array, and if so, the array must be
      // deleted.
      node.leadingComments = this.state.leadingComments.slice(0, i);
      if (node.leadingComments.length === 0) {
        node.leadingComments = null;
      }

      // Similarly, trailing comments are attached later. The variable
      // must be reset to null if there are no trailing comments.
      trailingComments = this.state.leadingComments.slice(i);
      if (trailingComments.length === 0) {
        trailingComments = null;
      }
    }
  }

  this.state.commentPreviousNode = node;

  if (trailingComments) {
    if (trailingComments.length && trailingComments[0].start >= node.start && last(trailingComments).end <= node.end) {
      node.innerComments = trailingComments;
    } else {
      node.trailingComments = trailingComments;
    }
  }

  stack.push(node);
};

var pp$7 = Parser.prototype;

pp$7.estreeParseRegExpLiteral = function (_ref) {
  var pattern = _ref.pattern,
      flags = _ref.flags;

  var regex = null;
  try {
    regex = new RegExp(pattern, flags);
  } catch (e) {
    // In environments that don't support these flags value will
    // be null as the regex can't be represented natively.
  }
  var node = this.estreeParseLiteral(regex);
  node.regex = { pattern: pattern, flags: flags };

  return node;
};

pp$7.estreeParseLiteral = function (value) {
  return this.parseLiteral(value, "Literal");
};

pp$7.directiveToStmt = function (directive) {
  var directiveLiteral = directive.value;

  var stmt = this.startNodeAt(directive.start, directive.loc.start);
  var expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);

  expression.value = directiveLiteral.value;
  expression.raw = directiveLiteral.extra.raw;

  stmt.expression = this.finishNodeAt(expression, "Literal", directiveLiteral.end, directiveLiteral.loc.end);
  stmt.directive = directiveLiteral.extra.raw.slice(1, -1);

  return this.finishNodeAt(stmt, "ExpressionStatement", directive.end, directive.loc.end);
};

function isSimpleProperty(node) {
  return node && node.type === "Property" && node.kind === "init" && node.method === false;
}

var estreePlugin = function (instance) {
  instance.extend("checkDeclaration", function (inner) {
    return function (node) {
      if (isSimpleProperty(node)) {
        this.checkDeclaration(node.value);
      } else {
        inner.call(this, node);
      }
    };
  });

  instance.extend("checkGetterSetterParamCount", function () {
    return function (prop) {
      var paramCount = prop.kind === "get" ? 0 : 1;
      if (prop.value.params.length !== paramCount) {
        var start = prop.start;
        if (prop.kind === "get") {
          this.raise(start, "getter should have no params");
        } else {
          this.raise(start, "setter should have exactly one param");
        }
      }
    };
  });

  instance.extend("checkLVal", function (inner) {
    return function (expr, isBinding, checkClashes) {
      var _this = this;

      switch (expr.type) {
        case "ObjectPattern":
          expr.properties.forEach(function (prop) {
            _this.checkLVal(prop.type === "Property" ? prop.value : prop, isBinding, checkClashes, "object destructuring pattern");
          });
          break;
        default:
          for (var _len = arguments.length, args = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
            args[_key - 3] = arguments[_key];
          }

          inner.call.apply(inner, [this, expr, isBinding, checkClashes].concat(args));
      }
    };
  });

  instance.extend("checkPropClash", function () {
    return function (prop, propHash) {
      if (prop.computed || !isSimpleProperty(prop)) return;

      var key = prop.key;
      // It is either an Identifier or a String/NumericLiteral
      var name = key.type === "Identifier" ? key.name : String(key.value);

      if (name === "__proto__") {
        if (propHash.proto) this.raise(key.start, "Redefinition of __proto__ property");
        propHash.proto = true;
      }
    };
  });

  instance.extend("isStrictBody", function () {
    return function (node, isExpression) {
      if (!isExpression && node.body.body.length > 0) {
        for (var _iterator = node.body.body, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
          var _ref2;

          if (_isArray) {
            if (_i >= _iterator.length) break;
            _ref2 = _iterator[_i++];
          } else {
            _i = _iterator.next();
            if (_i.done) break;
            _ref2 = _i.value;
          }

          var directive = _ref2;

          if (directive.type === "ExpressionStatement" && directive.expression.type === "Literal") {
            if (directive.expression.value === "use strict") return true;
          } else {
            // Break for the first non literal expression
            break;
          }
        }
      }

      return false;
    };
  });

  instance.extend("isValidDirective", function () {
    return function (stmt) {
      return stmt.type === "ExpressionStatement" && stmt.expression.type === "Literal" && typeof stmt.expression.value === "string" && (!stmt.expression.extra || !stmt.expression.extra.parenthesized);
    };
  });

  instance.extend("stmtToDirective", function (inner) {
    return function (stmt) {
      var directive = inner.call(this, stmt);
      var value = stmt.expression.value;

      // Reset value to the actual value as in estree mode we want
      // the stmt to have the real value and not the raw value
      directive.value.value = value;

      return directive;
    };
  });

  instance.extend("parseBlockBody", function (inner) {
    return function (node) {
      var _this2 = this;

      for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        args[_key2 - 1] = arguments[_key2];
      }

      inner.call.apply(inner, [this, node].concat(args));

      node.directives.reverse().forEach(function (directive) {
        node.body.unshift(_this2.directiveToStmt(directive));
      });
      delete node.directives;
    };
  });

  instance.extend("parseClassMethod", function () {
    return function (classBody, method, isGenerator, isAsync) {
      this.parseMethod(method, isGenerator, isAsync);
      if (method.typeParameters) {
        method.value.typeParameters = method.typeParameters;
        delete method.typeParameters;
      }
      classBody.body.push(this.finishNode(method, "MethodDefinition"));
    };
  });

  instance.extend("parseExprAtom", function (inner) {
    return function () {
      switch (this.state.type) {
        case types.regexp:
          return this.estreeParseRegExpLiteral(this.state.value);

        case types.num:
        case types.string:
          return this.estreeParseLiteral(this.state.value);

        case types._null:
          return this.estreeParseLiteral(null);

        case types._true:
          return this.estreeParseLiteral(true);

        case types._false:
          return this.estreeParseLiteral(false);

        default:
          for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
            args[_key3] = arguments[_key3];
          }

          return inner.call.apply(inner, [this].concat(args));
      }
    };
  });

  instance.extend("parseLiteral", function (inner) {
    return function () {
      for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }

      var node = inner.call.apply(inner, [this].concat(args));
      node.raw = node.extra.raw;
      delete node.extra;

      return node;
    };
  });

  instance.extend("parseMethod", function (inner) {
    return function (node) {
      var funcNode = this.startNode();
      funcNode.kind = node.kind; // provide kind, so inner method correctly sets state

      for (var _len5 = arguments.length, args = Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {
        args[_key5 - 1] = arguments[_key5];
      }

      funcNode = inner.call.apply(inner, [this, funcNode].concat(args));
      delete funcNode.kind;
      node.value = this.finishNode(funcNode, "FunctionExpression");

      return node;
    };
  });

  instance.extend("parseObjectMethod", function (inner) {
    return function () {
      for (var _len6 = arguments.length, args = Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        args[_key6] = arguments[_key6];
      }

      var node = inner.call.apply(inner, [this].concat(args));

      if (node) {
        if (node.kind === "method") node.kind = "init";
        node.type = "Property";
      }

      return node;
    };
  });

  instance.extend("parseObjectProperty", function (inner) {
    return function () {
      for (var _len7 = arguments.length, args = Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
        args[_key7] = arguments[_key7];
      }

      var node = inner.call.apply(inner, [this].concat(args));

      if (node) {
        node.kind = "init";
        node.type = "Property";
      }

      return node;
    };
  });

  instance.extend("toAssignable", function (inner) {
    return function (node, isBinding) {
      for (var _len8 = arguments.length, args = Array(_len8 > 2 ? _len8 - 2 : 0), _key8 = 2; _key8 < _len8; _key8++) {
        args[_key8 - 2] = arguments[_key8];
      }

      if (isSimpleProperty(node)) {
        this.toAssignable.apply(this, [node.value, isBinding].concat(args));

        return node;
      } else if (node.type === "ObjectExpression") {
        node.type = "ObjectPattern";
        for (var _iterator2 = node.properties, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {
          var _ref3;

          if (_isArray2) {
            if (_i2 >= _iterator2.length) break;
            _ref3 = _iterator2[_i2++];
          } else {
            _i2 = _iterator2.next();
            if (_i2.done) break;
            _ref3 = _i2.value;
          }

          var prop = _ref3;

          if (prop.kind === "get" || prop.kind === "set") {
            this.raise(prop.key.start, "Object pattern can't contain getter or setter");
          } else if (prop.method) {
            this.raise(prop.key.start, "Object pattern can't contain methods");
          } else {
            this.toAssignable(prop, isBinding, "object destructuring pattern");
          }
        }

        return node;
      }

      return inner.call.apply(inner, [this, node, isBinding].concat(args));
    };
  });
};

/* eslint max-len: 0 */

var primitiveTypes = ["any", "mixed", "empty", "bool", "boolean", "number", "string", "void", "null"];

var pp$8 = Parser.prototype;

pp$8.flowParseTypeInitialiser = function (tok) {
  var oldInType = this.state.inType;
  this.state.inType = true;
  this.expect(tok || types.colon);

  var type = this.flowParseType();
  this.state.inType = oldInType;
  return type;
};

pp$8.flowParsePredicate = function () {
  var node = this.startNode();
  var moduloLoc = this.state.startLoc;
  var moduloPos = this.state.start;
  this.expect(types.modulo);
  var checksLoc = this.state.startLoc;
  this.expectContextual("checks");
  // Force '%' and 'checks' to be adjacent
  if (moduloLoc.line !== checksLoc.line || moduloLoc.column !== checksLoc.column - 1) {
    this.raise(moduloPos, "Spaces between ´%´ and ´checks´ are not allowed here.");
  }
  if (this.eat(types.parenL)) {
    node.expression = this.parseExpression();
    this.expect(types.parenR);
    return this.finishNode(node, "DeclaredPredicate");
  } else {
    return this.finishNode(node, "InferredPredicate");
  }
};

pp$8.flowParseTypeAndPredicateInitialiser = function () {
  var oldInType = this.state.inType;
  this.state.inType = true;
  this.expect(types.colon);
  var type = null;
  var predicate = null;
  if (this.match(types.modulo)) {
    this.state.inType = oldInType;
    predicate = this.flowParsePredicate();
  } else {
    type = this.flowParseType();
    this.state.inType = oldInType;
    if (this.match(types.modulo)) {
      predicate = this.flowParsePredicate();
    }
  }
  return [type, predicate];
};

pp$8.flowParseDeclareClass = function (node) {
  this.next();
  this.flowParseInterfaceish(node, true);
  return this.finishNode(node, "DeclareClass");
};

pp$8.flowParseDeclareFunction = function (node) {
  this.next();

  var id = node.id = this.parseIdentifier();

  var typeNode = this.startNode();
  var typeContainer = this.startNode();

  if (this.isRelational("<")) {
    typeNode.typeParameters = this.flowParseTypeParameterDeclaration();
  } else {
    typeNode.typeParameters = null;
  }

  this.expect(types.parenL);
  var tmp = this.flowParseFunctionTypeParams();
  typeNode.params = tmp.params;
  typeNode.rest = tmp.rest;
  this.expect(types.parenR);
  var predicate = null;

  var _flowParseTypeAndPred = this.flowParseTypeAndPredicateInitialiser();

  typeNode.returnType = _flowParseTypeAndPred[0];
  predicate = _flowParseTypeAndPred[1];

  typeContainer.typeAnnotation = this.finishNode(typeNode, "FunctionTypeAnnotation");
  typeContainer.predicate = predicate;
  id.typeAnnotation = this.finishNode(typeContainer, "TypeAnnotation");

  this.finishNode(id, id.type);

  this.semicolon();

  return this.finishNode(node, "DeclareFunction");
};

pp$8.flowParseDeclare = function (node) {
  if (this.match(types._class)) {
    return this.flowParseDeclareClass(node);
  } else if (this.match(types._function)) {
    return this.flowParseDeclareFunction(node);
  } else if (this.match(types._var)) {
    return this.flowParseDeclareVariable(node);
  } else if (this.isContextual("module")) {
    if (this.lookahead().type === types.dot) {
      return this.flowParseDeclareModuleExports(node);
    } else {
      return this.flowParseDeclareModule(node);
    }
  } else if (this.isContextual("type")) {
    return this.flowParseDeclareTypeAlias(node);
  } else if (this.isContextual("opaque")) {
    return this.flowParseDeclareOpaqueType(node);
  } else if (this.isContextual("interface")) {
    return this.flowParseDeclareInterface(node);
  } else if (this.match(types._export)) {
    return this.flowParseDeclareExportDeclaration(node);
  } else {
    this.unexpected();
  }
};

pp$8.flowParseDeclareExportDeclaration = function (node) {
  this.expect(types._export);
  if (this.isContextual("opaque") // declare export opaque ...
  ) {
      node.declaration = this.flowParseDeclare(this.startNode());
      node.default = false;

      return this.finishNode(node, "DeclareExportDeclaration");
    }

  throw this.unexpected();
};

pp$8.flowParseDeclareVariable = function (node) {
  this.next();
  node.id = this.flowParseTypeAnnotatableIdentifier();
  this.semicolon();
  return this.finishNode(node, "DeclareVariable");
};

pp$8.flowParseDeclareModule = function (node) {
  this.next();

  if (this.match(types.string)) {
    node.id = this.parseExprAtom();
  } else {
    node.id = this.parseIdentifier();
  }

  var bodyNode = node.body = this.startNode();
  var body = bodyNode.body = [];
  this.expect(types.braceL);
  while (!this.match(types.braceR)) {
    var _bodyNode = this.startNode();

    if (this.match(types._import)) {
      var lookahead = this.lookahead();
      if (lookahead.value !== "type" && lookahead.value !== "typeof") {
        this.unexpected(null, "Imports within a `declare module` body must always be `import type` or `import typeof`");
      }

      this.parseImport(_bodyNode);
    } else {
      this.expectContextual("declare", "Only declares and type imports are allowed inside declare module");

      _bodyNode = this.flowParseDeclare(_bodyNode, true);
    }

    body.push(_bodyNode);
  }
  this.expect(types.braceR);

  this.finishNode(bodyNode, "BlockStatement");
  return this.finishNode(node, "DeclareModule");
};

pp$8.flowParseDeclareModuleExports = function (node) {
  this.expectContextual("module");
  this.expect(types.dot);
  this.expectContextual("exports");
  node.typeAnnotation = this.flowParseTypeAnnotation();
  this.semicolon();

  return this.finishNode(node, "DeclareModuleExports");
};

pp$8.flowParseDeclareTypeAlias = function (node) {
  this.next();
  this.flowParseTypeAlias(node);
  return this.finishNode(node, "DeclareTypeAlias");
};

pp$8.flowParseDeclareOpaqueType = function (node) {
  this.next();
  this.flowParseOpaqueType(node, true);
  return this.finishNode(node, "DeclareOpaqueType");
};

pp$8.flowParseDeclareInterface = function (node) {
  this.next();
  this.flowParseInterfaceish(node);
  return this.finishNode(node, "DeclareInterface");
};

// Interfaces

pp$8.flowParseInterfaceish = function (node) {
  node.id = this.parseIdentifier();

  if (this.isRelational("<")) {
    node.typeParameters = this.flowParseTypeParameterDeclaration();
  } else {
    node.typeParameters = null;
  }

  node.extends = [];
  node.mixins = [];

  if (this.eat(types._extends)) {
    do {
      node.extends.push(this.flowParseInterfaceExtends());
    } while (this.eat(types.comma));
  }

  if (this.isContextual("mixins")) {
    this.next();
    do {
      node.mixins.push(this.flowParseInterfaceExtends());
    } while (this.eat(types.comma));
  }

  node.body = this.flowParseObjectType(true, false, false);
};

pp$8.flowParseInterfaceExtends = function () {
  var node = this.startNode();

  node.id = this.flowParseQualifiedTypeIdentifier();
  if (this.isRelational("<")) {
    node.typeParameters = this.flowParseTypeParameterInstantiation();
  } else {
    node.typeParameters = null;
  }

  return this.finishNode(node, "InterfaceExtends");
};

pp$8.flowParseInterface = function (node) {
  this.flowParseInterfaceish(node, false);
  return this.finishNode(node, "InterfaceDeclaration");
};

pp$8.flowParseRestrictedIdentifier = function (liberal) {
  if (primitiveTypes.indexOf(this.state.value) > -1) {
    this.raise(this.state.start, "Cannot overwrite primitive type " + this.state.value);
  }

  return this.parseIdentifier(liberal);
};

// Type aliases

pp$8.flowParseTypeAlias = function (node) {
  node.id = this.flowParseRestrictedIdentifier();

  if (this.isRelational("<")) {
    node.typeParameters = this.flowParseTypeParameterDeclaration();
  } else {
    node.typeParameters = null;
  }

  node.right = this.flowParseTypeInitialiser(types.eq);
  this.semicolon();

  return this.finishNode(node, "TypeAlias");
};

// Opaque type aliases

pp$8.flowParseOpaqueType = function (node, declare) {
  this.expectContextual("type");
  node.id = this.flowParseRestrictedIdentifier();

  if (this.isRelational("<")) {
    node.typeParameters = this.flowParseTypeParameterDeclaration();
  } else {
    node.typeParameters = null;
  }

  // Parse the supertype
  node.supertype = null;
  if (this.match(types.colon)) {
    node.supertype = this.flowParseTypeInitialiser(types.colon);
  }

  node.impltype = null;
  if (!declare) {
    node.impltype = this.flowParseTypeInitialiser(types.eq);
  }
  this.semicolon();

  return this.finishNode(node, "OpaqueType");
};

// Type annotations

pp$8.flowParseTypeParameter = function () {
  var node = this.startNode();

  var variance = this.flowParseVariance();

  var ident = this.flowParseTypeAnnotatableIdentifier();
  node.name = ident.name;
  node.variance = variance;
  node.bound = ident.typeAnnotation;

  if (this.match(types.eq)) {
    this.eat(types.eq);
    node.default = this.flowParseType();
  }

  return this.finishNode(node, "TypeParameter");
};

pp$8.flowParseTypeParameterDeclaration = function () {
  var oldInType = this.state.inType;
  var node = this.startNode();
  node.params = [];

  this.state.inType = true;

  // istanbul ignore else: this condition is already checked at all call sites
  if (this.isRelational("<") || this.match(types.jsxTagStart)) {
    this.next();
  } else {
    this.unexpected();
  }

  do {
    node.params.push(this.flowParseTypeParameter());
    if (!this.isRelational(">")) {
      this.expect(types.comma);
    }
  } while (!this.isRelational(">"));
  this.expectRelational(">");

  this.state.inType = oldInType;

  return this.finishNode(node, "TypeParameterDeclaration");
};

pp$8.flowParseTypeParameterInstantiation = function () {
  var node = this.startNode();
  var oldInType = this.state.inType;
  node.params = [];

  this.state.inType = true;

  this.expectRelational("<");
  while (!this.isRelational(">")) {
    node.params.push(this.flowParseType());
    if (!this.isRelational(">")) {
      this.expect(types.comma);
    }
  }
  this.expectRelational(">");

  this.state.inType = oldInType;

  return this.finishNode(node, "TypeParameterInstantiation");
};

pp$8.flowParseObjectPropertyKey = function () {
  return this.match(types.num) || this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);
};

pp$8.flowParseObjectTypeIndexer = function (node, isStatic, variance) {
  node.static = isStatic;

  this.expect(types.bracketL);
  if (this.lookahead().type === types.colon) {
    node.id = this.flowParseObjectPropertyKey();
    node.key = this.flowParseTypeInitialiser();
  } else {
    node.id = null;
    node.key = this.flowParseType();
  }
  this.expect(types.bracketR);
  node.value = this.flowParseTypeInitialiser();
  node.variance = variance;

  this.flowObjectTypeSemicolon();
  return this.finishNode(node, "ObjectTypeIndexer");
};

pp$8.flowParseObjectTypeMethodish = function (node) {
  node.params = [];
  node.rest = null;
  node.typeParameters = null;

  if (this.isRelational("<")) {
    node.typeParameters = this.flowParseTypeParameterDeclaration();
  }

  this.expect(types.parenL);
  while (!this.match(types.parenR) && !this.match(types.ellipsis)) {
    node.params.push(this.flowParseFunctionTypeParam());
    if (!this.match(types.parenR)) {
      this.expect(types.comma);
    }
  }

  if (this.eat(types.ellipsis)) {
    node.rest = this.flowParseFunctionTypeParam();
  }
  this.expect(types.parenR);
  node.returnType = this.flowParseTypeInitialiser();

  return this.finishNode(node, "FunctionTypeAnnotation");
};

pp$8.flowParseObjectTypeMethod = function (startPos, startLoc, isStatic, key) {
  var node = this.startNodeAt(startPos, startLoc);
  node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(startPos, startLoc));
  node.static = isStatic;
  node.key = key;
  node.optional = false;
  this.flowObjectTypeSemicolon();
  return this.finishNode(node, "ObjectTypeProperty");
};

pp$8.flowParseObjectTypeCallProperty = function (node, isStatic) {
  var valueNode = this.startNode();
  node.static = isStatic;
  node.value = this.flowParseObjectTypeMethodish(valueNode);
  this.flowObjectTypeSemicolon();
  return this.finishNode(node, "ObjectTypeCallProperty");
};

pp$8.flowParseObjectType = function (allowStatic, allowExact, allowSpread) {
  var oldInType = this.state.inType;
  this.state.inType = true;

  var nodeStart = this.startNode();
  var node = void 0;
  var propertyKey = void 0;
  var isStatic = false;

  nodeStart.callProperties = [];
  nodeStart.properties = [];
  nodeStart.indexers = [];

  var endDelim = void 0;
  var exact = void 0;
  if (allowExact && this.match(types.braceBarL)) {
    this.expect(types.braceBarL);
    endDelim = types.braceBarR;
    exact = true;
  } else {
    this.expect(types.braceL);
    endDelim = types.braceR;
    exact = false;
  }

  nodeStart.exact = exact;

  while (!this.match(endDelim)) {
    var optional = false;
    var startPos = this.state.start;
    var startLoc = this.state.startLoc;
    node = this.startNode();
    if (allowStatic && this.isContextual("static") && this.lookahead().type !== types.colon) {
      this.next();
      isStatic = true;
    }

    var variancePos = this.state.start;
    var variance = this.flowParseVariance();

    if (this.match(types.bracketL)) {
      nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));
    } else if (this.match(types.parenL) || this.isRelational("<")) {
      if (variance) {
        this.unexpected(variancePos);
      }
      nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));
    } else {
      if (this.match(types.ellipsis)) {
        if (!allowSpread) {
          this.unexpected(null, "Spread operator cannot appear in class or interface definitions");
        }
        if (variance) {
          this.unexpected(variance.start, "Spread properties cannot have variance");
        }
        this.expect(types.ellipsis);
        node.argument = this.flowParseType();
        this.flowObjectTypeSemicolon();
        nodeStart.properties.push(this.finishNode(node, "ObjectTypeSpreadProperty"));
      } else {
        propertyKey = this.flowParseObjectPropertyKey();
        if (this.isRelational("<") || this.match(types.parenL)) {
          // This is a method property
          if (variance) {
            this.unexpected(variance.start);
          }
          nodeStart.properties.push(this.flowParseObjectTypeMethod(startPos, startLoc, isStatic, propertyKey));
        } else {
          if (this.eat(types.question)) {
            optional = true;
          }
          node.key = propertyKey;
          node.value = this.flowParseTypeInitialiser();
          node.optional = optional;
          node.static = isStatic;
          node.variance = variance;
          this.flowObjectTypeSemicolon();
          nodeStart.properties.push(this.finishNode(node, "ObjectTypeProperty"));
        }
      }
    }

    isStatic = false;
  }

  this.expect(endDelim);

  var out = this.finishNode(nodeStart, "ObjectTypeAnnotation");

  this.state.inType = oldInType;

  return out;
};

pp$8.flowObjectTypeSemicolon = function () {
  if (!this.eat(types.semi) && !this.eat(types.comma) && !this.match(types.braceR) && !this.match(types.braceBarR)) {
    this.unexpected();
  }
};

pp$8.flowParseQualifiedTypeIdentifier = function (startPos, startLoc, id) {
  startPos = startPos || this.state.start;
  startLoc = startLoc || this.state.startLoc;
  var node = id || this.parseIdentifier();

  while (this.eat(types.dot)) {
    var node2 = this.startNodeAt(startPos, startLoc);
    node2.qualification = node;
    node2.id = this.parseIdentifier();
    node = this.finishNode(node2, "QualifiedTypeIdentifier");
  }

  return node;
};

pp$8.flowParseGenericType = function (startPos, startLoc, id) {
  var node = this.startNodeAt(startPos, startLoc);

  node.typeParameters = null;
  node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);

  if (this.isRelational("<")) {
    node.typeParameters = this.flowParseTypeParameterInstantiation();
  }

  return this.finishNode(node, "GenericTypeAnnotation");
};

pp$8.flowParseTypeofType = function () {
  var node = this.startNode();
  this.expect(types._typeof);
  node.argument = this.flowParsePrimaryType();
  return this.finishNode(node, "TypeofTypeAnnotation");
};

pp$8.flowParseTupleType = function () {
  var node = this.startNode();
  node.types = [];
  this.expect(types.bracketL);
  // We allow trailing commas
  while (this.state.pos < this.input.length && !this.match(types.bracketR)) {
    node.types.push(this.flowParseType());
    if (this.match(types.bracketR)) break;
    this.expect(types.comma);
  }
  this.expect(types.bracketR);
  return this.finishNode(node, "TupleTypeAnnotation");
};

pp$8.flowParseFunctionTypeParam = function () {
  var name = null;
  var optional = false;
  var typeAnnotation = null;
  var node = this.startNode();
  var lh = this.lookahead();
  if (lh.type === types.colon || lh.type === types.question) {
    name = this.parseIdentifier();
    if (this.eat(types.question)) {
      optional = true;
    }
    typeAnnotation = this.flowParseTypeInitialiser();
  } else {
    typeAnnotation = this.flowParseType();
  }
  node.name = name;
  node.optional = optional;
  node.typeAnnotation = typeAnnotation;
  return this.finishNode(node, "FunctionTypeParam");
};

pp$8.reinterpretTypeAsFunctionTypeParam = function (type) {
  var node = this.startNodeAt(type.start, type.loc.start);
  node.name = null;
  node.optional = false;
  node.typeAnnotation = type;
  return this.finishNode(node, "FunctionTypeParam");
};

pp$8.flowParseFunctionTypeParams = function () {
  var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

  var ret = { params: params, rest: null };
  while (!this.match(types.parenR) && !this.match(types.ellipsis)) {
    ret.params.push(this.flowParseFunctionTypeParam());
    if (!this.match(types.parenR)) {
      this.expect(types.comma);
    }
  }
  if (this.eat(types.ellipsis)) {
    ret.rest = this.flowParseFunctionTypeParam();
  }
  return ret;
};

pp$8.flowIdentToTypeAnnotation = function (startPos, startLoc, node, id) {
  switch (id.name) {
    case "any":
      return this.finishNode(node, "AnyTypeAnnotation");

    case "void":
      return this.finishNode(node, "VoidTypeAnnotation");

    case "bool":
    case "boolean":
      return this.finishNode(node, "BooleanTypeAnnotation");

    case "mixed":
      return this.finishNode(node, "MixedTypeAnnotation");

    case "empty":
      return this.finishNode(node, "EmptyTypeAnnotation");

    case "number":
      return this.finishNode(node, "NumberTypeAnnotation");

    case "string":
      return this.finishNode(node, "StringTypeAnnotation");

    default:
      return this.flowParseGenericType(startPos, startLoc, id);
  }
};

// The parsing of types roughly parallels the parsing of expressions, and
// primary types are kind of like primary expressions...they're the
// primitives with which other types are constructed.
pp$8.flowParsePrimaryType = function () {
  var startPos = this.state.start;
  var startLoc = this.state.startLoc;
  var node = this.startNode();
  var tmp = void 0;
  var type = void 0;
  var isGroupedType = false;
  var oldNoAnonFunctionType = this.state.noAnonFunctionType;

  switch (this.state.type) {
    case types.name:
      return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());

    case types.braceL:
      return this.flowParseObjectType(false, false, true);

    case types.braceBarL:
      return this.flowParseObjectType(false, true, true);

    case types.bracketL:
      return this.flowParseTupleType();

    case types.relational:
      if (this.state.value === "<") {
        node.typeParameters = this.flowParseTypeParameterDeclaration();
        this.expect(types.parenL);
        tmp = this.flowParseFunctionTypeParams();
        node.params = tmp.params;
        node.rest = tmp.rest;
        this.expect(types.parenR);

        this.expect(types.arrow);

        node.returnType = this.flowParseType();

        return this.finishNode(node, "FunctionTypeAnnotation");
      }
      break;

    case types.parenL:
      this.next();

      // Check to see if this is actually a grouped type
      if (!this.match(types.parenR) && !this.match(types.ellipsis)) {
        if (this.match(types.name)) {
          var token = this.lookahead().type;
          isGroupedType = token !== types.question && token !== types.colon;
        } else {
          isGroupedType = true;
        }
      }

      if (isGroupedType) {
        this.state.noAnonFunctionType = false;
        type = this.flowParseType();
        this.state.noAnonFunctionType = oldNoAnonFunctionType;

        // A `,` or a `) =>` means this is an anonymous function type
        if (this.state.noAnonFunctionType || !(this.match(types.comma) || this.match(types.parenR) && this.lookahead().type === types.arrow)) {
          this.expect(types.parenR);
          return type;
        } else {
          // Eat a comma if there is one
          this.eat(types.comma);
        }
      }

      if (type) {
        tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);
      } else {
        tmp = this.flowParseFunctionTypeParams();
      }

      node.params = tmp.params;
      node.rest = tmp.rest;

      this.expect(types.parenR);

      this.expect(types.arrow);

      node.returnType = this.flowParseType();

      node.typeParameters = null;

      return this.finishNode(node, "FunctionTypeAnnotation");

    case types.string:
      return this.parseLiteral(this.state.value, "StringLiteralTypeAnnotation");

    case types._true:case types._false:
      node.value = this.match(types._true);
      this.next();
      return this.finishNode(node, "BooleanLiteralTypeAnnotation");

    case types.plusMin:
      if (this.state.value === "-") {
        this.next();
        if (!this.match(types.num)) this.unexpected(null, "Unexpected token, expected number");

        return this.parseLiteral(-this.state.value, "NumericLiteralTypeAnnotation", node.start, node.loc.start);
      }

      this.unexpected();
    case types.num:
      return this.parseLiteral(this.state.value, "NumericLiteralTypeAnnotation");

    case types._null:
      node.value = this.match(types._null);
      this.next();
      return this.finishNode(node, "NullLiteralTypeAnnotation");

    case types._this:
      node.value = this.match(types._this);
      this.next();
      return this.finishNode(node, "ThisTypeAnnotation");

    case types.star:
      this.next();
      return this.finishNode(node, "ExistentialTypeParam");

    default:
      if (this.state.type.keyword === "typeof") {
        return this.flowParseTypeofType();
      }
  }

  this.unexpected();
};

pp$8.flowParsePostfixType = function () {
  var startPos = this.state.start,
      startLoc = this.state.startLoc;
  var type = this.flowParsePrimaryType();
  while (!this.canInsertSemicolon() && this.match(types.bracketL)) {
    var node = this.startNodeAt(startPos, startLoc);
    node.elementType = type;
    this.expect(types.bracketL);
    this.expect(types.bracketR);
    type = this.finishNode(node, "ArrayTypeAnnotation");
  }
  return type;
};

pp$8.flowParsePrefixType = function () {
  var node = this.startNode();
  if (this.eat(types.question)) {
    node.typeAnnotation = this.flowParsePrefixType();
    return this.finishNode(node, "NullableTypeAnnotation");
  } else {
    return this.flowParsePostfixType();
  }
};

pp$8.flowParseAnonFunctionWithoutParens = function () {
  var param = this.flowParsePrefixType();
  if (!this.state.noAnonFunctionType && this.eat(types.arrow)) {
    var node = this.startNodeAt(param.start, param.loc.start);
    node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];
    node.rest = null;
    node.returnType = this.flowParseType();
    node.typeParameters = null;
    return this.finishNode(node, "FunctionTypeAnnotation");
  }
  return param;
};

pp$8.flowParseIntersectionType = function () {
  var node = this.startNode();
  this.eat(types.bitwiseAND);
  var type = this.flowParseAnonFunctionWithoutParens();
  node.types = [type];
  while (this.eat(types.bitwiseAND)) {
    node.types.push(this.flowParseAnonFunctionWithoutParens());
  }
  return node.types.length === 1 ? type : this.finishNode(node, "IntersectionTypeAnnotation");
};

pp$8.flowParseUnionType = function () {
  var node = this.startNode();
  this.eat(types.bitwiseOR);
  var type = this.flowParseIntersectionType();
  node.types = [type];
  while (this.eat(types.bitwiseOR)) {
    node.types.push(this.flowParseIntersectionType());
  }
  return node.types.length === 1 ? type : this.finishNode(node, "UnionTypeAnnotation");
};

pp$8.flowParseType = function () {
  var oldInType = this.state.inType;
  this.state.inType = true;
  var type = this.flowParseUnionType();
  this.state.inType = oldInType;
  return type;
};

pp$8.flowParseTypeAnnotation = function () {
  var node = this.startNode();
  node.typeAnnotation = this.flowParseTypeInitialiser();
  return this.finishNode(node, "TypeAnnotation");
};

pp$8.flowParseTypeAndPredicateAnnotation = function () {
  var node = this.startNode();

  var _flowParseTypeAndPred2 = this.flowParseTypeAndPredicateInitialiser();

  node.typeAnnotation = _flowParseTypeAndPred2[0];
  node.predicate = _flowParseTypeAndPred2[1];

  return this.finishNode(node, "TypeAnnotation");
};

pp$8.flowParseTypeAnnotatableIdentifier = function () {
  var ident = this.flowParseRestrictedIdentifier();
  if (this.match(types.colon)) {
    ident.typeAnnotation = this.flowParseTypeAnnotation();
    this.finishNode(ident, ident.type);
  }
  return ident;
};

pp$8.typeCastToParameter = function (node) {
  node.expression.typeAnnotation = node.typeAnnotation;

  return this.finishNodeAt(node.expression, node.expression.type, node.typeAnnotation.end, node.typeAnnotation.loc.end);
};

pp$8.flowParseVariance = function () {
  var variance = null;
  if (this.match(types.plusMin)) {
    if (this.state.value === "+") {
      variance = "plus";
    } else if (this.state.value === "-") {
      variance = "minus";
    }
    this.next();
  }
  return variance;
};

var flowPlugin = function (instance) {
  // plain function return types: function name(): string {}
  instance.extend("parseFunctionBody", function (inner) {
    return function (node, allowExpression) {
      if (this.match(types.colon) && !allowExpression) {
        // if allowExpression is true then we're parsing an arrow function and if
        // there's a return type then it's been handled elsewhere
        node.returnType = this.flowParseTypeAndPredicateAnnotation();
      }

      return inner.call(this, node, allowExpression);
    };
  });

  // interfaces
  instance.extend("parseStatement", function (inner) {
    return function (declaration, topLevel) {
      // strict mode handling of `interface` since it's a reserved word
      if (this.state.strict && this.match(types.name) && this.state.value === "interface") {
        var node = this.startNode();
        this.next();
        return this.flowParseInterface(node);
      } else {
        return inner.call(this, declaration, topLevel);
      }
    };
  });

  // declares, interfaces and type aliases
  instance.extend("parseExpressionStatement", function (inner) {
    return function (node, expr) {
      if (expr.type === "Identifier") {
        if (expr.name === "declare") {
          if (this.match(types._class) || this.match(types.name) || this.match(types._function) || this.match(types._var) || this.match(types._export)) {
            return this.flowParseDeclare(node);
          }
        } else if (this.match(types.name)) {
          if (expr.name === "interface") {
            return this.flowParseInterface(node);
          } else if (expr.name === "type") {
            return this.flowParseTypeAlias(node);
          } else if (expr.name === "opaque") {
            return this.flowParseOpaqueType(node, false);
          }
        }
      }

      return inner.call(this, node, expr);
    };
  });

  // export type
  instance.extend("shouldParseExportDeclaration", function (inner) {
    return function () {
      return this.isContextual("type") || this.isContextual("interface") || this.isContextual("opaque") || inner.call(this);
    };
  });

  instance.extend("isExportDefaultSpecifier", function (inner) {
    return function () {
      if (this.match(types.name) && (this.state.value === "type" || this.state.value === "interface" || this.state.value === "opaque")) {
        return false;
      }

      return inner.call(this);
    };
  });

  instance.extend("parseConditional", function (inner) {
    return function (expr, noIn, startPos, startLoc, refNeedsArrowPos) {
      // only do the expensive clone if there is a question mark
      // and if we come from inside parens
      if (refNeedsArrowPos && this.match(types.question)) {
        var state = this.state.clone();
        try {
          return inner.call(this, expr, noIn, startPos, startLoc);
        } catch (err) {
          if (err instanceof SyntaxError) {
            this.state = state;
            refNeedsArrowPos.start = err.pos || this.state.start;
            return expr;
          } else {
            // istanbul ignore next: no such error is expected
            throw err;
          }
        }
      }

      return inner.call(this, expr, noIn, startPos, startLoc);
    };
  });

  instance.extend("parseParenItem", function (inner) {
    return function (node, startPos, startLoc) {
      node = inner.call(this, node, startPos, startLoc);
      if (this.eat(types.question)) {
        node.optional = true;
      }

      if (this.match(types.colon)) {
        var typeCastNode = this.startNodeAt(startPos, startLoc);
        typeCastNode.expression = node;
        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();

        return this.finishNode(typeCastNode, "TypeCastExpression");
      }

      return node;
    };
  });

  instance.extend("parseExport", function (inner) {
    return function (node) {
      node = inner.call(this, node);
      if (node.type === "ExportNamedDeclaration") {
        node.exportKind = node.exportKind || "value";
      }
      return node;
    };
  });

  instance.extend("parseExportDeclaration", function (inner) {
    return function (node) {
      if (this.isContextual("type")) {
        node.exportKind = "type";

        var declarationNode = this.startNode();
        this.next();

        if (this.match(types.braceL)) {
          // export type { foo, bar };
          node.specifiers = this.parseExportSpecifiers();
          this.parseExportFrom(node);
          return null;
        } else {
          // export type Foo = Bar;
          return this.flowParseTypeAlias(declarationNode);
        }
      } else if (this.isContextual("opaque")) {
        node.exportKind = "type";

        var _declarationNode = this.startNode();
        this.next();
        // export opaque type Foo = Bar;
        return this.flowParseOpaqueType(_declarationNode, false);
      } else if (this.isContextual("interface")) {
        node.exportKind = "type";
        var _declarationNode2 = this.startNode();
        this.next();
        return this.flowParseInterface(_declarationNode2);
      } else {
        return inner.call(this, node);
      }
    };
  });

  instance.extend("parseClassId", function (inner) {
    return function (node) {
      inner.apply(this, arguments);
      if (this.isRelational("<")) {
        node.typeParameters = this.flowParseTypeParameterDeclaration();
      }
    };
  });

  // don't consider `void` to be a keyword as then it'll use the void token type
  // and set startExpr
  instance.extend("isKeyword", function (inner) {
    return function (name) {
      if (this.state.inType && name === "void") {
        return false;
      } else {
        return inner.call(this, name);
      }
    };
  });

  // ensure that inside flow types, we bypass the jsx parser plugin
  instance.extend("readToken", function (inner) {
    return function (code) {
      if (this.state.inType && (code === 62 || code === 60)) {
        return this.finishOp(types.relational, 1);
      } else {
        return inner.call(this, code);
      }
    };
  });

  // don't lex any token as a jsx one inside a flow type
  instance.extend("jsx_readToken", function (inner) {
    return function () {
      if (!this.state.inType) return inner.call(this);
    };
  });

  instance.extend("toAssignable", function (inner) {
    return function (node, isBinding, contextDescription) {
      if (node.type === "TypeCastExpression") {
        return inner.call(this, this.typeCastToParameter(node), isBinding, contextDescription);
      } else {
        return inner.call(this, node, isBinding, contextDescription);
      }
    };
  });

  // turn type casts that we found in function parameter head into type annotated params
  instance.extend("toAssignableList", function (inner) {
    return function (exprList, isBinding, contextDescription) {
      for (var i = 0; i < exprList.length; i++) {
        var expr = exprList[i];
        if (expr && expr.type === "TypeCastExpression") {
          exprList[i] = this.typeCastToParameter(expr);
        }
      }
      return inner.call(this, exprList, isBinding, contextDescription);
    };
  });

  // this is a list of nodes, from something like a call expression, we need to filter the
  // type casts that we've found that are illegal in this context
  instance.extend("toReferencedList", function () {
    return function (exprList) {
      for (var i = 0; i < exprList.length; i++) {
        var expr = exprList[i];
        if (expr && expr._exprListItem && expr.type === "TypeCastExpression") {
          this.raise(expr.start, "Unexpected type cast");
        }
      }

      return exprList;
    };
  });

  // parse an item inside a expression list eg. `(NODE, NODE)` where NODE represents
  // the position where this function is called
  instance.extend("parseExprListItem", function (inner) {
    return function () {
      var container = this.startNode();

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      var node = inner.call.apply(inner, [this].concat(args));
      if (this.match(types.colon)) {
        container._exprListItem = true;
        container.expression = node;
        container.typeAnnotation = this.flowParseTypeAnnotation();
        return this.finishNode(container, "TypeCastExpression");
      } else {
        return node;
      }
    };
  });

  instance.extend("checkLVal", function (inner) {
    return function (node) {
      if (node.type !== "TypeCastExpression") {
        return inner.apply(this, arguments);
      }
    };
  });

  // parse class property type annotations
  instance.extend("parseClassProperty", function (inner) {
    return function (node) {
      delete node.variancePos;
      if (this.match(types.colon)) {
        node.typeAnnotation = this.flowParseTypeAnnotation();
      }
      return inner.call(this, node);
    };
  });

  // determine whether or not we're currently in the position where a class method would appear
  instance.extend("isClassMethod", function (inner) {
    return function () {
      return this.isRelational("<") || inner.call(this);
    };
  });

  // determine whether or not we're currently in the position where a class property would appear
  instance.extend("isClassProperty", function (inner) {
    return function () {
      return this.match(types.colon) || inner.call(this);
    };
  });

  instance.extend("isNonstaticConstructor", function (inner) {
    return function (method) {
      return !this.match(types.colon) && inner.call(this, method);
    };
  });

  // parse type parameters for class methods
  instance.extend("parseClassMethod", function (inner) {
    return function (classBody, method) {
      if (method.variance) {
        this.unexpected(method.variancePos);
      }
      delete method.variance;
      delete method.variancePos;
      if (this.isRelational("<")) {
        method.typeParameters = this.flowParseTypeParameterDeclaration();
      }

      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      inner.call.apply(inner, [this, classBody, method].concat(args));
    };
  });

  // parse a the super class type parameters and implements
  instance.extend("parseClassSuper", function (inner) {
    return function (node, isStatement) {
      inner.call(this, node, isStatement);
      if (node.superClass && this.isRelational("<")) {
        node.superTypeParameters = this.flowParseTypeParameterInstantiation();
      }
      if (this.isContextual("implements")) {
        this.next();
        var implemented = node.implements = [];
        do {
          var _node = this.startNode();
          _node.id = this.parseIdentifier();
          if (this.isRelational("<")) {
            _node.typeParameters = this.flowParseTypeParameterInstantiation();
          } else {
            _node.typeParameters = null;
          }
          implemented.push(this.finishNode(_node, "ClassImplements"));
        } while (this.eat(types.comma));
      }
    };
  });

  instance.extend("parsePropertyName", function (inner) {
    return function (node) {
      var variancePos = this.state.start;
      var variance = this.flowParseVariance();
      var key = inner.call(this, node);
      node.variance = variance;
      node.variancePos = variancePos;
      return key;
    };
  });

  // parse type parameters for object method shorthand
  instance.extend("parseObjPropValue", function (inner) {
    return function (prop) {
      if (prop.variance) {
        this.unexpected(prop.variancePos);
      }
      delete prop.variance;
      delete prop.variancePos;

      var typeParameters = void 0;

      // method shorthand
      if (this.isRelational("<")) {
        typeParameters = this.flowParseTypeParameterDeclaration();
        if (!this.match(types.parenL)) this.unexpected();
      }

      inner.apply(this, arguments);

      // add typeParameters if we found them
      if (typeParameters) {
        (prop.value || prop).typeParameters = typeParameters;
      }
    };
  });

  instance.extend("parseAssignableListItemTypes", function () {
    return function (param) {
      if (this.eat(types.question)) {
        param.optional = true;
      }
      if (this.match(types.colon)) {
        param.typeAnnotation = this.flowParseTypeAnnotation();
      }
      this.finishNode(param, param.type);
      return param;
    };
  });

  instance.extend("parseMaybeDefault", function (inner) {
    return function () {
      for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }

      var node = inner.apply(this, args);

      if (node.type === "AssignmentPattern" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {
        this.raise(node.typeAnnotation.start, "Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`");
      }

      return node;
    };
  });

  // parse typeof and type imports
  instance.extend("parseImportSpecifiers", function (inner) {
    return function (node) {
      node.importKind = "value";

      var kind = null;
      if (this.match(types._typeof)) {
        kind = "typeof";
      } else if (this.isContextual("type")) {
        kind = "type";
      }
      if (kind) {
        var lh = this.lookahead();
        if (lh.type === types.name && lh.value !== "from" || lh.type === types.braceL || lh.type === types.star) {
          this.next();
          node.importKind = kind;
        }
      }

      inner.call(this, node);
    };
  });

  // parse import-type/typeof shorthand
  instance.extend("parseImportSpecifier", function () {
    return function (node) {
      var specifier = this.startNode();
      var firstIdentLoc = this.state.start;
      var firstIdent = this.parseIdentifier(true);

      var specifierTypeKind = null;
      if (firstIdent.name === "type") {
        specifierTypeKind = "type";
      } else if (firstIdent.name === "typeof") {
        specifierTypeKind = "typeof";
      }

      var isBinding = false;
      if (this.isContextual("as")) {
        var as_ident = this.parseIdentifier(true);
        if (specifierTypeKind !== null && !this.match(types.name) && !this.state.type.keyword) {
          // `import {type as ,` or `import {type as }`
          specifier.imported = as_ident;
          specifier.importKind = specifierTypeKind;
          specifier.local = as_ident.__clone();
        } else {
          // `import {type as foo`
          specifier.imported = firstIdent;
          specifier.importKind = null;
          specifier.local = this.parseIdentifier();
        }
      } else if (specifierTypeKind !== null && (this.match(types.name) || this.state.type.keyword)) {
        // `import {type foo`
        specifier.imported = this.parseIdentifier(true);
        specifier.importKind = specifierTypeKind;
        if (this.eatContextual("as")) {
          specifier.local = this.parseIdentifier();
        } else {
          isBinding = true;
          specifier.local = specifier.imported.__clone();
        }
      } else {
        isBinding = true;
        specifier.imported = firstIdent;
        specifier.importKind = null;
        specifier.local = specifier.imported.__clone();
      }

      if ((node.importKind === "type" || node.importKind === "typeof") && (specifier.importKind === "type" || specifier.importKind === "typeof")) {
        this.raise(firstIdentLoc, "`The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements`");
      }

      if (isBinding) this.checkReservedWord(specifier.local.name, specifier.start, true, true);

      this.checkLVal(specifier.local, true, undefined, "import specifier");
      node.specifiers.push(this.finishNode(specifier, "ImportSpecifier"));
    };
  });

  // parse function type parameters - function foo<T>() {}
  instance.extend("parseFunctionParams", function (inner) {
    return function (node) {
      if (this.isRelational("<")) {
        node.typeParameters = this.flowParseTypeParameterDeclaration();
      }
      inner.call(this, node);
    };
  });

  // parse flow type annotations on variable declarator heads - let foo: string = bar
  instance.extend("parseVarHead", function (inner) {
    return function (decl) {
      inner.call(this, decl);
      if (this.match(types.colon)) {
        decl.id.typeAnnotation = this.flowParseTypeAnnotation();
        this.finishNode(decl.id, decl.id.type);
      }
    };
  });

  // parse the return type of an async arrow function - let foo = (async (): number => {});
  instance.extend("parseAsyncArrowFromCallExpression", function (inner) {
    return function (node, call) {
      if (this.match(types.colon)) {
        var oldNoAnonFunctionType = this.state.noAnonFunctionType;
        this.state.noAnonFunctionType = true;
        node.returnType = this.flowParseTypeAnnotation();
        this.state.noAnonFunctionType = oldNoAnonFunctionType;
      }

      return inner.call(this, node, call);
    };
  });

  // todo description
  instance.extend("shouldParseAsyncArrow", function (inner) {
    return function () {
      return this.match(types.colon) || inner.call(this);
    };
  });

  // We need to support type parameter declarations for arrow functions. This
  // is tricky. There are three situations we need to handle
  //
  // 1. This is either JSX or an arrow function. We'll try JSX first. If that
  //    fails, we'll try an arrow function. If that fails, we'll throw the JSX
  //    error.
  // 2. This is an arrow function. We'll parse the type parameter declaration,
  //    parse the rest, make sure the rest is an arrow function, and go from
  //    there
  // 3. This is neither. Just call the inner function
  instance.extend("parseMaybeAssign", function (inner) {
    return function () {
      var jsxError = null;

      for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }

      if (types.jsxTagStart && this.match(types.jsxTagStart)) {
        var state = this.state.clone();
        try {
          return inner.apply(this, args);
        } catch (err) {
          if (err instanceof SyntaxError) {
            this.state = state;

            // Remove `tc.j_expr` and `tc.j_oTag` from context added
            // by parsing `jsxTagStart` to stop the JSX plugin from
            // messing with the tokens
            this.state.context.length -= 2;

            jsxError = err;
          } else {
            // istanbul ignore next: no such error is expected
            throw err;
          }
        }
      }

      if (jsxError != null || this.isRelational("<")) {
        var arrowExpression = void 0;
        var typeParameters = void 0;
        try {
          typeParameters = this.flowParseTypeParameterDeclaration();

          arrowExpression = inner.apply(this, args);
          arrowExpression.typeParameters = typeParameters;
          arrowExpression.start = typeParameters.start;
          arrowExpression.loc.start = typeParameters.loc.start;
        } catch (err) {
          throw jsxError || err;
        }

        if (arrowExpression.type === "ArrowFunctionExpression") {
          return arrowExpression;
        } else if (jsxError != null) {
          throw jsxError;
        } else {
          this.raise(typeParameters.start, "Expected an arrow function after this type parameter declaration");
        }
      }

      return inner.apply(this, args);
    };
  });

  // handle return types for arrow functions
  instance.extend("parseArrow", function (inner) {
    return function (node) {
      if (this.match(types.colon)) {
        var state = this.state.clone();
        try {
          var oldNoAnonFunctionType = this.state.noAnonFunctionType;
          this.state.noAnonFunctionType = true;
          var returnType = this.flowParseTypeAndPredicateAnnotation();
          this.state.noAnonFunctionType = oldNoAnonFunctionType;

          if (this.canInsertSemicolon()) this.unexpected();
          if (!this.match(types.arrow)) this.unexpected();
          // assign after it is clear it is an arrow
          node.returnType = returnType;
        } catch (err) {
          if (err instanceof SyntaxError) {
            this.state = state;
          } else {
            // istanbul ignore next: no such error is expected
            throw err;
          }
        }
      }

      return inner.call(this, node);
    };
  });

  instance.extend("shouldParseArrow", function (inner) {
    return function () {
      return this.match(types.colon) || inner.call(this);
    };
  });
};

// Adapted from String.fromcodepoint to export the function without modifying String
/*! https://mths.be/fromcodepoint v0.2.1 by @mathias */

// The MIT License (MIT)
// Copyright (c) Mathias Bynens
//
// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
// associated documentation files (the "Software"), to deal in the Software without restriction,
// including without limitation the rights to use, copy, modify, merge, publish, distribute,
// sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all copies or
// substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
// NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

var fromCodePoint = String.fromCodePoint;

if (!fromCodePoint) {
  var stringFromCharCode = String.fromCharCode;
  var floor = Math.floor;
  fromCodePoint = function fromCodePoint() {
    var MAX_SIZE = 0x4000;
    var codeUnits = [];
    var highSurrogate = void 0;
    var lowSurrogate = void 0;
    var index = -1;
    var length = arguments.length;
    if (!length) {
      return "";
    }
    var result = "";
    while (++index < length) {
      var codePoint = Number(arguments[index]);
      if (!isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`
      codePoint < 0 || // not a valid Unicode code point
      codePoint > 0x10FFFF || // not a valid Unicode code point
      floor(codePoint) != codePoint // not an integer
      ) {
          throw RangeError("Invalid code point: " + codePoint);
        }
      if (codePoint <= 0xFFFF) {
        // BMP code point
        codeUnits.push(codePoint);
      } else {
        // Astral code point; split in surrogate halves
        // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
        codePoint -= 0x10000;
        highSurrogate = (codePoint >> 10) + 0xD800;
        lowSurrogate = codePoint % 0x400 + 0xDC00;
        codeUnits.push(highSurrogate, lowSurrogate);
      }
      if (index + 1 == length || codeUnits.length > MAX_SIZE) {
        result += stringFromCharCode.apply(null, codeUnits);
        codeUnits.length = 0;
      }
    }
    return result;
  };
}

var fromCodePoint$1 = fromCodePoint;

var XHTMLEntities = {
  quot: "\"",
  amp: "&",
  apos: "'",
  lt: "<",
  gt: ">",
  nbsp: "\xA0",
  iexcl: "\xA1",
  cent: "\xA2",
  pound: "\xA3",
  curren: "\xA4",
  yen: "\xA5",
  brvbar: "\xA6",
  sect: "\xA7",
  uml: "\xA8",
  copy: "\xA9",
  ordf: "\xAA",
  laquo: "\xAB",
  not: "\xAC",
  shy: "\xAD",
  reg: "\xAE",
  macr: "\xAF",
  deg: "\xB0",
  plusmn: "\xB1",
  sup2: "\xB2",
  sup3: "\xB3",
  acute: "\xB4",
  micro: "\xB5",
  para: "\xB6",
  middot: "\xB7",
  cedil: "\xB8",
  sup1: "\xB9",
  ordm: "\xBA",
  raquo: "\xBB",
  frac14: "\xBC",
  frac12: "\xBD",
  frac34: "\xBE",
  iquest: "\xBF",
  Agrave: "\xC0",
  Aacute: "\xC1",
  Acirc: "\xC2",
  Atilde: "\xC3",
  Auml: "\xC4",
  Aring: "\xC5",
  AElig: "\xC6",
  Ccedil: "\xC7",
  Egrave: "\xC8",
  Eacute: "\xC9",
  Ecirc: "\xCA",
  Euml: "\xCB",
  Igrave: "\xCC",
  Iacute: "\xCD",
  Icirc: "\xCE",
  Iuml: "\xCF",
  ETH: "\xD0",
  Ntilde: "\xD1",
  Ograve: "\xD2",
  Oacute: "\xD3",
  Ocirc: "\xD4",
  Otilde: "\xD5",
  Ouml: "\xD6",
  times: "\xD7",
  Oslash: "\xD8",
  Ugrave: "\xD9",
  Uacute: "\xDA",
  Ucirc: "\xDB",
  Uuml: "\xDC",
  Yacute: "\xDD",
  THORN: "\xDE",
  szlig: "\xDF",
  agrave: "\xE0",
  aacute: "\xE1",
  acirc: "\xE2",
  atilde: "\xE3",
  auml: "\xE4",
  aring: "\xE5",
  aelig: "\xE6",
  ccedil: "\xE7",
  egrave: "\xE8",
  eacute: "\xE9",
  ecirc: "\xEA",
  euml: "\xEB",
  igrave: "\xEC",
  iacute: "\xED",
  icirc: "\xEE",
  iuml: "\xEF",
  eth: "\xF0",
  ntilde: "\xF1",
  ograve: "\xF2",
  oacute: "\xF3",
  ocirc: "\xF4",
  otilde: "\xF5",
  ouml: "\xF6",
  divide: "\xF7",
  oslash: "\xF8",
  ugrave: "\xF9",
  uacute: "\xFA",
  ucirc: "\xFB",
  uuml: "\xFC",
  yacute: "\xFD",
  thorn: "\xFE",
  yuml: "\xFF",
  OElig: "\u0152",
  oelig: "\u0153",
  Scaron: "\u0160",
  scaron: "\u0161",
  Yuml: "\u0178",
  fnof: "\u0192",
  circ: "\u02C6",
  tilde: "\u02DC",
  Alpha: "\u0391",
  Beta: "\u0392",
  Gamma: "\u0393",
  Delta: "\u0394",
  Epsilon: "\u0395",
  Zeta: "\u0396",
  Eta: "\u0397",
  Theta: "\u0398",
  Iota: "\u0399",
  Kappa: "\u039A",
  Lambda: "\u039B",
  Mu: "\u039C",
  Nu: "\u039D",
  Xi: "\u039E",
  Omicron: "\u039F",
  Pi: "\u03A0",
  Rho: "\u03A1",
  Sigma: "\u03A3",
  Tau: "\u03A4",
  Upsilon: "\u03A5",
  Phi: "\u03A6",
  Chi: "\u03A7",
  Psi: "\u03A8",
  Omega: "\u03A9",
  alpha: "\u03B1",
  beta: "\u03B2",
  gamma: "\u03B3",
  delta: "\u03B4",
  epsilon: "\u03B5",
  zeta: "\u03B6",
  eta: "\u03B7",
  theta: "\u03B8",
  iota: "\u03B9",
  kappa: "\u03BA",
  lambda: "\u03BB",
  mu: "\u03BC",
  nu: "\u03BD",
  xi: "\u03BE",
  omicron: "\u03BF",
  pi: "\u03C0",
  rho: "\u03C1",
  sigmaf: "\u03C2",
  sigma: "\u03C3",
  tau: "\u03C4",
  upsilon: "\u03C5",
  phi: "\u03C6",
  chi: "\u03C7",
  psi: "\u03C8",
  omega: "\u03C9",
  thetasym: "\u03D1",
  upsih: "\u03D2",
  piv: "\u03D6",
  ensp: "\u2002",
  emsp: "\u2003",
  thinsp: "\u2009",
  zwnj: "\u200C",
  zwj: "\u200D",
  lrm: "\u200E",
  rlm: "\u200F",
  ndash: "\u2013",
  mdash: "\u2014",
  lsquo: "\u2018",
  rsquo: "\u2019",
  sbquo: "\u201A",
  ldquo: "\u201C",
  rdquo: "\u201D",
  bdquo: "\u201E",
  dagger: "\u2020",
  Dagger: "\u2021",
  bull: "\u2022",
  hellip: "\u2026",
  permil: "\u2030",
  prime: "\u2032",
  Prime: "\u2033",
  lsaquo: "\u2039",
  rsaquo: "\u203A",
  oline: "\u203E",
  frasl: "\u2044",
  euro: "\u20AC",
  image: "\u2111",
  weierp: "\u2118",
  real: "\u211C",
  trade: "\u2122",
  alefsym: "\u2135",
  larr: "\u2190",
  uarr: "\u2191",
  rarr: "\u2192",
  darr: "\u2193",
  harr: "\u2194",
  crarr: "\u21B5",
  lArr: "\u21D0",
  uArr: "\u21D1",
  rArr: "\u21D2",
  dArr: "\u21D3",
  hArr: "\u21D4",
  forall: "\u2200",
  part: "\u2202",
  exist: "\u2203",
  empty: "\u2205",
  nabla: "\u2207",
  isin: "\u2208",
  notin: "\u2209",
  ni: "\u220B",
  prod: "\u220F",
  sum: "\u2211",
  minus: "\u2212",
  lowast: "\u2217",
  radic: "\u221A",
  prop: "\u221D",
  infin: "\u221E",
  ang: "\u2220",
  and: "\u2227",
  or: "\u2228",
  cap: "\u2229",
  cup: "\u222A",
  "int": "\u222B",
  there4: "\u2234",
  sim: "\u223C",
  cong: "\u2245",
  asymp: "\u2248",
  ne: "\u2260",
  equiv: "\u2261",
  le: "\u2264",
  ge: "\u2265",
  sub: "\u2282",
  sup: "\u2283",
  nsub: "\u2284",
  sube: "\u2286",
  supe: "\u2287",
  oplus: "\u2295",
  otimes: "\u2297",
  perp: "\u22A5",
  sdot: "\u22C5",
  lceil: "\u2308",
  rceil: "\u2309",
  lfloor: "\u230A",
  rfloor: "\u230B",
  lang: "\u2329",
  rang: "\u232A",
  loz: "\u25CA",
  spades: "\u2660",
  clubs: "\u2663",
  hearts: "\u2665",
  diams: "\u2666"
};

var HEX_NUMBER = /^[\da-fA-F]+$/;
var DECIMAL_NUMBER = /^\d+$/;

types$1.j_oTag = new TokContext("<tag", false);
types$1.j_cTag = new TokContext("</tag", false);
types$1.j_expr = new TokContext("<tag>...</tag>", true, true);

types.jsxName = new TokenType("jsxName");
types.jsxText = new TokenType("jsxText", { beforeExpr: true });
types.jsxTagStart = new TokenType("jsxTagStart", { startsExpr: true });
types.jsxTagEnd = new TokenType("jsxTagEnd");

types.jsxTagStart.updateContext = function () {
  this.state.context.push(types$1.j_expr); // treat as beginning of JSX expression
  this.state.context.push(types$1.j_oTag); // start opening tag context
  this.state.exprAllowed = false;
};

types.jsxTagEnd.updateContext = function (prevType) {
  var out = this.state.context.pop();
  if (out === types$1.j_oTag && prevType === types.slash || out === types$1.j_cTag) {
    this.state.context.pop();
    this.state.exprAllowed = this.curContext() === types$1.j_expr;
  } else {
    this.state.exprAllowed = true;
  }
};

var pp$9 = Parser.prototype;

// Reads inline JSX contents token.

pp$9.jsxReadToken = function () {
  var out = "";
  var chunkStart = this.state.pos;
  for (;;) {
    if (this.state.pos >= this.input.length) {
      this.raise(this.state.start, "Unterminated JSX contents");
    }

    var ch = this.input.charCodeAt(this.state.pos);

    switch (ch) {
      case 60: // "<"
      case 123:
        // "{"
        if (this.state.pos === this.state.start) {
          if (ch === 60 && this.state.exprAllowed) {
            ++this.state.pos;
            return this.finishToken(types.jsxTagStart);
          }
          return this.getTokenFromCode(ch);
        }
        out += this.input.slice(chunkStart, this.state.pos);
        return this.finishToken(types.jsxText, out);

      case 38:
        // "&"
        out += this.input.slice(chunkStart, this.state.pos);
        out += this.jsxReadEntity();
        chunkStart = this.state.pos;
        break;

      default:
        if (isNewLine(ch)) {
          out += this.input.slice(chunkStart, this.state.pos);
          out += this.jsxReadNewLine(true);
          chunkStart = this.state.pos;
        } else {
          ++this.state.pos;
        }
    }
  }
};

pp$9.jsxReadNewLine = function (normalizeCRLF) {
  var ch = this.input.charCodeAt(this.state.pos);
  var out = void 0;
  ++this.state.pos;
  if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {
    ++this.state.pos;
    out = normalizeCRLF ? "\n" : "\r\n";
  } else {
    out = String.fromCharCode(ch);
  }
  ++this.state.curLine;
  this.state.lineStart = this.state.pos;

  return out;
};

pp$9.jsxReadString = function (quote) {
  var out = "";
  var chunkStart = ++this.state.pos;
  for (;;) {
    if (this.state.pos >= this.input.length) {
      this.raise(this.state.start, "Unterminated string constant");
    }

    var ch = this.input.charCodeAt(this.state.pos);
    if (ch === quote) break;
    if (ch === 38) {
      // "&"
      out += this.input.slice(chunkStart, this.state.pos);
      out += this.jsxReadEntity();
      chunkStart = this.state.pos;
    } else if (isNewLine(ch)) {
      out += this.input.slice(chunkStart, this.state.pos);
      out += this.jsxReadNewLine(false);
      chunkStart = this.state.pos;
    } else {
      ++this.state.pos;
    }
  }
  out += this.input.slice(chunkStart, this.state.pos++);
  return this.finishToken(types.string, out);
};

pp$9.jsxReadEntity = function () {
  var str = "";
  var count = 0;
  var entity = void 0;
  var ch = this.input[this.state.pos];

  var startPos = ++this.state.pos;
  while (this.state.pos < this.input.length && count++ < 10) {
    ch = this.input[this.state.pos++];
    if (ch === ";") {
      if (str[0] === "#") {
        if (str[1] === "x") {
          str = str.substr(2);
          if (HEX_NUMBER.test(str)) entity = fromCodePoint$1(parseInt(str, 16));
        } else {
          str = str.substr(1);
          if (DECIMAL_NUMBER.test(str)) entity = fromCodePoint$1(parseInt(str, 10));
        }
      } else {
        entity = XHTMLEntities[str];
      }
      break;
    }
    str += ch;
  }
  if (!entity) {
    this.state.pos = startPos;
    return "&";
  }
  return entity;
};

// Read a JSX identifier (valid tag or attribute name).
//
// Optimized version since JSX identifiers can"t contain
// escape characters and so can be read as single slice.
// Also assumes that first character was already checked
// by isIdentifierStart in readToken.

pp$9.jsxReadWord = function () {
  var ch = void 0;
  var start = this.state.pos;
  do {
    ch = this.input.charCodeAt(++this.state.pos);
  } while (isIdentifierChar(ch) || ch === 45); // "-"
  return this.finishToken(types.jsxName, this.input.slice(start, this.state.pos));
};

// Transforms JSX element name to string.

function getQualifiedJSXName(object) {
  if (object.type === "JSXIdentifier") {
    return object.name;
  }

  if (object.type === "JSXNamespacedName") {
    return object.namespace.name + ":" + object.name.name;
  }

  if (object.type === "JSXMemberExpression") {
    return getQualifiedJSXName(object.object) + "." + getQualifiedJSXName(object.property);
  }
}

// Parse next token as JSX identifier

pp$9.jsxParseIdentifier = function () {
  var node = this.startNode();
  if (this.match(types.jsxName)) {
    node.name = this.state.value;
  } else if (this.state.type.keyword) {
    node.name = this.state.type.keyword;
  } else {
    this.unexpected();
  }
  this.next();
  return this.finishNode(node, "JSXIdentifier");
};

// Parse namespaced identifier.

pp$9.jsxParseNamespacedName = function () {
  var startPos = this.state.start;
  var startLoc = this.state.startLoc;
  var name = this.jsxParseIdentifier();
  if (!this.eat(types.colon)) return name;

  var node = this.startNodeAt(startPos, startLoc);
  node.namespace = name;
  node.name = this.jsxParseIdentifier();
  return this.finishNode(node, "JSXNamespacedName");
};

// Parses element name in any form - namespaced, member
// or single identifier.

pp$9.jsxParseElementName = function () {
  var startPos = this.state.start;
  var startLoc = this.state.startLoc;
  var node = this.jsxParseNamespacedName();
  while (this.eat(types.dot)) {
    var newNode = this.startNodeAt(startPos, startLoc);
    newNode.object = node;
    newNode.property = this.jsxParseIdentifier();
    node = this.finishNode(newNode, "JSXMemberExpression");
  }
  return node;
};

// Parses any type of JSX attribute value.

pp$9.jsxParseAttributeValue = function () {
  var node = void 0;
  switch (this.state.type) {
    case types.braceL:
      node = this.jsxParseExpressionContainer();
      if (node.expression.type === "JSXEmptyExpression") {
        this.raise(node.start, "JSX attributes must only be assigned a non-empty expression");
      } else {
        return node;
      }

    case types.jsxTagStart:
    case types.string:
      node = this.parseExprAtom();
      node.extra = null;
      return node;

    default:
      this.raise(this.state.start, "JSX value should be either an expression or a quoted JSX text");
  }
};

// JSXEmptyExpression is unique type since it doesn't actually parse anything,
// and so it should start at the end of last read token (left brace) and finish
// at the beginning of the next one (right brace).

pp$9.jsxParseEmptyExpression = function () {
  var node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);
  return this.finishNodeAt(node, "JSXEmptyExpression", this.state.start, this.state.startLoc);
};

// Parse JSX spread child

pp$9.jsxParseSpreadChild = function () {
  var node = this.startNode();
  this.expect(types.braceL);
  this.expect(types.ellipsis);
  node.expression = this.parseExpression();
  this.expect(types.braceR);

  return this.finishNode(node, "JSXSpreadChild");
};

// Parses JSX expression enclosed into curly brackets.


pp$9.jsxParseExpressionContainer = function () {
  var node = this.startNode();
  this.next();
  if (this.match(types.braceR)) {
    node.expression = this.jsxParseEmptyExpression();
  } else {
    node.expression = this.parseExpression();
  }
  this.expect(types.braceR);
  return this.finishNode(node, "JSXExpressionContainer");
};

// Parses following JSX attribute name-value pair.

pp$9.jsxParseAttribute = function () {
  var node = this.startNode();
  if (this.eat(types.braceL)) {
    this.expect(types.ellipsis);
    node.argument = this.parseMaybeAssign();
    this.expect(types.braceR);
    return this.finishNode(node, "JSXSpreadAttribute");
  }
  node.name = this.jsxParseNamespacedName();
  node.value = this.eat(types.eq) ? this.jsxParseAttributeValue() : null;
  return this.finishNode(node, "JSXAttribute");
};

// Parses JSX opening tag starting after "<".

pp$9.jsxParseOpeningElementAt = function (startPos, startLoc) {
  var node = this.startNodeAt(startPos, startLoc);
  node.attributes = [];
  node.name = this.jsxParseElementName();
  while (!this.match(types.slash) && !this.match(types.jsxTagEnd)) {
    node.attributes.push(this.jsxParseAttribute());
  }
  node.selfClosing = this.eat(types.slash);
  this.expect(types.jsxTagEnd);
  return this.finishNode(node, "JSXOpeningElement");
};

// Parses JSX closing tag starting after "</".

pp$9.jsxParseClosingElementAt = function (startPos, startLoc) {
  var node = this.startNodeAt(startPos, startLoc);
  node.name = this.jsxParseElementName();
  this.expect(types.jsxTagEnd);
  return this.finishNode(node, "JSXClosingElement");
};

// Parses entire JSX element, including it"s opening tag
// (starting after "<"), attributes, contents and closing tag.

pp$9.jsxParseElementAt = function (startPos, startLoc) {
  var node = this.startNodeAt(startPos, startLoc);
  var children = [];
  var openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);
  var closingElement = null;

  if (!openingElement.selfClosing) {
    contents: for (;;) {
      switch (this.state.type) {
        case types.jsxTagStart:
          startPos = this.state.start;startLoc = this.state.startLoc;
          this.next();
          if (this.eat(types.slash)) {
            closingElement = this.jsxParseClosingElementAt(startPos, startLoc);
            break contents;
          }
          children.push(this.jsxParseElementAt(startPos, startLoc));
          break;

        case types.jsxText:
          children.push(this.parseExprAtom());
          break;

        case types.braceL:
          if (this.lookahead().type === types.ellipsis) {
            children.push(this.jsxParseSpreadChild());
          } else {
            children.push(this.jsxParseExpressionContainer());
          }

          break;

        // istanbul ignore next - should never happen
        default:
          this.unexpected();
      }
    }

    if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {
      this.raise(closingElement.start, "Expected corresponding JSX closing tag for <" + getQualifiedJSXName(openingElement.name) + ">");
    }
  }

  node.openingElement = openingElement;
  node.closingElement = closingElement;
  node.children = children;
  if (this.match(types.relational) && this.state.value === "<") {
    this.raise(this.state.start, "Adjacent JSX elements must be wrapped in an enclosing tag");
  }
  return this.finishNode(node, "JSXElement");
};

// Parses entire JSX element from current position.

pp$9.jsxParseElement = function () {
  var startPos = this.state.start;
  var startLoc = this.state.startLoc;
  this.next();
  return this.jsxParseElementAt(startPos, startLoc);
};

var jsxPlugin = function (instance) {
  instance.extend("parseExprAtom", function (inner) {
    return function (refShortHandDefaultPos) {
      if (this.match(types.jsxText)) {
        var node = this.parseLiteral(this.state.value, "JSXText");
        // https://github.com/babel/babel/issues/2078
        node.extra = null;
        return node;
      } else if (this.match(types.jsxTagStart)) {
        return this.jsxParseElement();
      } else {
        return inner.call(this, refShortHandDefaultPos);
      }
    };
  });

  instance.extend("readToken", function (inner) {
    return function (code) {
      if (this.state.inPropertyName) return inner.call(this, code);

      var context = this.curContext();

      if (context === types$1.j_expr) {
        return this.jsxReadToken();
      }

      if (context === types$1.j_oTag || context === types$1.j_cTag) {
        if (isIdentifierStart(code)) {
          return this.jsxReadWord();
        }

        if (code === 62) {
          ++this.state.pos;
          return this.finishToken(types.jsxTagEnd);
        }

        if ((code === 34 || code === 39) && context === types$1.j_oTag) {
          return this.jsxReadString(code);
        }
      }

      if (code === 60 && this.state.exprAllowed) {
        ++this.state.pos;
        return this.finishToken(types.jsxTagStart);
      }

      return inner.call(this, code);
    };
  });

  instance.extend("updateContext", function (inner) {
    return function (prevType) {
      if (this.match(types.braceL)) {
        var curContext = this.curContext();
        if (curContext === types$1.j_oTag) {
          this.state.context.push(types$1.braceExpression);
        } else if (curContext === types$1.j_expr) {
          this.state.context.push(types$1.templateQuasi);
        } else {
          inner.call(this, prevType);
        }
        this.state.exprAllowed = true;
      } else if (this.match(types.slash) && prevType === types.jsxTagStart) {
        this.state.context.length -= 2; // do not consider JSX expr -> JSX open tag -> ... anymore
        this.state.context.push(types$1.j_cTag); // reconsider as closing tag context
        this.state.exprAllowed = false;
      } else {
        return inner.call(this, prevType);
      }
    };
  });
};

plugins.estree = estreePlugin;
plugins.flow = flowPlugin;
plugins.jsx = jsxPlugin;

function parse(input, options) {
  return new Parser(options, input).parse();
}

function parseExpression(input, options) {
  var parser = new Parser(options, input);
  if (parser.options.strictMode) {
    parser.state.strict = true;
  }
  return parser.getExpression();
}

exports.parse = parse;
exports.parseExpression = parseExpression;
exports.tokTypes = types;

},{}],"../node_modules/zprint-clj/out/main.js":[function(require,module,exports) {
if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}


var h,aa=this;
function ba(a){var b=typeof a;if("object"==b)if(a){if(a instanceof Array)return"array";if(a instanceof Object)return b;var c=Object.prototype.toString.call(a);if("[object Window]"==c)return"object";if("[object Array]"==c||"number"==typeof a.length&&"undefined"!=typeof a.splice&&"undefined"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable("splice"))return"array";if("[object Function]"==c||"undefined"!=typeof a.call&&"undefined"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable("call"))return"function"}else return"null";else if("function"==
b&&"undefined"==typeof a.call)return"object";return b}var da="closure_uid_"+(1E9*Math.random()>>>0),ha=0;function ia(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var b=c.slice();b.push.apply(b,arguments);return a.apply(this,b)}};function ja(a,b){var c=a.length-b.length;return 0<=c&&a.indexOf(b,c)==c}var ka=String.prototype.trim?function(a){return a.trim()}:function(a){return a.replace(/^[\s\xa0]+|[\s\xa0]+$/g,"")};function la(a){return String(a.charAt(0)).toUpperCase()+String(a.substr(1)).toLowerCase()};function ma(a,b,c,d){return Array.prototype.splice.apply(a,na(arguments,1))}function na(a,b,c){return 2>=arguments.length?Array.prototype.slice.call(a,b):Array.prototype.slice.call(a,b,c)}function oa(a,b){a.sort(b||pa)}function qa(a,b){for(var c=Array(a.length),d=0;d<a.length;d++)c[d]={index:d,value:a[d]};var e=b||pa;oa(c,function(a,b){return e(a.value,b.value)||a.index-b.index});for(d=0;d<a.length;d++)a[d]=c[d].value}function pa(a,b){return a>b?1:a<b?-1:0};function ra(a){var b=[],c=0,d;for(d in a)b[c++]=d;return b}function sa(a,b){return null!==a&&b in a?a[b]:void 0};function ta(a,b){this.qa=[];this.gc=b;for(var c=!0,d=a.length-1;0<=d;d--){var e=a[d]|0;c&&e==b||(this.qa[d]=e,c=!1)}}var va={};function wa(a){if(-128<=a&&128>a){var b=va[a];if(b)return b}b=new ta([a|0],0>a?-1:0);-128<=a&&128>a&&(va[a]=b);return b}function xa(a){if(isNaN(a)||!isFinite(a))return ya;if(0>a)return xa(-a).Ra();for(var b=[],c=1,d=0;a>=c;d++)b[d]=a/c|0,c*=za;return new ta(b,0)}var za=4294967296,ya=wa(0),Aa=wa(1),Ba=wa(16777216);h=ta.prototype;
h.Ze=function(){return 0<this.qa.length?this.qa[0]:this.gc};h.Kc=function(){if(this.hb())return-this.Ra().Kc();for(var a=0,b=1,c=0;c<this.qa.length;c++){var d=Ca(this,c);a+=(0<=d?d:za+d)*b;b*=za}return a};
h.toString=function(a){a=a||10;if(2>a||36<a)throw Error("radix out of range: "+a);if(this.Hb())return"0";if(this.hb())return"-"+this.Ra().toString(a);for(var b=xa(Math.pow(a,6)),c=this,d="";;){var e=Da(c,b),f=(c.kd(e.multiply(b)).Ze()>>>0).toString(a);c=e;if(c.Hb())return f+d;for(;6>f.length;)f="0"+f;d=""+f+d}};function Ca(a,b){return 0>b?0:b<a.qa.length?a.qa[b]:a.gc}h.Hb=function(){if(0!=this.gc)return!1;for(var a=0;a<this.qa.length;a++)if(0!=this.qa[a])return!1;return!0};
h.hb=function(){return-1==this.gc};h.ve=function(a){return 0<this.compare(a)};h.we=function(a){return 0<=this.compare(a)};h.Gd=function(){return 0>this.compare(Ba)};h.Hd=function(a){return 0>=this.compare(a)};h.compare=function(a){a=this.kd(a);return a.hb()?-1:a.Hb()?0:1};h.Ra=function(){return this.Ke().add(Aa)};
h.add=function(a){for(var b=Math.max(this.qa.length,a.qa.length),c=[],d=0,e=0;e<=b;e++){var f=d+(Ca(this,e)&65535)+(Ca(a,e)&65535),g=(f>>>16)+(Ca(this,e)>>>16)+(Ca(a,e)>>>16);d=g>>>16;f&=65535;g&=65535;c[e]=g<<16|f}return new ta(c,c[c.length-1]&-2147483648?-1:0)};h.kd=function(a){return this.add(a.Ra())};
h.multiply=function(a){if(this.Hb()||a.Hb())return ya;if(this.hb())return a.hb()?this.Ra().multiply(a.Ra()):this.Ra().multiply(a).Ra();if(a.hb())return this.multiply(a.Ra()).Ra();if(this.Gd()&&a.Gd())return xa(this.Kc()*a.Kc());for(var b=this.qa.length+a.qa.length,c=[],d=0;d<2*b;d++)c[d]=0;for(d=0;d<this.qa.length;d++)for(var e=0;e<a.qa.length;e++){var f=Ca(this,d)>>>16,g=Ca(this,d)&65535,k=Ca(a,e)>>>16,p=Ca(a,e)&65535;c[2*d+2*e]+=g*p;Fa(c,2*d+2*e);c[2*d+2*e+1]+=f*p;Fa(c,2*d+2*e+1);c[2*d+2*e+1]+=
g*k;Fa(c,2*d+2*e+1);c[2*d+2*e+2]+=f*k;Fa(c,2*d+2*e+2)}for(d=0;d<b;d++)c[d]=c[2*d+1]<<16|c[2*d];for(d=b;d<2*b;d++)c[d]=0;return new ta(c,0)};function Fa(a,b){for(;(a[b]&65535)!=a[b];)a[b+1]+=a[b]>>>16,a[b]&=65535,b++}
function Da(a,b){if(b.Hb())throw Error("division by zero");if(a.Hb())return ya;if(a.hb())return b.hb()?Da(a.Ra(),b.Ra()):Da(a.Ra(),b).Ra();if(b.hb())return Da(a,b.Ra()).Ra();if(30<a.qa.length){if(a.hb()||b.hb())throw Error("slowDivide_ only works with positive integers.");for(var c=Aa,d=b;d.Hd(a);)c=c.shiftLeft(1),d=d.shiftLeft(1);var e=c.vc(1),f=d.vc(1);d=d.vc(2);for(c=c.vc(2);!d.Hb();){var g=f.add(d);g.Hd(a)&&(e=e.add(c),f=g);d=d.vc(1);c=c.vc(1)}return e}c=ya;for(d=a;d.we(b);){e=Math.max(1,Math.floor(d.Kc()/
b.Kc()));f=Math.ceil(Math.log(e)/Math.LN2);f=48>=f?1:Math.pow(2,f-48);g=xa(e);for(var k=g.multiply(b);k.hb()||k.ve(d);)e-=f,g=xa(e),k=g.multiply(b);g.Hb()&&(g=Aa);c=c.add(g);d=d.kd(k)}return c}h.Ke=function(){for(var a=this.qa.length,b=[],c=0;c<a;c++)b[c]=~this.qa[c];return new ta(b,~this.gc)};h.shiftLeft=function(a){var b=a>>5;a%=32;for(var c=this.qa.length+b+(0<a?1:0),d=[],e=0;e<c;e++)d[e]=0<a?Ca(this,e-b)<<a|Ca(this,e-b-1)>>>32-a:Ca(this,e-b);return new ta(d,this.gc)};
h.vc=function(a){var b=a>>5;a%=32;for(var c=this.qa.length-b,d=[],e=0;e<c;e++)d[e]=0<a?Ca(this,e+b)>>>a|Ca(this,e+b+1)<<32-a:Ca(this,e+b);return new ta(d,this.gc)};function Ga(a,b){null!=a&&this.append.apply(this,arguments)}h=Ga.prototype;h.Ob="";h.set=function(a){this.Ob=""+a};h.append=function(a,b,c){this.Ob+=String(a);if(null!=b)for(var d=1;d<arguments.length;d++)this.Ob+=arguments[d];return this};h.clear=function(){this.Ob=""};h.toString=function(){return this.Ob};var Ia={},Ja;if("undefined"===typeof l)var l={};if("undefined"===typeof Ka)var Ka=null;if("undefined"===typeof La)var La=null;var Ma=null;if("undefined"===typeof Na)var Na=null;function Pa(){return new m(null,5,[Qa,!0,Ra,!0,Ta,!1,Va,!1,Wa,null],null)}function n(a){return null!=a&&!1!==a}function Xa(a){return null==a}function Ya(a){return a instanceof Array}function Za(a){return"number"===typeof a}function $a(a){return null==a?!0:!1===a?!0:!1}function bb(a){return"string"==typeof a}
function cb(a,b){return a[ba(null==b?null:b)]?!0:a._?!0:!1}function eb(a){return null==a?null:a.constructor}function fb(a,b){var c=eb(b);c=n(n(c)?c.tb:c)?c.fb:ba(b);return Error(["No protocol method ",a," defined for type ",c,": ",b].join(""))}function gb(a){var b=a.fb;return n(b)?b:""+r.a(a)}
var hb="undefined"!==typeof Symbol&&"function"===ba(Symbol)?Symbol.iterator:"@@iterator",ib={"]":"_RBRACK_","'":"_SINGLEQUOTE_","\x3d":"_EQ_",'"':"_DOUBLEQUOTE_","!":"_BANG_","*":"_STAR_","%":"_PERCENT_","|":"_BAR_","~":"_TILDE_","/":"_SLASH_","\\":"_BSLASH_","-":"_","?":"_QMARK_","\x26":"_AMPERSAND_",":":"_COLON_","\x3c":"_LT_","{":"_LBRACE_","}":"_RBRACE_","[":"_LBRACK_","#":"_SHARP_","^":"_CARET_","+":"_PLUS_","@":"_CIRCA_","\x3e":"_GT_"};
function kb(a){for(var b=a.length,c=Array(b),d=0;;)if(d<b)c[d]=a[d],d+=1;else break;return c}function lb(a){return mb(function(a,c){a.push(c);return a},[],a)}function nb(){}function ob(){}function pb(){}
var rb=function rb(a){if(null!=a&&null!=a.S)return a.S(a);var c=rb[ba(null==a?null:a)];if(null!=c)return c.a?c.a(a):c.call(null,a);c=rb._;if(null!=c)return c.a?c.a(a):c.call(null,a);throw fb("ICounted.-count",a);},sb=function sb(a){if(null!=a&&null!=a.fa)return a.fa(a);var c=sb[ba(null==a?null:a)];if(null!=c)return c.a?c.a(a):c.call(null,a);c=sb._;if(null!=c)return c.a?c.a(a):c.call(null,a);throw fb("IEmptyableCollection.-empty",a);};function tb(){}
var vb=function vb(a,b){if(null!=a&&null!=a.T)return a.T(a,b);var d=vb[ba(null==a?null:a)];if(null!=d)return d.b?d.b(a,b):d.call(null,a,b);d=vb._;if(null!=d)return d.b?d.b(a,b):d.call(null,a,b);throw fb("ICollection.-conj",a);};function wb(){}var xb=function xb(a){switch(arguments.length){case 2:return xb.b(arguments[0],arguments[1]);case 3:return xb.c(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",r.a(arguments.length)].join(""));}};
xb.b=function(a,b){if(null!=a&&null!=a.W)return a.W(a,b);var c=xb[ba(null==a?null:a)];if(null!=c)return c.b?c.b(a,b):c.call(null,a,b);c=xb._;if(null!=c)return c.b?c.b(a,b):c.call(null,a,b);throw fb("IIndexed.-nth",a);};xb.c=function(a,b,c){if(null!=a&&null!=a.ba)return a.ba(a,b,c);var d=xb[ba(null==a?null:a)];if(null!=d)return d.c?d.c(a,b,c):d.call(null,a,b,c);d=xb._;if(null!=d)return d.c?d.c(a,b,c):d.call(null,a,b,c);throw fb("IIndexed.-nth",a);};xb.H=3;function yb(){}
var Ab=function Ab(a){if(null!=a&&null!=a.ia)return a.ia(a);var c=Ab[ba(null==a?null:a)];if(null!=c)return c.a?c.a(a):c.call(null,a);c=Ab._;if(null!=c)return c.a?c.a(a):c.call(null,a);throw fb("ISeq.-first",a);},Bb=function Bb(a){if(null!=a&&null!=a.pa)return a.pa(a);var c=Bb[ba(null==a?null:a)];if(null!=c)return c.a?c.a(a):c.call(null,a);c=Bb._;if(null!=c)return c.a?c.a(a):c.call(null,a);throw fb("ISeq.-rest",a);};function Cb(){}function Db(){}
var Eb=function Eb(a){switch(arguments.length){case 2:return Eb.b(arguments[0],arguments[1]);case 3:return Eb.c(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",r.a(arguments.length)].join(""));}};Eb.b=function(a,b){if(null!=a&&null!=a.R)return a.R(a,b);var c=Eb[ba(null==a?null:a)];if(null!=c)return c.b?c.b(a,b):c.call(null,a,b);c=Eb._;if(null!=c)return c.b?c.b(a,b):c.call(null,a,b);throw fb("ILookup.-lookup",a);};
Eb.c=function(a,b,c){if(null!=a&&null!=a.F)return a.F(a,b,c);var d=Eb[ba(null==a?null:a)];if(null!=d)return d.c?d.c(a,b,c):d.call(null,a,b,c);d=Eb._;if(null!=d)return d.c?d.c(a,b,c):d.call(null,a,b,c);throw fb("ILookup.-lookup",a);};Eb.H=3;
var Fb=function Fb(a,b){if(null!=a&&null!=a.Yb)return a.Yb(a,b);var d=Fb[ba(null==a?null:a)];if(null!=d)return d.b?d.b(a,b):d.call(null,a,b);d=Fb._;if(null!=d)return d.b?d.b(a,b):d.call(null,a,b);throw fb("IAssociative.-contains-key?",a);},Gb=function Gb(a,b,c){if(null!=a&&null!=a.P)return a.P(a,b,c);var e=Gb[ba(null==a?null:a)];if(null!=e)return e.c?e.c(a,b,c):e.call(null,a,b,c);e=Gb._;if(null!=e)return e.c?e.c(a,b,c):e.call(null,a,b,c);throw fb("IAssociative.-assoc",a);};function Hb(){}
var Ib=function Ib(a,b){if(null!=a&&null!=a.oa)return a.oa(a,b);var d=Ib[ba(null==a?null:a)];if(null!=d)return d.b?d.b(a,b):d.call(null,a,b);d=Ib._;if(null!=d)return d.b?d.b(a,b):d.call(null,a,b);throw fb("IMap.-dissoc",a);};function Jb(){}
var Kb=function Kb(a){if(null!=a&&null!=a.lc)return a.lc(a);var c=Kb[ba(null==a?null:a)];if(null!=c)return c.a?c.a(a):c.call(null,a);c=Kb._;if(null!=c)return c.a?c.a(a):c.call(null,a);throw fb("IMapEntry.-key",a);},Lb=function Lb(a){if(null!=a&&null!=a.mc)return a.mc(a);var c=Lb[ba(null==a?null:a)];if(null!=c)return c.a?c.a(a):c.call(null,a);c=Lb._;if(null!=c)return c.a?c.a(a):c.call(null,a);throw fb("IMapEntry.-val",a);};function Mb(){}
var Ob=function Ob(a,b){if(null!=a&&null!=a.xd)return a.xd(0,b);var d=Ob[ba(null==a?null:a)];if(null!=d)return d.b?d.b(a,b):d.call(null,a,b);d=Ob._;if(null!=d)return d.b?d.b(a,b):d.call(null,a,b);throw fb("ISet.-disjoin",a);},Pb=function Pb(a){if(null!=a&&null!=a.Pb)return a.Pb(a);var c=Pb[ba(null==a?null:a)];if(null!=c)return c.a?c.a(a):c.call(null,a);c=Pb._;if(null!=c)return c.a?c.a(a):c.call(null,a);throw fb("IStack.-peek",a);},Qb=function Qb(a){if(null!=a&&null!=a.Qb)return a.Qb(a);var c=Qb[ba(null==
a?null:a)];if(null!=c)return c.a?c.a(a):c.call(null,a);c=Qb._;if(null!=c)return c.a?c.a(a):c.call(null,a);throw fb("IStack.-pop",a);};function Rb(){}
var Sb=function Sb(a,b,c){if(null!=a&&null!=a.Ab)return a.Ab(a,b,c);var e=Sb[ba(null==a?null:a)];if(null!=e)return e.c?e.c(a,b,c):e.call(null,a,b,c);e=Sb._;if(null!=e)return e.c?e.c(a,b,c):e.call(null,a,b,c);throw fb("IVector.-assoc-n",a);},Tb=function Tb(a){if(null!=a&&null!=a.yc)return a.yc(a);var c=Tb[ba(null==a?null:a)];if(null!=c)return c.a?c.a(a):c.call(null,a);c=Tb._;if(null!=c)return c.a?c.a(a):c.call(null,a);throw fb("IDeref.-deref",a);};function Ub(){}
var Vb=function Vb(a){if(null!=a&&null!=a.L)return a.L(a);var c=Vb[ba(null==a?null:a)];if(null!=c)return c.a?c.a(a):c.call(null,a);c=Vb._;if(null!=c)return c.a?c.a(a):c.call(null,a);throw fb("IMeta.-meta",a);},Wb=function Wb(a,b){if(null!=a&&null!=a.J)return a.J(a,b);var d=Wb[ba(null==a?null:a)];if(null!=d)return d.b?d.b(a,b):d.call(null,a,b);d=Wb._;if(null!=d)return d.b?d.b(a,b):d.call(null,a,b);throw fb("IWithMeta.-with-meta",a);};function Yb(){}
var Zb=function Zb(a){switch(arguments.length){case 2:return Zb.b(arguments[0],arguments[1]);case 3:return Zb.c(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",r.a(arguments.length)].join(""));}};Zb.b=function(a,b){if(null!=a&&null!=a.ja)return a.ja(a,b);var c=Zb[ba(null==a?null:a)];if(null!=c)return c.b?c.b(a,b):c.call(null,a,b);c=Zb._;if(null!=c)return c.b?c.b(a,b):c.call(null,a,b);throw fb("IReduce.-reduce",a);};
Zb.c=function(a,b,c){if(null!=a&&null!=a.ka)return a.ka(a,b,c);var d=Zb[ba(null==a?null:a)];if(null!=d)return d.c?d.c(a,b,c):d.call(null,a,b,c);d=Zb._;if(null!=d)return d.c?d.c(a,b,c):d.call(null,a,b,c);throw fb("IReduce.-reduce",a);};Zb.H=3;function $b(){}
var ac=function ac(a,b,c){if(null!=a&&null!=a.kc)return a.kc(a,b,c);var e=ac[ba(null==a?null:a)];if(null!=e)return e.c?e.c(a,b,c):e.call(null,a,b,c);e=ac._;if(null!=e)return e.c?e.c(a,b,c):e.call(null,a,b,c);throw fb("IKVReduce.-kv-reduce",a);},bc=function bc(a,b){if(null!=a&&null!=a.D)return a.D(a,b);var d=bc[ba(null==a?null:a)];if(null!=d)return d.b?d.b(a,b):d.call(null,a,b);d=bc._;if(null!=d)return d.b?d.b(a,b):d.call(null,a,b);throw fb("IEquiv.-equiv",a);},cc=function cc(a){if(null!=a&&null!=
a.M)return a.M(a);var c=cc[ba(null==a?null:a)];if(null!=c)return c.a?c.a(a):c.call(null,a);c=cc._;if(null!=c)return c.a?c.a(a):c.call(null,a);throw fb("IHash.-hash",a);};function dc(){}var ec=function ec(a){if(null!=a&&null!=a.O)return a.O(a);var c=ec[ba(null==a?null:a)];if(null!=c)return c.a?c.a(a):c.call(null,a);c=ec._;if(null!=c)return c.a?c.a(a):c.call(null,a);throw fb("ISeqable.-seq",a);};function fc(){}function hc(){}function ic(){}function jc(){}
var kc=function kc(a){if(null!=a&&null!=a.Cc)return a.Cc(a);var c=kc[ba(null==a?null:a)];if(null!=c)return c.a?c.a(a):c.call(null,a);c=kc._;if(null!=c)return c.a?c.a(a):c.call(null,a);throw fb("IReversible.-rseq",a);},lc=function lc(a,b){if(null!=a&&null!=a.Bd)return a.Bd(0,b);var d=lc[ba(null==a?null:a)];if(null!=d)return d.b?d.b(a,b):d.call(null,a,b);d=lc._;if(null!=d)return d.b?d.b(a,b):d.call(null,a,b);throw fb("IWriter.-write",a);},mc=function mc(a){if(null!=a&&null!=a.fd)return a.fd(a);var c=
mc[ba(null==a?null:a)];if(null!=c)return c.a?c.a(a):c.call(null,a);c=mc._;if(null!=c)return c.a?c.a(a):c.call(null,a);throw fb("IPending.-realized?",a);},nc=function nc(a,b,c){if(null!=a&&null!=a.zd)return a.zd(0,b,c);var e=nc[ba(null==a?null:a)];if(null!=e)return e.c?e.c(a,b,c):e.call(null,a,b,c);e=nc._;if(null!=e)return e.c?e.c(a,b,c):e.call(null,a,b,c);throw fb("IWatchable.-notify-watches",a);},oc=function oc(a){if(null!=a&&null!=a.jc)return a.jc(a);var c=oc[ba(null==a?null:a)];if(null!=c)return c.a?
c.a(a):c.call(null,a);c=oc._;if(null!=c)return c.a?c.a(a):c.call(null,a);throw fb("IEditableCollection.-as-transient",a);},pc=function pc(a,b){if(null!=a&&null!=a.ac)return a.ac(a,b);var d=pc[ba(null==a?null:a)];if(null!=d)return d.b?d.b(a,b):d.call(null,a,b);d=pc._;if(null!=d)return d.b?d.b(a,b):d.call(null,a,b);throw fb("ITransientCollection.-conj!",a);},qc=function qc(a){if(null!=a&&null!=a.Dc)return a.Dc(a);var c=qc[ba(null==a?null:a)];if(null!=c)return c.a?c.a(a):c.call(null,a);c=qc._;if(null!=
c)return c.a?c.a(a):c.call(null,a);throw fb("ITransientCollection.-persistent!",a);},rc=function rc(a,b,c){if(null!=a&&null!=a.$b)return a.$b(a,b,c);var e=rc[ba(null==a?null:a)];if(null!=e)return e.c?e.c(a,b,c):e.call(null,a,b,c);e=rc._;if(null!=e)return e.c?e.c(a,b,c):e.call(null,a,b,c);throw fb("ITransientAssociative.-assoc!",a);};function sc(){}
var tc=function tc(a,b){if(null!=a&&null!=a.zb)return a.zb(a,b);var d=tc[ba(null==a?null:a)];if(null!=d)return d.b?d.b(a,b):d.call(null,a,b);d=tc._;if(null!=d)return d.b?d.b(a,b):d.call(null,a,b);throw fb("IComparable.-compare",a);},uc=function uc(a){if(null!=a&&null!=a.sd)return a.sd();var c=uc[ba(null==a?null:a)];if(null!=c)return c.a?c.a(a):c.call(null,a);c=uc._;if(null!=c)return c.a?c.a(a):c.call(null,a);throw fb("IChunk.-drop-first",a);},vc=function vc(a){if(null!=a&&null!=a.dd)return a.dd(a);
var c=vc[ba(null==a?null:a)];if(null!=c)return c.a?c.a(a):c.call(null,a);c=vc._;if(null!=c)return c.a?c.a(a):c.call(null,a);throw fb("IChunkedSeq.-chunked-first",a);},wc=function wc(a){if(null!=a&&null!=a.Qc)return a.Qc(a);var c=wc[ba(null==a?null:a)];if(null!=c)return c.a?c.a(a):c.call(null,a);c=wc._;if(null!=c)return c.a?c.a(a):c.call(null,a);throw fb("IChunkedSeq.-chunked-rest",a);},xc=function xc(a){if(null!=a&&null!=a.Ac)return a.Ac(a);var c=xc[ba(null==a?null:a)];if(null!=c)return c.a?c.a(a):
c.call(null,a);c=xc._;if(null!=c)return c.a?c.a(a):c.call(null,a);throw fb("INamed.-name",a);},yc=function yc(a){if(null!=a&&null!=a.Bc)return a.Bc(a);var c=yc[ba(null==a?null:a)];if(null!=c)return c.a?c.a(a):c.call(null,a);c=yc._;if(null!=c)return c.a?c.a(a):c.call(null,a);throw fb("INamed.-namespace",a);},zc=function zc(a,b){if(null!=a&&null!=a.ce)return a.ce(a,b);var d=zc[ba(null==a?null:a)];if(null!=d)return d.b?d.b(a,b):d.call(null,a,b);d=zc._;if(null!=d)return d.b?d.b(a,b):d.call(null,a,b);
throw fb("IReset.-reset!",a);},Ac=function Ac(a){switch(arguments.length){case 2:return Ac.b(arguments[0],arguments[1]);case 3:return Ac.c(arguments[0],arguments[1],arguments[2]);case 4:return Ac.A(arguments[0],arguments[1],arguments[2],arguments[3]);case 5:return Ac.V(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4]);default:throw Error(["Invalid arity: ",r.a(arguments.length)].join(""));}};
Ac.b=function(a,b){if(null!=a&&null!=a.fe)return a.fe(a,b);var c=Ac[ba(null==a?null:a)];if(null!=c)return c.b?c.b(a,b):c.call(null,a,b);c=Ac._;if(null!=c)return c.b?c.b(a,b):c.call(null,a,b);throw fb("ISwap.-swap!",a);};Ac.c=function(a,b,c){if(null!=a&&null!=a.ge)return a.ge(a,b,c);var d=Ac[ba(null==a?null:a)];if(null!=d)return d.c?d.c(a,b,c):d.call(null,a,b,c);d=Ac._;if(null!=d)return d.c?d.c(a,b,c):d.call(null,a,b,c);throw fb("ISwap.-swap!",a);};
Ac.A=function(a,b,c,d){if(null!=a&&null!=a.he)return a.he(a,b,c,d);var e=Ac[ba(null==a?null:a)];if(null!=e)return e.A?e.A(a,b,c,d):e.call(null,a,b,c,d);e=Ac._;if(null!=e)return e.A?e.A(a,b,c,d):e.call(null,a,b,c,d);throw fb("ISwap.-swap!",a);};Ac.V=function(a,b,c,d,e){if(null!=a&&null!=a.ie)return a.ie(a,b,c,d,e);var f=Ac[ba(null==a?null:a)];if(null!=f)return f.V?f.V(a,b,c,d,e):f.call(null,a,b,c,d,e);f=Ac._;if(null!=f)return f.V?f.V(a,b,c,d,e):f.call(null,a,b,c,d,e);throw fb("ISwap.-swap!",a);};
Ac.H=5;var Bc=function Bc(a,b){if(null!=a&&null!=a.yd)return a.yd(0,b);var d=Bc[ba(null==a?null:a)];if(null!=d)return d.b?d.b(a,b):d.call(null,a,b);d=Bc._;if(null!=d)return d.b?d.b(a,b):d.call(null,a,b);throw fb("IVolatile.-vreset!",a);};function Cc(){}var Dc=function Dc(a){if(null!=a&&null!=a.ca)return a.ca(a);var c=Dc[ba(null==a?null:a)];if(null!=c)return c.a?c.a(a):c.call(null,a);c=Dc._;if(null!=c)return c.a?c.a(a):c.call(null,a);throw fb("IIterable.-iterator",a);};
function Ec(a){this.Ye=a;this.h=1073741824;this.C=0}Ec.prototype.Bd=function(a,b){return this.Ye.append(b)};function Fc(a){var b=new Ga;a.N(null,new Ec(b),Pa());return""+r.a(b)}var Gc="undefined"!==typeof Math.imul&&0!==Math.imul(4294967295,5)?function(a,b){return Math.imul(a,b)}:function(a,b){var c=a&65535,d=b&65535;return c*d+((a>>>16&65535)*d+c*(b>>>16&65535)<<16>>>0)|0};function Hc(a){a=Gc(a|0,-862048943);return Gc(a<<15|a>>>-15,461845907)}
function Ic(a,b){var c=(a|0)^(b|0);return Gc(c<<13|c>>>-13,5)+-430675100|0}function Jc(a,b){var c=(a|0)^b;c=Gc(c^c>>>16,-2048144789);c=Gc(c^c>>>13,-1028477387);return c^c>>>16}function Kc(a){a:{var b=1;for(var c=0;;)if(b<a.length){var d=b+2;c=Ic(c,Hc(a.charCodeAt(b-1)|a.charCodeAt(b)<<16));b=d}else{b=c;break a}}b=1===(a.length&1)?b^Hc(a.charCodeAt(a.length-1)):b;return Jc(b,Gc(2,a.length))}var Lc={},Mc=0;
function Nc(a){255<Mc&&(Lc={},Mc=0);if(null==a)return 0;var b=Lc[a];if("number"!==typeof b){a:if(null!=a)if(b=a.length,0<b)for(var c=0,d=0;;)if(c<b){var e=c+1;d=Gc(31,d)+a.charCodeAt(c);c=e}else{b=d;break a}else b=0;else b=0;Lc[a]=b;Mc+=1}return a=b}
function Oc(a){if(null!=a&&(a.h&4194304||l===a.df))return a.M(null)^0;if("number"===typeof a){if(n(isFinite(a)))return Math.floor(a)%2147483647;switch(a){case Infinity:return 2146435072;case -Infinity:return-1048576;default:return 2146959360}}else return!0===a?a=1231:!1===a?a=1237:"string"===typeof a?(a=Nc(a),0!==a&&(a=Hc(a),a=Ic(0,a),a=Jc(a,4))):a=a instanceof Date?a.valueOf()^0:null==a?0:cc(a)^0,a}function Pc(a,b){return a^b+2654435769+(a<<6)+(a>>2)}function Qc(a){return a instanceof u}
function Rc(a,b){if(a.wb===b.wb)return 0;var c=$a(a.Ja);if(n(c?b.Ja:c))return-1;if(n(a.Ja)){if($a(b.Ja))return 1;c=pa(a.Ja,b.Ja);return 0===c?pa(a.name,b.name):c}return pa(a.name,b.name)}function u(a,b,c,d,e){this.Ja=a;this.name=b;this.wb=c;this.ic=d;this.Na=e;this.h=2154168321;this.C=4096}h=u.prototype;h.toString=function(){return this.wb};h.equiv=function(a){return this.D(null,a)};h.D=function(a,b){return b instanceof u?this.wb===b.wb:!1};
h.call=function(){var a=null;a=function(a,c,d){switch(arguments.length){case 2:return w.b(c,this);case 3:return w.c(c,this,d)}throw Error("Invalid arity: "+(arguments.length-1));};a.b=function(a,c){return w.b(c,this)};a.c=function(a,c,d){return w.c(c,this,d)};return a}();h.apply=function(a,b){return this.call.apply(this,[this].concat(kb(b)))};h.a=function(a){return w.b(a,this)};h.b=function(a,b){return w.c(a,this,b)};h.L=function(){return this.Na};
h.J=function(a,b){return new u(this.Ja,this.name,this.wb,this.ic,b)};h.M=function(){var a=this.ic;return null!=a?a:this.ic=a=Pc(Kc(this.name),Nc(this.Ja))};h.Ac=function(){return this.name};h.Bc=function(){return this.Ja};h.N=function(a,b){return lc(b,this.wb)};var Sc=function Sc(a){switch(arguments.length){case 1:return Sc.a(arguments[0]);case 2:return Sc.b(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",r.a(arguments.length)].join(""));}};
Sc.a=function(a){if(a instanceof u)return a;var b=a.indexOf("/");return 1>b?Sc.b(null,a):Sc.b(a.substring(0,b),a.substring(b+1,a.length))};Sc.b=function(a,b){var c=null!=a?[r.a(a),"/",r.a(b)].join(""):b;return new u(a,b,c,null,null)};Sc.H=2;function Tc(a){return null!=a?a.C&131072||l===a.ef?!0:a.C?!1:cb(Cc,a):cb(Cc,a)}
function x(a){if(null==a)return null;if(null!=a&&(a.h&8388608||l===a.de))return a.O(null);if(Ya(a)||"string"===typeof a)return 0===a.length?null:new Uc(a,0,null);if(cb(dc,a))return ec(a);throw Error([r.a(a)," is not ISeqable"].join(""));}function y(a){if(null==a)return null;if(null!=a&&(a.h&64||l===a.G))return a.ia(null);a=x(a);return null==a?null:Ab(a)}function Vc(a){return null!=a?null!=a&&(a.h&64||l===a.G)?a.pa(null):(a=x(a))?Bb(a):Wc:Wc}
function B(a){return null==a?null:null!=a&&(a.h&128||l===a.Rc)?a.ma(null):x(Vc(a))}var C=function C(a){switch(arguments.length){case 1:return C.a(arguments[0]);case 2:return C.b(arguments[0],arguments[1]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return C.g(arguments[0],arguments[1],new Uc(c.slice(2),0,null))}};C.a=function(){return!0};C.b=function(a,b){return null==a?null==b:a===b||bc(a,b)};
C.g=function(a,b,c){for(;;)if(C.b(a,b))if(B(c))a=b,b=y(c),c=B(c);else return C.b(b,y(c));else return!1};C.I=function(a){var b=y(a),c=B(a);a=y(c);c=B(c);return C.g(b,a,c)};C.H=2;function Xc(a){this.K=a}Xc.prototype.next=function(){if(null!=this.K){var a=y(this.K);this.K=B(this.K);return{value:a,done:!1}}return{value:null,done:!0}};function Yc(a){return new Xc(x(a))}function $c(a,b){var c=Hc(a);c=Ic(0,c);return Jc(c,b)}
function ad(a){var b=0,c=1;for(a=x(a);;)if(null!=a)b+=1,c=Gc(31,c)+Oc(y(a))|0,a=B(a);else return $c(c,b)}var bd=$c(1,0);function cd(a){var b=0,c=0;for(a=x(a);;)if(null!=a)b+=1,c=c+Oc(y(a))|0,a=B(a);else return $c(c,b)}var dd=$c(0,0);pb["null"]=!0;rb["null"]=function(){return 0};Date.prototype.D=function(a,b){return b instanceof Date&&this.valueOf()===b.valueOf()};Date.prototype.Zb=l;
Date.prototype.zb=function(a,b){if(b instanceof Date)return pa(this.valueOf(),b.valueOf());throw Error(["Cannot compare ",r.a(this)," to ",r.a(b)].join(""));};bc.number=function(a,b){return a===b};nb["function"]=!0;Ub["function"]=!0;Vb["function"]=function(){return null};cc._=function(a){return a[da]||(a[da]=++ha)};function ed(a){return a+1}function fd(a){this.B=a;this.h=32768;this.C=0}fd.prototype.yc=function(){return this.B};function gd(a){return a instanceof fd}
function hd(a){return gd(a)?Tb(a):a}function id(a,b){var c=rb(a);if(0===c)return b.w?b.w():b.call(null);for(var d=xb.b(a,0),e=1;;)if(e<c){var f=xb.b(a,e);d=b.b?b.b(d,f):b.call(null,d,f);if(gd(d))return Tb(d);e+=1}else return d}function jd(a,b,c){var d=rb(a),e=c;for(c=0;;)if(c<d){var f=xb.b(a,c);e=b.b?b.b(e,f):b.call(null,e,f);if(gd(e))return Tb(e);c+=1}else return e}
function kd(a,b){var c=a.length;if(0===a.length)return b.w?b.w():b.call(null);for(var d=a[0],e=1;;)if(e<c){var f=a[e];d=b.b?b.b(d,f):b.call(null,d,f);if(gd(d))return Tb(d);e+=1}else return d}function ld(a,b,c){var d=a.length,e=c;for(c=0;;)if(c<d){var f=a[c];e=b.b?b.b(e,f):b.call(null,e,f);if(gd(e))return Tb(e);c+=1}else return e}function md(a,b,c,d){for(var e=a.length;;)if(d<e){var f=a[d];c=b.b?b.b(c,f):b.call(null,c,f);if(gd(c))return Tb(c);d+=1}else return c}
function nd(a){return null!=a?a.h&2||l===a.Vd?!0:a.h?!1:cb(pb,a):cb(pb,a)}function od(a){return null!=a?a.h&16||l===a.ud?!0:a.h?!1:cb(wb,a):cb(wb,a)}function pd(a,b,c){var d=D(a);if(c>=d)return-1;!(0<c)&&0>c&&(c+=d,c=0>c?0:c);for(;;)if(c<d){if(C.b(qd(a,c),b))return c;c+=1}else return-1}function rd(a,b,c){var d=D(a);if(0===d)return-1;0<c?(--d,c=d<c?d:c):c=0>c?d+c:c;for(;;)if(0<=c){if(C.b(qd(a,c),b))return c;--c}else return-1}function sd(a,b){this.i=a;this.v=b}
sd.prototype.ha=function(){return this.v<this.i.length};sd.prototype.next=function(){var a=this.i[this.v];this.v+=1;return a};function Uc(a,b,c){this.i=a;this.v=b;this.u=c;this.h=166592766;this.C=139264}h=Uc.prototype;h.toString=function(){return Fc(this)};h.equiv=function(a){return this.D(null,a)};
h.indexOf=function(){var a=null;a=function(a,c){switch(arguments.length){case 1:return pd(this,a,0);case 2:return pd(this,a,c)}throw Error("Invalid arity: "+(arguments.length-1));};a.a=function(a){return pd(this,a,0)};a.b=function(a,c){return pd(this,a,c)};return a}();
h.lastIndexOf=function(){function a(a){return rd(this,a,D(this))}var b=null;b=function(b,d){switch(arguments.length){case 1:return a.call(this,b);case 2:return rd(this,b,d)}throw Error("Invalid arity: "+(arguments.length-1));};b.a=a;b.b=function(a,b){return rd(this,a,b)};return b}();h.W=function(a,b){var c=b+this.v;if(0<=c&&c<this.i.length)return this.i[c];throw Error("Index out of bounds");};h.ba=function(a,b,c){a=b+this.v;return 0<=a&&a<this.i.length?this.i[a]:c};
h.ca=function(){return new sd(this.i,this.v)};h.L=function(){return this.u};h.ma=function(){return this.v+1<this.i.length?new Uc(this.i,this.v+1,null):null};h.S=function(){var a=this.i.length-this.v;return 0>a?0:a};h.Cc=function(){var a=this.S(null);return 0<a?new td(this,a-1,null):null};h.M=function(){return ad(this)};h.D=function(a,b){return ud(this,b)};h.fa=function(){return Wc};h.ja=function(a,b){return md(this.i,b,this.i[this.v],this.v+1)};h.ka=function(a,b,c){return md(this.i,b,c,this.v)};
h.ia=function(){return this.i[this.v]};h.pa=function(){return this.v+1<this.i.length?new Uc(this.i,this.v+1,null):Wc};h.O=function(){return this.v<this.i.length?this:null};h.J=function(a,b){return new Uc(this.i,this.v,b)};h.T=function(a,b){return vd(b,this)};Uc.prototype[hb]=function(){return Yc(this)};function E(a){return 0<a.length?new Uc(a,0,null):null}function td(a,b,c){this.Pc=a;this.v=b;this.u=c;this.h=32374990;this.C=8192}h=td.prototype;h.toString=function(){return Fc(this)};
h.equiv=function(a){return this.D(null,a)};h.indexOf=function(){var a=null;a=function(a,c){switch(arguments.length){case 1:return pd(this,a,0);case 2:return pd(this,a,c)}throw Error("Invalid arity: "+(arguments.length-1));};a.a=function(a){return pd(this,a,0)};a.b=function(a,c){return pd(this,a,c)};return a}();
h.lastIndexOf=function(){function a(a){return rd(this,a,D(this))}var b=null;b=function(b,d){switch(arguments.length){case 1:return a.call(this,b);case 2:return rd(this,b,d)}throw Error("Invalid arity: "+(arguments.length-1));};b.a=a;b.b=function(a,b){return rd(this,a,b)};return b}();h.L=function(){return this.u};h.ma=function(){return 0<this.v?new td(this.Pc,this.v-1,null):null};h.S=function(){return this.v+1};h.M=function(){return ad(this)};h.D=function(a,b){return ud(this,b)};
h.fa=function(){return Wb(Wc,this.u)};h.ja=function(a,b){return wd(b,this)};h.ka=function(a,b,c){return xd(b,c,this)};h.ia=function(){return xb.b(this.Pc,this.v)};h.pa=function(){return 0<this.v?new td(this.Pc,this.v-1,null):Wc};h.O=function(){return this};h.J=function(a,b){return new td(this.Pc,this.v,b)};h.T=function(a,b){return vd(b,this)};td.prototype[hb]=function(){return Yc(this)};function yd(a){return y(B(a))}function zd(a){for(;;){var b=B(a);if(null!=b)a=b;else return y(a)}}
bc._=function(a,b){return a===b};var Ad=function Ad(a){switch(arguments.length){case 0:return Ad.w();case 1:return Ad.a(arguments[0]);case 2:return Ad.b(arguments[0],arguments[1]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return Ad.g(arguments[0],arguments[1],new Uc(c.slice(2),0,null))}};Ad.w=function(){return H};Ad.a=function(a){return a};Ad.b=function(a,b){return null!=a?vb(a,b):vb(Wc,b)};
Ad.g=function(a,b,c){for(;;)if(n(c))a=Ad.b(a,b),b=y(c),c=B(c);else return Ad.b(a,b)};Ad.I=function(a){var b=y(a),c=B(a);a=y(c);c=B(c);return Ad.g(b,a,c)};Ad.H=2;function Bd(a){return null==a?null:sb(a)}function D(a){if(null!=a)if(null!=a&&(a.h&2||l===a.Vd))a=a.S(null);else if(Ya(a))a=a.length;else if("string"===typeof a)a=a.length;else if(null!=a&&(a.h&8388608||l===a.de))a:{a=x(a);for(var b=0;;){if(nd(a)){a=b+rb(a);break a}a=B(a);b+=1}}else a=rb(a);else a=0;return a}
function Cd(a,b,c){for(;;){if(null==a)return c;if(0===b)return x(a)?y(a):c;if(od(a))return xb.c(a,b,c);if(x(a))a=B(a),--b;else return c}}
function qd(a,b){if("number"!==typeof b)throw Error("Index argument to nth must be a number");if(null==a)return a;if(null!=a&&(a.h&16||l===a.ud))return a.W(null,b);if(Ya(a)){if(0<=b&&b<a.length)return a[b];throw Error("Index out of bounds");}if("string"===typeof a){if(0<=b&&b<a.length)return a.charAt(b);throw Error("Index out of bounds");}if(null!=a&&(a.h&64||l===a.G)){a:{var c=a;for(var d=b;;){if(null==c)throw Error("Index out of bounds");if(0===d){if(x(c)){c=y(c);break a}throw Error("Index out of bounds");
}if(od(c)){c=xb.b(c,d);break a}if(x(c))c=B(c),--d;else throw Error("Index out of bounds");}}return c}if(cb(wb,a))return xb.b(a,b);throw Error(["nth not supported on this type ",r.a(gb(eb(a)))].join(""));}
function J(a,b,c){if("number"!==typeof b)throw Error("Index argument to nth must be a number.");if(null==a)return c;if(null!=a&&(a.h&16||l===a.ud))return a.ba(null,b,c);if(Ya(a))return 0<=b&&b<a.length?a[b]:c;if("string"===typeof a)return 0<=b&&b<a.length?a.charAt(b):c;if(null!=a&&(a.h&64||l===a.G))return Cd(a,b,c);if(cb(wb,a))return xb.c(a,b,c);throw Error(["nth not supported on this type ",r.a(gb(eb(a)))].join(""));}
var w=function w(a){switch(arguments.length){case 2:return w.b(arguments[0],arguments[1]);case 3:return w.c(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",r.a(arguments.length)].join(""));}};w.b=function(a,b){return null==a?null:null!=a&&(a.h&256||l===a.Yd)?a.R(null,b):Ya(a)?null!=b&&b<a.length?a[b|0]:null:"string"===typeof a?null!=b&&b<a.length?a.charAt(b|0):null:cb(Db,a)?Eb.b(a,b):null};
w.c=function(a,b,c){return null!=a?null!=a&&(a.h&256||l===a.Yd)?a.F(null,b,c):Ya(a)?null!=b&&0<=b&&b<a.length?a[b|0]:c:"string"===typeof a?null!=b&&0<=b&&b<a.length?a.charAt(b|0):c:cb(Db,a)?Eb.c(a,b,c):c:c};w.H=3;var Dd=function Dd(a){switch(arguments.length){case 3:return Dd.c(arguments[0],arguments[1],arguments[2]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return Dd.g(arguments[0],arguments[1],arguments[2],new Uc(c.slice(3),0,null))}};
Dd.c=function(a,b,c){return null!=a?Gb(a,b,c):Ed([b,c])};Dd.g=function(a,b,c,d){for(;;)if(a=Dd.c(a,b,c),n(d))b=y(d),c=yd(d),d=B(B(d));else return a};Dd.I=function(a){var b=y(a),c=B(a);a=y(c);var d=B(c);c=y(d);d=B(d);return Dd.g(b,a,c,d)};Dd.H=3;
var Fd=function Fd(a){switch(arguments.length){case 1:return Fd.a(arguments[0]);case 2:return Fd.b(arguments[0],arguments[1]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return Fd.g(arguments[0],arguments[1],new Uc(c.slice(2),0,null))}};Fd.a=function(a){return a};Fd.b=function(a,b){return null==a?null:Ib(a,b)};Fd.g=function(a,b,c){for(;;){if(null==a)return null;a=Fd.b(a,b);if(n(c))b=y(c),c=B(c);else return a}};
Fd.I=function(a){var b=y(a),c=B(a);a=y(c);c=B(c);return Fd.g(b,a,c)};Fd.H=2;function Gd(a){var b="function"==ba(a);return b?b:null!=a?l===a.Ud?!0:a.kf?!1:cb(nb,a):cb(nb,a)}function Hd(a,b){this.l=a;this.u=b;this.h=393217;this.C=0}h=Hd.prototype;h.L=function(){return this.u};h.J=function(a,b){return new Hd(this.l,b)};h.Ud=l;
h.call=function(){function a(a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M,Q,K,U,T){return Id(this.l,b,c,d,e,E([f,g,k,p,q,t,v,A,z,G,F,I,M,Q,K,U,T]))}function b(a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M,Q,K,U){a=this;return a.l.Ba?a.l.Ba(b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M,Q,K,U):a.l.call(null,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M,Q,K,U)}function c(a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M,Q,K){a=this;return a.l.Aa?a.l.Aa(b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M,Q,K):a.l.call(null,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M,Q,K)}function d(a,
b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M,Q){a=this;return a.l.za?a.l.za(b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M,Q):a.l.call(null,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M,Q)}function e(a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M){a=this;return a.l.ya?a.l.ya(b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M):a.l.call(null,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M)}function f(a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I){a=this;return a.l.xa?a.l.xa(b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I):a.l.call(null,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I)}function g(a,b,c,d,e,f,g,k,p,q,t,v,
A,z,G,F){a=this;return a.l.wa?a.l.wa(b,c,d,e,f,g,k,p,q,t,v,A,z,G,F):a.l.call(null,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F)}function k(a,b,c,d,e,f,g,k,p,q,t,v,A,z,G){a=this;return a.l.va?a.l.va(b,c,d,e,f,g,k,p,q,t,v,A,z,G):a.l.call(null,b,c,d,e,f,g,k,p,q,t,v,A,z,G)}function p(a,b,c,d,e,f,g,k,p,q,t,v,A,z){a=this;return a.l.ua?a.l.ua(b,c,d,e,f,g,k,p,q,t,v,A,z):a.l.call(null,b,c,d,e,f,g,k,p,q,t,v,A,z)}function q(a,b,c,d,e,f,g,k,p,q,t,v,A){a=this;return a.l.ta?a.l.ta(b,c,d,e,f,g,k,p,q,t,v,A):a.l.call(null,b,c,d,
e,f,g,k,p,q,t,v,A)}function t(a,b,c,d,e,f,g,k,p,q,t,v){a=this;return a.l.sa?a.l.sa(b,c,d,e,f,g,k,p,q,t,v):a.l.call(null,b,c,d,e,f,g,k,p,q,t,v)}function v(a,b,c,d,e,f,g,k,p,q,t){a=this;return a.l.ra?a.l.ra(b,c,d,e,f,g,k,p,q,t):a.l.call(null,b,c,d,e,f,g,k,p,q,t)}function A(a,b,c,d,e,f,g,k,p,q){a=this;return a.l.Da?a.l.Da(b,c,d,e,f,g,k,p,q):a.l.call(null,b,c,d,e,f,g,k,p,q)}function z(a,b,c,d,e,f,g,k,p){a=this;return a.l.la?a.l.la(b,c,d,e,f,g,k,p):a.l.call(null,b,c,d,e,f,g,k,p)}function G(a,b,c,d,e,f,
g,k){a=this;return a.l.Ca?a.l.Ca(b,c,d,e,f,g,k):a.l.call(null,b,c,d,e,f,g,k)}function F(a,b,c,d,e,f,g){a=this;return a.l.Z?a.l.Z(b,c,d,e,f,g):a.l.call(null,b,c,d,e,f,g)}function I(a,b,c,d,e,f){a=this;return a.l.V?a.l.V(b,c,d,e,f):a.l.call(null,b,c,d,e,f)}function M(a,b,c,d,e){a=this;return a.l.A?a.l.A(b,c,d,e):a.l.call(null,b,c,d,e)}function Q(a,b,c,d){a=this;return a.l.c?a.l.c(b,c,d):a.l.call(null,b,c,d)}function U(a,b,c){a=this;return a.l.b?a.l.b(b,c):a.l.call(null,b,c)}function ea(a,b){a=this;
return a.l.a?a.l.a(b):a.l.call(null,b)}function T(a){a=this;return a.l.w?a.l.w():a.l.call(null)}var K=null;K=function(ua,ca,Ha,fa,Ua,K,db,Sa,zb,ab,ub,qb,jb,Ea,Oa,Xb,gc,se,ae,Zc,ah,Vf){switch(arguments.length){case 1:return T.call(this,ua);case 2:return ea.call(this,ua,ca);case 3:return U.call(this,ua,ca,Ha);case 4:return Q.call(this,ua,ca,Ha,fa);case 5:return M.call(this,ua,ca,Ha,fa,Ua);case 6:return I.call(this,ua,ca,Ha,fa,Ua,K);case 7:return F.call(this,ua,ca,Ha,fa,Ua,K,db);case 8:return G.call(this,
ua,ca,Ha,fa,Ua,K,db,Sa);case 9:return z.call(this,ua,ca,Ha,fa,Ua,K,db,Sa,zb);case 10:return A.call(this,ua,ca,Ha,fa,Ua,K,db,Sa,zb,ab);case 11:return v.call(this,ua,ca,Ha,fa,Ua,K,db,Sa,zb,ab,ub);case 12:return t.call(this,ua,ca,Ha,fa,Ua,K,db,Sa,zb,ab,ub,qb);case 13:return q.call(this,ua,ca,Ha,fa,Ua,K,db,Sa,zb,ab,ub,qb,jb);case 14:return p.call(this,ua,ca,Ha,fa,Ua,K,db,Sa,zb,ab,ub,qb,jb,Ea);case 15:return k.call(this,ua,ca,Ha,fa,Ua,K,db,Sa,zb,ab,ub,qb,jb,Ea,Oa);case 16:return g.call(this,ua,ca,Ha,fa,
Ua,K,db,Sa,zb,ab,ub,qb,jb,Ea,Oa,Xb);case 17:return f.call(this,ua,ca,Ha,fa,Ua,K,db,Sa,zb,ab,ub,qb,jb,Ea,Oa,Xb,gc);case 18:return e.call(this,ua,ca,Ha,fa,Ua,K,db,Sa,zb,ab,ub,qb,jb,Ea,Oa,Xb,gc,se);case 19:return d.call(this,ua,ca,Ha,fa,Ua,K,db,Sa,zb,ab,ub,qb,jb,Ea,Oa,Xb,gc,se,ae);case 20:return c.call(this,ua,ca,Ha,fa,Ua,K,db,Sa,zb,ab,ub,qb,jb,Ea,Oa,Xb,gc,se,ae,Zc);case 21:return b.call(this,ua,ca,Ha,fa,Ua,K,db,Sa,zb,ab,ub,qb,jb,Ea,Oa,Xb,gc,se,ae,Zc,ah);case 22:return a.call(this,0,ca,Ha,fa,Ua,K,db,
Sa,zb,ab,ub,qb,jb,Ea,Oa,Xb,gc,se,ae,Zc,ah,Vf)}throw Error("Invalid arity: "+(arguments.length-1));};K.a=T;K.b=ea;K.c=U;K.A=Q;K.V=M;K.Z=I;K.Ca=F;K.la=G;K.Da=z;K.ra=A;K.sa=v;K.ta=t;K.ua=q;K.va=p;K.wa=k;K.xa=g;K.ya=f;K.za=e;K.Aa=d;K.Ba=c;K.ed=b;K.Xd=a;return K}();h.apply=function(a,b){return this.call.apply(this,[this].concat(kb(b)))};h.w=function(){return this.l.w?this.l.w():this.l.call(null)};h.a=function(a){return this.l.a?this.l.a(a):this.l.call(null,a)};
h.b=function(a,b){return this.l.b?this.l.b(a,b):this.l.call(null,a,b)};h.c=function(a,b,c){return this.l.c?this.l.c(a,b,c):this.l.call(null,a,b,c)};h.A=function(a,b,c,d){return this.l.A?this.l.A(a,b,c,d):this.l.call(null,a,b,c,d)};h.V=function(a,b,c,d,e){return this.l.V?this.l.V(a,b,c,d,e):this.l.call(null,a,b,c,d,e)};h.Z=function(a,b,c,d,e,f){return this.l.Z?this.l.Z(a,b,c,d,e,f):this.l.call(null,a,b,c,d,e,f)};
h.Ca=function(a,b,c,d,e,f,g){return this.l.Ca?this.l.Ca(a,b,c,d,e,f,g):this.l.call(null,a,b,c,d,e,f,g)};h.la=function(a,b,c,d,e,f,g,k){return this.l.la?this.l.la(a,b,c,d,e,f,g,k):this.l.call(null,a,b,c,d,e,f,g,k)};h.Da=function(a,b,c,d,e,f,g,k,p){return this.l.Da?this.l.Da(a,b,c,d,e,f,g,k,p):this.l.call(null,a,b,c,d,e,f,g,k,p)};h.ra=function(a,b,c,d,e,f,g,k,p,q){return this.l.ra?this.l.ra(a,b,c,d,e,f,g,k,p,q):this.l.call(null,a,b,c,d,e,f,g,k,p,q)};
h.sa=function(a,b,c,d,e,f,g,k,p,q,t){return this.l.sa?this.l.sa(a,b,c,d,e,f,g,k,p,q,t):this.l.call(null,a,b,c,d,e,f,g,k,p,q,t)};h.ta=function(a,b,c,d,e,f,g,k,p,q,t,v){return this.l.ta?this.l.ta(a,b,c,d,e,f,g,k,p,q,t,v):this.l.call(null,a,b,c,d,e,f,g,k,p,q,t,v)};h.ua=function(a,b,c,d,e,f,g,k,p,q,t,v,A){return this.l.ua?this.l.ua(a,b,c,d,e,f,g,k,p,q,t,v,A):this.l.call(null,a,b,c,d,e,f,g,k,p,q,t,v,A)};
h.va=function(a,b,c,d,e,f,g,k,p,q,t,v,A,z){return this.l.va?this.l.va(a,b,c,d,e,f,g,k,p,q,t,v,A,z):this.l.call(null,a,b,c,d,e,f,g,k,p,q,t,v,A,z)};h.wa=function(a,b,c,d,e,f,g,k,p,q,t,v,A,z,G){return this.l.wa?this.l.wa(a,b,c,d,e,f,g,k,p,q,t,v,A,z,G):this.l.call(null,a,b,c,d,e,f,g,k,p,q,t,v,A,z,G)};h.xa=function(a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F){return this.l.xa?this.l.xa(a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F):this.l.call(null,a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F)};
h.ya=function(a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I){return this.l.ya?this.l.ya(a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I):this.l.call(null,a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I)};h.za=function(a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M){return this.l.za?this.l.za(a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M):this.l.call(null,a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M)};
h.Aa=function(a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M,Q){return this.l.Aa?this.l.Aa(a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M,Q):this.l.call(null,a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M,Q)};h.Ba=function(a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M,Q,U){return this.l.Ba?this.l.Ba(a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M,Q,U):this.l.call(null,a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M,Q,U)};h.ed=function(a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M,Q,U,ea){return Id(this.l,a,b,c,d,E([e,f,g,k,p,q,t,v,A,z,G,F,I,M,Q,U,ea]))};
function Jd(a,b){return"function"==ba(a)?new Hd(a,b):null==a?null:Wb(a,b)}function Kd(a){var b=null!=a;return(b?null!=a?a.h&131072||l===a.zc||(a.h?0:cb(Ub,a)):cb(Ub,a):b)?Vb(a):null}function Ld(a){return null==a?null:Pb(a)}var Md=function Md(a){switch(arguments.length){case 1:return Md.a(arguments[0]);case 2:return Md.b(arguments[0],arguments[1]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return Md.g(arguments[0],arguments[1],new Uc(c.slice(2),0,null))}};
Md.a=function(a){return a};Md.b=function(a,b){return null==a?null:Ob(a,b)};Md.g=function(a,b,c){for(;;){if(null==a)return null;a=Md.b(a,b);if(n(c))b=y(c),c=B(c);else return a}};Md.I=function(a){var b=y(a),c=B(a);a=y(c);c=B(c);return Md.g(b,a,c)};Md.H=2;function Nd(a){return null==a||$a(x(a))}function Od(a){return null==a?!1:null!=a?a.h&8||l===a.bf?!0:a.h?!1:cb(tb,a):cb(tb,a)}function Pd(a){return null==a?!1:null!=a?a.h&4096||l===a.ee?!0:a.h?!1:cb(Mb,a):cb(Mb,a)}
function Qd(a){return null!=a?a.h&16777216||l===a.wd?!0:a.h?!1:cb(fc,a):cb(fc,a)}function L(a){return null==a?!1:null!=a?a.h&1024||l===a.Zd?!0:a.h?!1:cb(Hb,a):cb(Hb,a)}function Rd(a){return null!=a?a.h&67108864||l===a.ae?!0:a.h?!1:cb(ic,a):cb(ic,a)}function Sd(a){return null!=a?a.h&16384||l===a.jf?!0:a.h?!1:cb(Rb,a):cb(Rb,a)}function Td(a){return null!=a?a.C&512||l===a.af?!0:!1:!1}function Ud(a,b,c,d,e){for(;0!==e;)c[d]=a[b],d+=1,--e,b+=1}var Vd={};
function Wd(a){return null==a?!1:null!=a?a.h&64||l===a.G?!0:a.h?!1:cb(yb,a):cb(yb,a)}function Xd(a){return null==a?!1:!1===a?!1:!0}function Yd(a){return"number"===typeof a&&!isNaN(a)&&Infinity!==a&&parseFloat(a)===parseInt(a,10)}function Zd(a,b){return w.c(a,b,Vd)===Vd?!1:!0}
var $d=function $d(a){switch(arguments.length){case 1:return $d.a(arguments[0]);case 2:return $d.b(arguments[0],arguments[1]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return $d.g(arguments[0],arguments[1],new Uc(c.slice(2),0,null))}};$d.a=function(){return!0};$d.b=function(a,b){return!C.b(a,b)};$d.g=function(a,b,c){if(C.b(a,b))return!1;a=be([a,b]);for(b=c;;){var d=y(b);c=B(b);if(n(b)){if(Zd(a,d))return!1;a=Ad.b(a,d);b=c}else return!0}};
$d.I=function(a){var b=y(a),c=B(a);a=y(c);c=B(c);return $d.g(b,a,c)};$d.H=2;function ce(a,b){if(a===b)return 0;if(null==a)return-1;if(null==b)return 1;if("number"===typeof a){if("number"===typeof b)return pa(a,b);throw Error(["Cannot compare ",r.a(a)," to ",r.a(b)].join(""));}if(null!=a?a.C&2048||l===a.Zb||(a.C?0:cb(sc,a)):cb(sc,a))return tc(a,b);if("string"!==typeof a&&!Ya(a)&&!0!==a&&!1!==a||eb(a)!==eb(b))throw Error(["Cannot compare ",r.a(a)," to ",r.a(b)].join(""));return pa(a,b)}
function de(a,b){var c=D(a),d=D(b);if(c<d)c=-1;else if(c>d)c=1;else if(0===c)c=0;else a:for(d=0;;){var e=ce(qd(a,d),qd(b,d));if(0===e&&d+1<c)d+=1;else{c=e;break a}}return c}function ee(a){return C.b(a,ce)?ce:function(b,c){var d=a.b?a.b(b,c):a.call(null,b,c);return"number"===typeof d?d:n(d)?-1:n(a.b?a.b(c,b):a.call(null,c,b))?1:0}}function fe(a,b){if(x(b)){var c=ge(b),d=ee(a);qa(c,d);return x(c)}return Wc}
function he(a){return fe(function(a,c){var b=yd.a?yd.a(a):yd.call(null,a),e=yd.a?yd.a(c):yd.call(null,c),f=ee(ce);return f.b?f.b(b,e):f.call(null,b,e)},a)}function wd(a,b){var c=x(b);return c?mb(a,y(c),B(c)):a.w?a.w():a.call(null)}function xd(a,b,c){for(c=x(c);;)if(c){var d=y(c);b=a.b?a.b(b,d):a.call(null,b,d);if(gd(b))return Tb(b);c=B(c)}else return b}
function ie(a,b){var c=Dc(a);if(n(c.ha()))for(var d=c.next();;)if(c.ha()){var e=c.next();d=b.b?b.b(d,e):b.call(null,d,e);if(gd(d))return Tb(d)}else return d;else return b.w?b.w():b.call(null)}function je(a,b,c){for(a=Dc(a);;)if(a.ha()){var d=a.next();c=b.b?b.b(c,d):b.call(null,c,d);if(gd(c))return Tb(c)}else return c}function ke(a,b){return null!=b&&(b.h&524288||l===b.be)?b.ja(null,a):Ya(b)?kd(b,a):"string"===typeof b?kd(b,a):cb(Yb,b)?Zb.b(b,a):Tc(b)?ie(b,a):wd(a,b)}
function mb(a,b,c){return null!=c&&(c.h&524288||l===c.be)?c.ka(null,a,b):Ya(c)?ld(c,a,b):"string"===typeof c?ld(c,a,b):cb(Yb,c)?Zb.c(c,a,b):Tc(c)?je(c,a,b):xd(a,b,c)}function le(a,b){return null!=b?ac(b,a,!0):!0}function me(a){return a}function ne(a,b,c,d){a=a.a?a.a(b):a.call(null,b);c=mb(a,c,d);return a.a?a.a(c):a.call(null,c)}
var oe=function oe(a){switch(arguments.length){case 0:return oe.w();case 1:return oe.a(arguments[0]);case 2:return oe.b(arguments[0],arguments[1]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return oe.g(arguments[0],arguments[1],new Uc(c.slice(2),0,null))}};oe.w=function(){return 0};oe.a=function(a){return a};oe.b=function(a,b){return a+b};oe.g=function(a,b,c){return mb(oe,a+b,c)};oe.I=function(a){var b=y(a),c=B(a);a=y(c);c=B(c);return oe.g(b,a,c)};
oe.H=2;var pe=function pe(a){switch(arguments.length){case 1:return pe.a(arguments[0]);case 2:return pe.b(arguments[0],arguments[1]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return pe.g(arguments[0],arguments[1],new Uc(c.slice(2),0,null))}};pe.a=function(a){return a};pe.b=function(a,b){return a>b?a:b};pe.g=function(a,b,c){return mb(pe,a>b?a:b,c)};pe.I=function(a){var b=y(a),c=B(a);a=y(c);c=B(c);return pe.g(b,a,c)};pe.H=2;
var qe=function qe(a){switch(arguments.length){case 1:return qe.a(arguments[0]);case 2:return qe.b(arguments[0],arguments[1]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return qe.g(arguments[0],arguments[1],new Uc(c.slice(2),0,null))}};qe.a=function(a){return a};qe.b=function(a,b){return a<b?a:b};qe.g=function(a,b,c){return mb(qe,a<b?a:b,c)};qe.I=function(a){var b=y(a),c=B(a);a=y(c);c=B(c);return qe.g(b,a,c)};qe.H=2;
function re(a){return 0<=a?Math.floor(a):Math.ceil(a)}function te(a){return re((a-a%2)/2)}function ue(a){a-=a>>1&1431655765;a=(a&858993459)+(a>>2&858993459);return 16843009*(a+(a>>4)&252645135)>>24}
function ve(a){switch(arguments.length){case 1:return!0;case 2:return bc(arguments[0],arguments[1]);default:for(var b=[],c=arguments.length,d=0;;)if(d<c)b.push(arguments[d]),d+=1;else break;a:for(c=arguments[0],d=arguments[1],b=new Uc(b.slice(2),0,null);;)if(c===d)if(B(b))c=d,d=y(b),b=B(b);else{c=d===y(b);break a}else{c=!1;break a}return c}}function we(a,b){return bc(a,b)}function xe(a,b){for(var c=b,d=x(a);;)if(d&&0<c)--c,d=B(d);else return d}
var r=function r(a){switch(arguments.length){case 0:return r.w();case 1:return r.a(arguments[0]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return r.g(arguments[0],new Uc(c.slice(1),0,null))}};r.w=function(){return""};r.a=function(a){return null==a?"":""+a};r.g=function(a,b){for(var c=new Ga(""+r.a(a)),d=b;;)if(n(d))c=c.append(""+r.a(y(d))),d=B(d);else return c.toString()};r.I=function(a){var b=y(a);a=B(a);return r.g(b,a)};r.H=1;
function ye(a,b){return a.substring(b)}function ze(a,b){return a.substring(0,b)}function ud(a,b){if(Qd(b))if(nd(a)&&nd(b)&&D(a)!==D(b))var c=!1;else a:{c=x(a);for(var d=x(b);;){if(null==c){c=null==d;break a}if(null!=d&&C.b(y(c),y(d)))c=B(c),d=B(d);else{c=!1;break a}}}else c=null;return Xd(c)}function Ae(a,b,c,d,e){this.u=a;this.first=b;this.Ib=c;this.count=d;this.j=e;this.h=65937646;this.C=8192}h=Ae.prototype;h.toString=function(){return Fc(this)};h.equiv=function(a){return this.D(null,a)};
h.indexOf=function(){var a=null;a=function(a,c){switch(arguments.length){case 1:return pd(this,a,0);case 2:return pd(this,a,c)}throw Error("Invalid arity: "+(arguments.length-1));};a.a=function(a){return pd(this,a,0)};a.b=function(a,c){return pd(this,a,c)};return a}();
h.lastIndexOf=function(){function a(a){return rd(this,a,this.count)}var b=null;b=function(b,d){switch(arguments.length){case 1:return a.call(this,b);case 2:return rd(this,b,d)}throw Error("Invalid arity: "+(arguments.length-1));};b.a=a;b.b=function(a,b){return rd(this,a,b)};return b}();h.L=function(){return this.u};h.ma=function(){return 1===this.count?null:this.Ib};h.S=function(){return this.count};h.Pb=function(){return this.first};h.Qb=function(){return this.pa(null)};
h.M=function(){var a=this.j;return null!=a?a:this.j=a=ad(this)};h.D=function(a,b){return ud(this,b)};h.fa=function(){return Wb(Wc,this.u)};h.ja=function(a,b){return wd(b,this)};h.ka=function(a,b,c){return xd(b,c,this)};h.ia=function(){return this.first};h.pa=function(){return 1===this.count?Wc:this.Ib};h.O=function(){return this};h.J=function(a,b){return new Ae(b,this.first,this.Ib,this.count,this.j)};h.T=function(a,b){return new Ae(this.u,b,this,this.count+1,null)};
function Be(a){return null!=a?a.h&33554432||l===a.gf?!0:a.h?!1:cb(hc,a):cb(hc,a)}Ae.prototype[hb]=function(){return Yc(this)};function Ce(a){this.u=a;this.h=65937614;this.C=8192}h=Ce.prototype;h.toString=function(){return Fc(this)};h.equiv=function(a){return this.D(null,a)};
h.indexOf=function(){var a=null;a=function(a,c){switch(arguments.length){case 1:return pd(this,a,0);case 2:return pd(this,a,c)}throw Error("Invalid arity: "+(arguments.length-1));};a.a=function(a){return pd(this,a,0)};a.b=function(a,c){return pd(this,a,c)};return a}();
h.lastIndexOf=function(){function a(a){return rd(this,a,D(this))}var b=null;b=function(b,d){switch(arguments.length){case 1:return a.call(this,b);case 2:return rd(this,b,d)}throw Error("Invalid arity: "+(arguments.length-1));};b.a=a;b.b=function(a,b){return rd(this,a,b)};return b}();h.L=function(){return this.u};h.ma=function(){return null};h.S=function(){return 0};h.Pb=function(){return null};h.Qb=function(){throw Error("Can't pop empty list");};h.M=function(){return bd};
h.D=function(a,b){return Be(b)||Qd(b)?null==x(b):!1};h.fa=function(){return this};h.ja=function(a,b){return wd(b,this)};h.ka=function(a,b,c){return xd(b,c,this)};h.ia=function(){return null};h.pa=function(){return Wc};h.O=function(){return null};h.J=function(a,b){return new Ce(b)};h.T=function(a,b){return new Ae(this.u,b,null,1,null)};var Wc=new Ce(null);Ce.prototype[hb]=function(){return Yc(this)};
function De(a){return(null!=a?a.h&134217728||l===a.hf||(a.h?0:cb(jc,a)):cb(jc,a))?kc(a):mb(Ad,Wc,a)}var N=function N(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return N.g(0<c.length?new Uc(c.slice(0),0,null):null)};N.g=function(a){if(a instanceof Uc&&0===a.v)var b=a.i;else a:for(b=[];;)if(null!=a)b.push(a.ia(null)),a=a.ma(null);else break a;a=b.length;for(var c=Wc;;)if(0<a){var d=a-1;c=c.T(null,b[a-1]);a=d}else return c};N.H=0;N.I=function(a){return N.g(x(a))};
function Ee(a,b,c,d){this.u=a;this.first=b;this.Ib=c;this.j=d;this.h=65929452;this.C=8192}h=Ee.prototype;h.toString=function(){return Fc(this)};h.equiv=function(a){return this.D(null,a)};h.indexOf=function(){var a=null;a=function(a,c){switch(arguments.length){case 1:return pd(this,a,0);case 2:return pd(this,a,c)}throw Error("Invalid arity: "+(arguments.length-1));};a.a=function(a){return pd(this,a,0)};a.b=function(a,c){return pd(this,a,c)};return a}();
h.lastIndexOf=function(){function a(a){return rd(this,a,D(this))}var b=null;b=function(b,d){switch(arguments.length){case 1:return a.call(this,b);case 2:return rd(this,b,d)}throw Error("Invalid arity: "+(arguments.length-1));};b.a=a;b.b=function(a,b){return rd(this,a,b)};return b}();h.L=function(){return this.u};h.ma=function(){return null==this.Ib?null:x(this.Ib)};h.M=function(){var a=this.j;return null!=a?a:this.j=a=ad(this)};h.D=function(a,b){return ud(this,b)};h.fa=function(){return Wb(Wc,this.u)};
h.ja=function(a,b){return wd(b,this)};h.ka=function(a,b,c){return xd(b,c,this)};h.ia=function(){return this.first};h.pa=function(){return null==this.Ib?Wc:this.Ib};h.O=function(){return this};h.J=function(a,b){return new Ee(b,this.first,this.Ib,this.j)};h.T=function(a,b){return new Ee(null,b,this,null)};Ee.prototype[hb]=function(){return Yc(this)};function vd(a,b){return null==b||null!=b&&(b.h&64||l===b.G)?new Ee(null,a,b,null):new Ee(null,a,x(b),null)}
function Fe(a,b){if(a.$===b.$)return 0;var c=$a(a.Ja);if(n(c?b.Ja:c))return-1;if(n(a.Ja)){if($a(b.Ja))return 1;c=pa(a.Ja,b.Ja);return 0===c?pa(a.name,b.name):c}return pa(a.name,b.name)}function O(a,b,c,d){this.Ja=a;this.name=b;this.$=c;this.ic=d;this.h=2153775105;this.C=4096}h=O.prototype;h.toString=function(){return[":",r.a(this.$)].join("")};h.equiv=function(a){return this.D(null,a)};h.D=function(a,b){return b instanceof O?this.$===b.$:!1};
h.call=function(){var a=null;a=function(a,c,d){switch(arguments.length){case 2:return w.b(c,this);case 3:return w.c(c,this,d)}throw Error("Invalid arity: "+(arguments.length-1));};a.b=function(a,c){return w.b(c,this)};a.c=function(a,c,d){return w.c(c,this,d)};return a}();h.apply=function(a,b){return this.call.apply(this,[this].concat(kb(b)))};h.a=function(a){return w.b(a,this)};h.b=function(a,b){return w.c(a,this,b)};
h.M=function(){var a=this.ic;return null!=a?a:this.ic=a=Pc(Kc(this.name),Nc(this.Ja))+2654435769|0};h.Ac=function(){return this.name};h.Bc=function(){return this.Ja};h.N=function(a,b){return lc(b,[":",r.a(this.$)].join(""))};function Ge(a){return a instanceof O}function He(a,b){return a===b?!0:a instanceof O&&b instanceof O?a.$===b.$:!1}function Ie(a){if(null!=a&&(a.C&4096||l===a.$d))return a.Bc(null);throw Error(["Doesn't support namespace: ",r.a(a)].join(""));}
function Je(a){return a instanceof O||a instanceof u}var Ke=function Ke(a){switch(arguments.length){case 1:return Ke.a(arguments[0]);case 2:return Ke.b(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",r.a(arguments.length)].join(""));}};Ke.a=function(a){if(a instanceof O)return a;if(a instanceof u)return new O(Ie(a),Le(a),a.wb,null);if("string"===typeof a){var b=a.split("/");return 2===b.length?new O(b[0],b[1],a,null):new O(null,b[0],a,null)}return null};
Ke.b=function(a,b){var c=a instanceof O?Le(a):a instanceof u?Le(a):a,d=b instanceof O?Le(b):b instanceof u?Le(b):b;return new O(c,d,[r.a(n(c)?[r.a(c),"/"].join(""):null),r.a(d)].join(""),null)};Ke.H=2;function Me(a,b,c,d){this.u=a;this.dc=b;this.K=c;this.j=d;this.h=32374988;this.C=1}h=Me.prototype;h.toString=function(){return Fc(this)};h.equiv=function(a){return this.D(null,a)};function Ne(a){null!=a.dc&&(a.K=a.dc.w?a.dc.w():a.dc.call(null),a.dc=null);return a.K}
h.indexOf=function(){var a=null;a=function(a,c){switch(arguments.length){case 1:return pd(this,a,0);case 2:return pd(this,a,c)}throw Error("Invalid arity: "+(arguments.length-1));};a.a=function(a){return pd(this,a,0)};a.b=function(a,c){return pd(this,a,c)};return a}();
h.lastIndexOf=function(){function a(a){return rd(this,a,D(this))}var b=null;b=function(b,d){switch(arguments.length){case 1:return a.call(this,b);case 2:return rd(this,b,d)}throw Error("Invalid arity: "+(arguments.length-1));};b.a=a;b.b=function(a,b){return rd(this,a,b)};return b}();h.L=function(){return this.u};h.ma=function(){this.O(null);return null==this.K?null:B(this.K)};h.M=function(){var a=this.j;return null!=a?a:this.j=a=ad(this)};h.D=function(a,b){return ud(this,b)};
h.fa=function(){return Wb(Wc,this.u)};h.fd=function(){return $a(this.dc)};h.ja=function(a,b){return wd(b,this)};h.ka=function(a,b,c){return xd(b,c,this)};h.ia=function(){this.O(null);return null==this.K?null:y(this.K)};h.pa=function(){this.O(null);return null!=this.K?Vc(this.K):Wc};h.O=function(){Ne(this);if(null==this.K)return null;for(var a=this.K;;)if(a instanceof Me)a=Ne(a);else return this.K=a,x(this.K)};h.J=function(a,b){return new Me(b,this.dc,this.K,this.j)};
h.T=function(a,b){return vd(b,this)};Me.prototype[hb]=function(){return Yc(this)};function Oe(a,b){this.Xb=a;this.end=b;this.h=2;this.C=0}Oe.prototype.add=function(a){this.Xb[this.end]=a;return this.end+=1};Oe.prototype.Ga=function(){var a=new Pe(this.Xb,0,this.end);this.Xb=null;return a};Oe.prototype.S=function(){return this.end};function Qe(a){return new Oe(Array(a),0)}function Pe(a,b,c){this.i=a;this.Ea=b;this.end=c;this.h=524306;this.C=0}h=Pe.prototype;h.S=function(){return this.end-this.Ea};
h.W=function(a,b){return this.i[this.Ea+b]};h.ba=function(a,b,c){return 0<=b&&b<this.end-this.Ea?this.i[this.Ea+b]:c};h.sd=function(){if(this.Ea===this.end)throw Error("-drop-first of empty chunk");return new Pe(this.i,this.Ea+1,this.end)};h.ja=function(a,b){return md(this.i,b,this.i[this.Ea],this.Ea+1)};h.ka=function(a,b,c){return md(this.i,b,c,this.Ea)};function Re(a,b,c,d){this.Ga=a;this.ub=b;this.u=c;this.j=d;this.h=31850732;this.C=1536}h=Re.prototype;h.toString=function(){return Fc(this)};
h.equiv=function(a){return this.D(null,a)};h.indexOf=function(){var a=null;a=function(a,c){switch(arguments.length){case 1:return pd(this,a,0);case 2:return pd(this,a,c)}throw Error("Invalid arity: "+(arguments.length-1));};a.a=function(a){return pd(this,a,0)};a.b=function(a,c){return pd(this,a,c)};return a}();
h.lastIndexOf=function(){function a(a){return rd(this,a,D(this))}var b=null;b=function(b,d){switch(arguments.length){case 1:return a.call(this,b);case 2:return rd(this,b,d)}throw Error("Invalid arity: "+(arguments.length-1));};b.a=a;b.b=function(a,b){return rd(this,a,b)};return b}();h.L=function(){return this.u};h.ma=function(){if(1<rb(this.Ga))return new Re(uc(this.Ga),this.ub,this.u,null);var a=ec(this.ub);return null==a?null:a};h.M=function(){var a=this.j;return null!=a?a:this.j=a=ad(this)};
h.D=function(a,b){return ud(this,b)};h.fa=function(){return Wb(Wc,this.u)};h.ia=function(){return xb.b(this.Ga,0)};h.pa=function(){return 1<rb(this.Ga)?new Re(uc(this.Ga),this.ub,this.u,null):null==this.ub?Wc:this.ub};h.O=function(){return this};h.dd=function(){return this.Ga};h.Qc=function(){return null==this.ub?Wc:this.ub};h.J=function(a,b){return new Re(this.Ga,this.ub,b,this.j)};h.T=function(a,b){return vd(b,this)};h.td=function(){return null==this.ub?null:this.ub};Re.prototype[hb]=function(){return Yc(this)};
function Se(a,b){return 0===rb(a)?b:new Re(a,b,null,null)}function Te(a,b){a.add(b)}function ge(a){var b=[];for(a=x(a);;)if(null!=a)b.push(y(a)),a=B(a);else return b}function Ue(a,b){if(nd(b))return D(b);for(var c=0,d=x(b);;)if(null!=d&&c<a)c+=1,d=B(d);else return c}
var Ve=function Ve(a){if(null==a)return null;var c=B(a);return null==c?x(y(a)):vd(y(a),Ve.a?Ve.a(c):Ve.call(null,c))},We=function We(a){switch(arguments.length){case 0:return We.w();case 1:return We.a(arguments[0]);case 2:return We.b(arguments[0],arguments[1]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return We.g(arguments[0],arguments[1],new Uc(c.slice(2),0,null))}};We.w=function(){return new Me(null,function(){return null},null,null)};
We.a=function(a){return new Me(null,function(){return a},null,null)};We.b=function(a,b){return new Me(null,function(){var c=x(a);return c?Td(c)?Se(vc(c),We.b(wc(c),b)):vd(y(c),We.b(Vc(c),b)):b},null,null)};We.g=function(a,b,c){return function g(a,b){return new Me(null,function(){var c=x(a);return c?Td(c)?Se(vc(c),g(wc(c),b)):vd(y(c),g(Vc(c),b)):n(b)?g(y(b),B(b)):null},null,null)}(We.b(a,b),c)};We.I=function(a){var b=y(a),c=B(a);a=y(c);c=B(c);return We.g(b,a,c)};We.H=2;
var Xe=function Xe(a){switch(arguments.length){case 0:return Xe.w();case 1:return Xe.a(arguments[0]);case 2:return Xe.b(arguments[0],arguments[1]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return Xe.g(arguments[0],arguments[1],new Uc(c.slice(2),0,null))}};Xe.w=function(){return oc(H)};Xe.a=function(a){return a};Xe.b=function(a,b){return pc(a,b)};Xe.g=function(a,b,c){for(;;)if(a=pc(a,b),n(c))b=y(c),c=B(c);else return a};
Xe.I=function(a){var b=y(a),c=B(a);a=y(c);c=B(c);return Xe.g(b,a,c)};Xe.H=2;function Ye(a,b,c){return rc(a,b,c)}
function Ze(a,b,c){var d=x(c);if(0===b)return a.w?a.w():a.call(null);c=Ab(d);var e=Bb(d);if(1===b)return a.a?a.a(c):a.call(null,c);d=Ab(e);var f=Bb(e);if(2===b)return a.b?a.b(c,d):a.call(null,c,d);e=Ab(f);var g=Bb(f);if(3===b)return a.c?a.c(c,d,e):a.call(null,c,d,e);f=Ab(g);var k=Bb(g);if(4===b)return a.A?a.A(c,d,e,f):a.call(null,c,d,e,f);g=Ab(k);var p=Bb(k);if(5===b)return a.V?a.V(c,d,e,f,g):a.call(null,c,d,e,f,g);k=Ab(p);var q=Bb(p);if(6===b)return a.Z?a.Z(c,d,e,f,g,k):a.call(null,c,d,e,f,g,k);
p=Ab(q);var t=Bb(q);if(7===b)return a.Ca?a.Ca(c,d,e,f,g,k,p):a.call(null,c,d,e,f,g,k,p);q=Ab(t);var v=Bb(t);if(8===b)return a.la?a.la(c,d,e,f,g,k,p,q):a.call(null,c,d,e,f,g,k,p,q);t=Ab(v);var A=Bb(v);if(9===b)return a.Da?a.Da(c,d,e,f,g,k,p,q,t):a.call(null,c,d,e,f,g,k,p,q,t);v=Ab(A);var z=Bb(A);if(10===b)return a.ra?a.ra(c,d,e,f,g,k,p,q,t,v):a.call(null,c,d,e,f,g,k,p,q,t,v);A=Ab(z);var G=Bb(z);if(11===b)return a.sa?a.sa(c,d,e,f,g,k,p,q,t,v,A):a.call(null,c,d,e,f,g,k,p,q,t,v,A);z=Ab(G);var F=Bb(G);
if(12===b)return a.ta?a.ta(c,d,e,f,g,k,p,q,t,v,A,z):a.call(null,c,d,e,f,g,k,p,q,t,v,A,z);G=Ab(F);var I=Bb(F);if(13===b)return a.ua?a.ua(c,d,e,f,g,k,p,q,t,v,A,z,G):a.call(null,c,d,e,f,g,k,p,q,t,v,A,z,G);F=Ab(I);var M=Bb(I);if(14===b)return a.va?a.va(c,d,e,f,g,k,p,q,t,v,A,z,G,F):a.call(null,c,d,e,f,g,k,p,q,t,v,A,z,G,F);I=Ab(M);var Q=Bb(M);if(15===b)return a.wa?a.wa(c,d,e,f,g,k,p,q,t,v,A,z,G,F,I):a.call(null,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I);M=Ab(Q);var U=Bb(Q);if(16===b)return a.xa?a.xa(c,d,e,f,g,k,p,
q,t,v,A,z,G,F,I,M):a.call(null,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M);Q=Ab(U);var ea=Bb(U);if(17===b)return a.ya?a.ya(c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M,Q):a.call(null,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M,Q);U=Ab(ea);var T=Bb(ea);if(18===b)return a.za?a.za(c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M,Q,U):a.call(null,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M,Q,U);ea=Ab(T);T=Bb(T);if(19===b)return a.Aa?a.Aa(c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M,Q,U,ea):a.call(null,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M,Q,U,ea);var K=Ab(T);Bb(T);if(20===b)return a.Ba?
a.Ba(c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M,Q,U,ea,K):a.call(null,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M,Q,U,ea,K);throw Error("Only up to 20 arguments supported on functions");}function $e(a,b,c){return null==c?a.a?a.a(b):a.call(a,b):af(a,b,Ab(c),B(c))}function af(a,b,c,d){return null==d?a.b?a.b(b,c):a.call(a,b,c):bf(a,b,c,Ab(d),B(d))}function bf(a,b,c,d,e){return null==e?a.c?a.c(b,c,d):a.call(a,b,c,d):cf(a,b,c,d,Ab(e),B(e))}
function cf(a,b,c,d,e,f){if(null==f)return a.A?a.A(b,c,d,e):a.call(a,b,c,d,e);var g=Ab(f),k=B(f);if(null==k)return a.V?a.V(b,c,d,e,g):a.call(a,b,c,d,e,g);f=Ab(k);var p=B(k);if(null==p)return a.Z?a.Z(b,c,d,e,g,f):a.call(a,b,c,d,e,g,f);k=Ab(p);var q=B(p);if(null==q)return a.Ca?a.Ca(b,c,d,e,g,f,k):a.call(a,b,c,d,e,g,f,k);p=Ab(q);var t=B(q);if(null==t)return a.la?a.la(b,c,d,e,g,f,k,p):a.call(a,b,c,d,e,g,f,k,p);q=Ab(t);var v=B(t);if(null==v)return a.Da?a.Da(b,c,d,e,g,f,k,p,q):a.call(a,b,c,d,e,g,f,k,p,
q);t=Ab(v);var A=B(v);if(null==A)return a.ra?a.ra(b,c,d,e,g,f,k,p,q,t):a.call(a,b,c,d,e,g,f,k,p,q,t);v=Ab(A);var z=B(A);if(null==z)return a.sa?a.sa(b,c,d,e,g,f,k,p,q,t,v):a.call(a,b,c,d,e,g,f,k,p,q,t,v);A=Ab(z);var G=B(z);if(null==G)return a.ta?a.ta(b,c,d,e,g,f,k,p,q,t,v,A):a.call(a,b,c,d,e,g,f,k,p,q,t,v,A);z=Ab(G);var F=B(G);if(null==F)return a.ua?a.ua(b,c,d,e,g,f,k,p,q,t,v,A,z):a.call(a,b,c,d,e,g,f,k,p,q,t,v,A,z);G=Ab(F);var I=B(F);if(null==I)return a.va?a.va(b,c,d,e,g,f,k,p,q,t,v,A,z,G):a.call(a,
b,c,d,e,g,f,k,p,q,t,v,A,z,G);F=Ab(I);var M=B(I);if(null==M)return a.wa?a.wa(b,c,d,e,g,f,k,p,q,t,v,A,z,G,F):a.call(a,b,c,d,e,g,f,k,p,q,t,v,A,z,G,F);I=Ab(M);var Q=B(M);if(null==Q)return a.xa?a.xa(b,c,d,e,g,f,k,p,q,t,v,A,z,G,F,I):a.call(a,b,c,d,e,g,f,k,p,q,t,v,A,z,G,F,I);M=Ab(Q);var U=B(Q);if(null==U)return a.ya?a.ya(b,c,d,e,g,f,k,p,q,t,v,A,z,G,F,I,M):a.call(a,b,c,d,e,g,f,k,p,q,t,v,A,z,G,F,I,M);Q=Ab(U);var ea=B(U);if(null==ea)return a.za?a.za(b,c,d,e,g,f,k,p,q,t,v,A,z,G,F,I,M,Q):a.call(a,b,c,d,e,g,f,
k,p,q,t,v,A,z,G,F,I,M,Q);U=Ab(ea);var T=B(ea);if(null==T)return a.Aa?a.Aa(b,c,d,e,g,f,k,p,q,t,v,A,z,G,F,I,M,Q,U):a.call(a,b,c,d,e,g,f,k,p,q,t,v,A,z,G,F,I,M,Q,U);ea=Ab(T);T=B(T);if(null==T)return a.Ba?a.Ba(b,c,d,e,g,f,k,p,q,t,v,A,z,G,F,I,M,Q,U,ea):a.call(a,b,c,d,e,g,f,k,p,q,t,v,A,z,G,F,I,M,Q,U,ea);b=[b,c,d,e,g,f,k,p,q,t,v,A,z,G,F,I,M,Q,U,ea];for(c=T;;)if(c)b.push(Ab(c)),c=B(c);else break;return a.apply(a,b)}
function P(a,b){if(a.I){var c=a.H,d=Ue(c+1,b);return d<=c?Ze(a,d,b):a.I(b)}c=x(b);return null==c?a.w?a.w():a.call(a):$e(a,Ab(c),B(c))}function df(a,b,c){if(a.I){b=vd(b,c);var d=a.H;c=Ue(d,c)+1;return c<=d?Ze(a,c,b):a.I(b)}return $e(a,b,x(c))}function ef(a,b,c,d,e){return a.I?(b=vd(b,vd(c,vd(d,e))),c=a.H,e=3+Ue(c-2,e),e<=c?Ze(a,e,b):a.I(b)):bf(a,b,c,d,x(e))}function Id(a,b,c,d,e,f){return a.I?(f=Ve(f),b=vd(b,vd(c,vd(d,vd(e,f)))),c=a.H,f=4+Ue(c-3,f),f<=c?Ze(a,f,b):a.I(b)):cf(a,b,c,d,e,Ve(f))}
function ff(a,b){return!C.b(a,b)}function gf(a){return x(a)?a:null}
function hf(){"undefined"===typeof Ja&&(Ja=function(a){this.Be=a;this.h=393216;this.C=0},Ja.prototype.J=function(a,b){return new Ja(b)},Ja.prototype.L=function(){return this.Be},Ja.prototype.ha=function(){return!1},Ja.prototype.next=function(){return Error("No such element")},Ja.prototype.remove=function(){return Error("Unsupported operation")},Ja.Tb=function(){return new R(null,1,5,S,[Ia.pf],null)},Ja.tb=!0,Ja.fb="cljs.core/t_cljs$core11835",Ja.Bb=function(a,b){return lc(b,"cljs.core/t_cljs$core11835")});
return new Ja(jf)}var kf={},lf={};function mf(a,b){this.xc=a;this.Vb=b}mf.prototype.ha=function(){this.xc===kf?(this.xc=lf,this.Vb=x(this.Vb)):this.xc===this.Vb&&(this.Vb=B(this.xc));return null!=this.Vb};mf.prototype.next=function(){if(this.ha())return this.xc=this.Vb,y(this.Vb);throw Error("No such element");};mf.prototype.remove=function(){return Error("Unsupported operation")};function nf(a){return Wd(a)?a:(a=x(a))?a:Wc}
function of(a,b){for(;;){if(null==x(b))return!0;var c=y(b);c=a.a?a.a(c):a.call(null,c);if(n(c)){c=a;var d=B(b);a=c;b=d}else return!1}}function pf(a,b){for(;;)if(x(b)){var c=y(b);c=a.a?a.a(c):a.call(null,c);if(n(c))return c;c=a;var d=B(b);a=c;b=d}else return null}function qf(a){if(Yd(a))return 0===(a&1);throw Error(["Argument must be an integer: ",r.a(a)].join(""));}
function rf(a){return function(){function b(b,c){return $a(a.b?a.b(b,c):a.call(null,b,c))}function c(b){return $a(a.a?a.a(b):a.call(null,b))}function d(){return $a(a.w?a.w():a.call(null))}var e=null,f=function(){function b(a,b,d){var e=null;if(2<arguments.length){e=0;for(var f=Array(arguments.length-2);e<f.length;)f[e]=arguments[e+2],++e;e=new Uc(f,0,null)}return c.call(this,a,b,e)}function c(b,c,d){a.I?(b=vd(b,vd(c,d)),c=a.H,d=2+Ue(c-1,d),d=d<=c?Ze(a,d,b):a.I(b)):d=af(a,b,c,x(d));return $a(d)}b.H=
2;b.I=function(a){var b=y(a);a=B(a);var d=y(a);a=Vc(a);return c(b,d,a)};b.g=c;return b}();e=function(a,e,p){switch(arguments.length){case 0:return d.call(this);case 1:return c.call(this,a);case 2:return b.call(this,a,e);default:var g=null;if(2<arguments.length){g=0;for(var k=Array(arguments.length-2);g<k.length;)k[g]=arguments[g+2],++g;g=new Uc(k,0,null)}return f.g(a,e,g)}throw Error("Invalid arity: "+(arguments.length-1));};e.H=2;e.I=f.I;e.w=d;e.a=c;e.b=b;e.g=f.g;return e}()}
function sf(a){return function(){function b(b){if(0<arguments.length)for(var c=0,e=Array(arguments.length-0);c<e.length;)e[c]=arguments[c+0],++c;return a}b.H=0;b.I=function(b){x(b);return a};b.g=function(){return a};return b}()}
var tf=function tf(a){switch(arguments.length){case 0:return tf.w();case 1:return tf.a(arguments[0]);case 2:return tf.b(arguments[0],arguments[1]);case 3:return tf.c(arguments[0],arguments[1],arguments[2]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return tf.g(arguments[0],arguments[1],arguments[2],new Uc(c.slice(3),0,null))}};tf.w=function(){return me};tf.a=function(a){return a};
tf.b=function(a,b){return function(){function c(c,d,e){c=b.c?b.c(c,d,e):b.call(null,c,d,e);return a.a?a.a(c):a.call(null,c)}function d(c,d){var e=b.b?b.b(c,d):b.call(null,c,d);return a.a?a.a(e):a.call(null,e)}function e(c){c=b.a?b.a(c):b.call(null,c);return a.a?a.a(c):a.call(null,c)}function f(){var c=b.w?b.w():b.call(null);return a.a?a.a(c):a.call(null,c)}var g=null,k=function(){function c(a,b,c,e){var f=null;if(3<arguments.length){f=0;for(var g=Array(arguments.length-3);f<g.length;)g[f]=arguments[f+
3],++f;f=new Uc(g,0,null)}return d.call(this,a,b,c,f)}function d(c,d,e,f){c=ef(b,c,d,e,f);return a.a?a.a(c):a.call(null,c)}c.H=3;c.I=function(a){var b=y(a);a=B(a);var c=y(a);a=B(a);var e=y(a);a=Vc(a);return d(b,c,e,a)};c.g=d;return c}();g=function(a,b,g,v){switch(arguments.length){case 0:return f.call(this);case 1:return e.call(this,a);case 2:return d.call(this,a,b);case 3:return c.call(this,a,b,g);default:var p=null;if(3<arguments.length){p=0;for(var q=Array(arguments.length-3);p<q.length;)q[p]=
arguments[p+3],++p;p=new Uc(q,0,null)}return k.g(a,b,g,p)}throw Error("Invalid arity: "+(arguments.length-1));};g.H=3;g.I=k.I;g.w=f;g.a=e;g.b=d;g.c=c;g.g=k.g;return g}()};
tf.c=function(a,b,c){return function(){function d(d,e,f){d=c.c?c.c(d,e,f):c.call(null,d,e,f);d=b.a?b.a(d):b.call(null,d);return a.a?a.a(d):a.call(null,d)}function e(d,e){var f=c.b?c.b(d,e):c.call(null,d,e);f=b.a?b.a(f):b.call(null,f);return a.a?a.a(f):a.call(null,f)}function f(d){d=c.a?c.a(d):c.call(null,d);d=b.a?b.a(d):b.call(null,d);return a.a?a.a(d):a.call(null,d)}function g(){var d=c.w?c.w():c.call(null);d=b.a?b.a(d):b.call(null,d);return a.a?a.a(d):a.call(null,d)}var k=null,p=function(){function d(a,
b,c,d){var f=null;if(3<arguments.length){f=0;for(var g=Array(arguments.length-3);f<g.length;)g[f]=arguments[f+3],++f;f=new Uc(g,0,null)}return e.call(this,a,b,c,f)}function e(d,e,f,g){d=ef(c,d,e,f,g);d=b.a?b.a(d):b.call(null,d);return a.a?a.a(d):a.call(null,d)}d.H=3;d.I=function(a){var b=y(a);a=B(a);var c=y(a);a=B(a);var d=y(a);a=Vc(a);return e(b,c,d,a)};d.g=e;return d}();k=function(a,b,c,k){switch(arguments.length){case 0:return g.call(this);case 1:return f.call(this,a);case 2:return e.call(this,
a,b);case 3:return d.call(this,a,b,c);default:var q=null;if(3<arguments.length){q=0;for(var t=Array(arguments.length-3);q<t.length;)t[q]=arguments[q+3],++q;q=new Uc(t,0,null)}return p.g(a,b,c,q)}throw Error("Invalid arity: "+(arguments.length-1));};k.H=3;k.I=p.I;k.w=g;k.a=f;k.b=e;k.c=d;k.g=p.g;return k}()};
tf.g=function(a,b,c,d){return function(a){return function(){function b(a){var b=null;if(0<arguments.length){b=0;for(var d=Array(arguments.length-0);b<d.length;)d[b]=arguments[b+0],++b;b=new Uc(d,0,null)}return c.call(this,b)}function c(b){b=P(y(a),b);for(var c=B(a);;)if(c){var d=y(c);b=d.a?d.a(b):d.call(null,b);c=B(c)}else return b}b.H=0;b.I=function(a){a=x(a);return c(a)};b.g=c;return b}()}(De(vd(a,vd(b,vd(c,d)))))};
tf.I=function(a){var b=y(a),c=B(a);a=y(c);var d=B(c);c=y(d);d=B(d);return tf.g(b,a,c,d)};tf.H=3;
function uf(a,b){return function(){function c(c,d,e){return a.A?a.A(b,c,d,e):a.call(null,b,c,d,e)}function d(c,d){return a.c?a.c(b,c,d):a.call(null,b,c,d)}function e(c){return a.b?a.b(b,c):a.call(null,b,c)}function f(){return a.a?a.a(b):a.call(null,b)}var g=null,k=function(){function c(a,b,c,e){var f=null;if(3<arguments.length){f=0;for(var g=Array(arguments.length-3);f<g.length;)g[f]=arguments[f+3],++f;f=new Uc(g,0,null)}return d.call(this,a,b,c,f)}function d(c,d,e,f){return Id(a,b,c,d,e,E([f]))}
c.H=3;c.I=function(a){var b=y(a);a=B(a);var c=y(a);a=B(a);var e=y(a);a=Vc(a);return d(b,c,e,a)};c.g=d;return c}();g=function(a,b,g,v){switch(arguments.length){case 0:return f.call(this);case 1:return e.call(this,a);case 2:return d.call(this,a,b);case 3:return c.call(this,a,b,g);default:var p=null;if(3<arguments.length){p=0;for(var q=Array(arguments.length-3);p<q.length;)q[p]=arguments[p+3],++p;p=new Uc(q,0,null)}return k.g(a,b,g,p)}throw Error("Invalid arity: "+(arguments.length-1));};g.H=3;g.I=k.I;
g.w=f;g.a=e;g.b=d;g.c=c;g.g=k.g;return g}()}
function vf(a,b,c){return function(){function d(d,e,f){return a.V?a.V(b,c,d,e,f):a.call(null,b,c,d,e,f)}function e(d,e){return a.A?a.A(b,c,d,e):a.call(null,b,c,d,e)}function f(d){return a.c?a.c(b,c,d):a.call(null,b,c,d)}function g(){return a.b?a.b(b,c):a.call(null,b,c)}var k=null,p=function(){function d(a,b,c,d){var f=null;if(3<arguments.length){f=0;for(var g=Array(arguments.length-3);f<g.length;)g[f]=arguments[f+3],++f;f=new Uc(g,0,null)}return e.call(this,a,b,c,f)}function e(d,e,f,g){return Id(a,
b,c,d,e,E([f,g]))}d.H=3;d.I=function(a){var b=y(a);a=B(a);var c=y(a);a=B(a);var d=y(a);a=Vc(a);return e(b,c,d,a)};d.g=e;return d}();k=function(a,b,c,k){switch(arguments.length){case 0:return g.call(this);case 1:return f.call(this,a);case 2:return e.call(this,a,b);case 3:return d.call(this,a,b,c);default:var q=null;if(3<arguments.length){q=0;for(var t=Array(arguments.length-3);q<t.length;)t[q]=arguments[q+3],++q;q=new Uc(t,0,null)}return p.g(a,b,c,q)}throw Error("Invalid arity: "+(arguments.length-
1));};k.H=3;k.I=p.I;k.w=g;k.a=f;k.b=e;k.c=d;k.g=p.g;return k}()}
function wf(a,b,c,d){return function(){function e(e,f,g){return a.Z?a.Z(b,c,d,e,f,g):a.call(null,b,c,d,e,f,g)}function f(e,f){return a.V?a.V(b,c,d,e,f):a.call(null,b,c,d,e,f)}function g(e){return a.A?a.A(b,c,d,e):a.call(null,b,c,d,e)}function k(){return a.c?a.c(b,c,d):a.call(null,b,c,d)}var p=null,q=function(){function e(a,b,c,d){var e=null;if(3<arguments.length){e=0;for(var g=Array(arguments.length-3);e<g.length;)g[e]=arguments[e+3],++e;e=new Uc(g,0,null)}return f.call(this,a,b,c,e)}function f(e,
f,g,k){return Id(a,b,c,d,e,E([f,g,k]))}e.H=3;e.I=function(a){var b=y(a);a=B(a);var c=y(a);a=B(a);var d=y(a);a=Vc(a);return f(b,c,d,a)};e.g=f;return e}();p=function(a,b,c,d){switch(arguments.length){case 0:return k.call(this);case 1:return g.call(this,a);case 2:return f.call(this,a,b);case 3:return e.call(this,a,b,c);default:var p=null;if(3<arguments.length){p=0;for(var t=Array(arguments.length-3);p<t.length;)t[p]=arguments[p+3],++p;p=new Uc(t,0,null)}return q.g(a,b,c,p)}throw Error("Invalid arity: "+
(arguments.length-1));};p.H=3;p.I=q.I;p.w=k;p.a=g;p.b=f;p.c=e;p.g=q.g;return p}()}function xf(a,b,c,d){var e=yf;return function(){function f(a){var b=null;if(0<arguments.length){b=0;for(var c=Array(arguments.length-0);b<c.length;)c[b]=arguments[b+0],++b;b=new Uc(c,0,null)}return g.call(this,b)}function g(f){return ef(e,a,b,c,We.b(d,f))}f.H=0;f.I=function(a){a=x(a);return g(a)};f.g=g;return f}()}
function zf(a,b){return function f(b,e){return new Me(null,function(){var d=x(e);if(d){if(Td(d)){for(var k=vc(d),p=D(k),q=Qe(p),t=0;;)if(t<p)Te(q,function(){var d=b+t,e=xb.b(k,t);return a.b?a.b(d,e):a.call(null,d,e)}()),t+=1;else break;return Se(q.Ga(),f(b+p,wc(d)))}return vd(function(){var e=y(d);return a.b?a.b(b,e):a.call(null,b,e)}(),f(b+1,Vc(d)))}return null},null,null)}(0,b)}
function Af(a,b){return new Me(null,function(){var c=x(b);if(c){if(Td(c)){for(var d=vc(c),e=D(d),f=Qe(e),g=0;;)if(g<e){var k=function(){var b=xb.b(d,g);return a.a?a.a(b):a.call(null,b)}();null!=k&&f.add(k);g+=1}else break;return Se(f.Ga(),Af(a,wc(c)))}e=function(){var b=y(c);return a.a?a.a(b):a.call(null,b)}();return null==e?Af(a,Vc(c)):vd(e,Af(a,Vc(c)))}return null},null,null)}function Bf(a,b,c,d){this.state=a;this.u=b;this.$e=c;this.Sd=d;this.C=16386;this.h=6455296}h=Bf.prototype;
h.equiv=function(a){return this.D(null,a)};h.D=function(a,b){return this===b};h.yc=function(){return this.state};h.L=function(){return this.u};h.zd=function(a,b,c){a=x(this.Sd);for(var d=null,e=0,f=0;;)if(f<e){var g=d.W(null,f),k=J(g,0,null);g=J(g,1,null);g.A?g.A(k,this,b,c):g.call(null,k,this,b,c);f+=1}else if(a=x(a))Td(a)?(d=vc(a),a=wc(a),k=d,e=D(d),d=k):(d=y(a),k=J(d,0,null),g=J(d,1,null),g.A?g.A(k,this,b,c):g.call(null,k,this,b,c),a=B(a),d=null,e=0),f=0;else return null};
h.M=function(){return this[da]||(this[da]=++ha)};function Cf(a){return new Bf(a,null,null,null)}function Df(a,b){if(a instanceof Bf){var c=a.$e;if(null!=c&&!n(c.a?c.a(b):c.call(null,b)))throw Error("Validator rejected reference state");c=a.state;a.state=b;null!=a.Sd&&nc(a,c,b);return b}return zc(a,b)}
var Ef=function Ef(a){switch(arguments.length){case 2:return Ef.b(arguments[0],arguments[1]);case 3:return Ef.c(arguments[0],arguments[1],arguments[2]);case 4:return Ef.A(arguments[0],arguments[1],arguments[2],arguments[3]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return Ef.g(arguments[0],arguments[1],arguments[2],arguments[3],new Uc(c.slice(4),0,null))}};
Ef.b=function(a,b){if(a instanceof Bf){var c=a.state;c=b.a?b.a(c):b.call(null,c);c=Df(a,c)}else c=Ac.b(a,b);return c};Ef.c=function(a,b,c){if(a instanceof Bf){var d=a.state;b=b.b?b.b(d,c):b.call(null,d,c);a=Df(a,b)}else a=Ac.c(a,b,c);return a};Ef.A=function(a,b,c,d){if(a instanceof Bf){var e=a.state;b=b.c?b.c(e,c,d):b.call(null,e,c,d);a=Df(a,b)}else a=Ac.A(a,b,c,d);return a};Ef.g=function(a,b,c,d,e){return a instanceof Bf?Df(a,ef(b,a.state,c,d,e)):Ac.V(a,b,c,d,e)};
Ef.I=function(a){var b=y(a),c=B(a);a=y(c);var d=B(c);c=y(d);var e=B(d);d=y(e);e=B(e);return Ef.g(b,a,c,d,e)};Ef.H=4;function Ff(a){this.state=a;this.h=32768;this.C=0}Ff.prototype.yd=function(a,b){return this.state=b};Ff.prototype.yc=function(){return this.state};
var Gf=function Gf(a){switch(arguments.length){case 1:return Gf.a(arguments[0]);case 2:return Gf.b(arguments[0],arguments[1]);case 3:return Gf.c(arguments[0],arguments[1],arguments[2]);case 4:return Gf.A(arguments[0],arguments[1],arguments[2],arguments[3]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return Gf.g(arguments[0],arguments[1],arguments[2],arguments[3],new Uc(c.slice(4),0,null))}};
Gf.a=function(a){return function(b){return function(){function c(c,d){var e=a.a?a.a(d):a.call(null,d);return b.b?b.b(c,e):b.call(null,c,e)}function d(a){return b.a?b.a(a):b.call(null,a)}function e(){return b.w?b.w():b.call(null)}var f=null,g=function(){function c(a,b,c){var e=null;if(2<arguments.length){e=0;for(var f=Array(arguments.length-2);e<f.length;)f[e]=arguments[e+2],++e;e=new Uc(f,0,null)}return d.call(this,a,b,e)}function d(c,d,e){d=df(a,d,e);return b.b?b.b(c,d):b.call(null,c,d)}c.H=2;c.I=
function(a){var b=y(a);a=B(a);var c=y(a);a=Vc(a);return d(b,c,a)};c.g=d;return c}();f=function(a,b,f){switch(arguments.length){case 0:return e.call(this);case 1:return d.call(this,a);case 2:return c.call(this,a,b);default:var k=null;if(2<arguments.length){k=0;for(var p=Array(arguments.length-2);k<p.length;)p[k]=arguments[k+2],++k;k=new Uc(p,0,null)}return g.g(a,b,k)}throw Error("Invalid arity: "+(arguments.length-1));};f.H=2;f.I=g.I;f.w=e;f.a=d;f.b=c;f.g=g.g;return f}()}};
Gf.b=function(a,b){return new Me(null,function(){var c=x(b);if(c){if(Td(c)){for(var d=vc(c),e=D(d),f=Qe(e),g=0;;)if(g<e)Te(f,function(){var b=xb.b(d,g);return a.a?a.a(b):a.call(null,b)}()),g+=1;else break;return Se(f.Ga(),Gf.b(a,wc(c)))}return vd(function(){var b=y(c);return a.a?a.a(b):a.call(null,b)}(),Gf.b(a,Vc(c)))}return null},null,null)};
Gf.c=function(a,b,c){return new Me(null,function(){var d=x(b),e=x(c);if(d&&e){var f=vd;var g=y(d);var k=y(e);g=a.b?a.b(g,k):a.call(null,g,k);d=f(g,Gf.c(a,Vc(d),Vc(e)))}else d=null;return d},null,null)};Gf.A=function(a,b,c,d){return new Me(null,function(){var e=x(b),f=x(c),g=x(d);if(e&&f&&g){var k=vd;var p=y(e);var q=y(f),t=y(g);p=a.c?a.c(p,q,t):a.call(null,p,q,t);e=k(p,Gf.A(a,Vc(e),Vc(f),Vc(g)))}else e=null;return e},null,null)};
Gf.g=function(a,b,c,d,e){var f=function p(a){return new Me(null,function(){var b=Gf.b(x,a);return of(me,b)?vd(Gf.b(y,b),p(Gf.b(Vc,b))):null},null,null)};return Gf.b(function(){return function(b){return P(a,b)}}(f),f(Ad.g(e,d,E([c,b]))))};Gf.I=function(a){var b=y(a),c=B(a);a=y(c);var d=B(c);c=y(d);var e=B(d);d=y(e);e=B(e);return Gf.g(b,a,c,d,e)};Gf.H=4;
var Hf=function Hf(a){switch(arguments.length){case 1:return Hf.a(arguments[0]);case 2:return Hf.b(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",r.a(arguments.length)].join(""));}};
Hf.a=function(a){if("number"!==typeof a)throw Error("Assert failed: (number? n)");return function(b){return function(a){return function(){function c(c,d){var e=Tb(a),f=Bc(a,Tb(a)-1);e=0<e?b.b?b.b(c,d):b.call(null,c,d):c;return 0<f?e:gd(e)?e:new fd(e)}function e(a){return b.a?b.a(a):b.call(null,a)}function f(){return b.w?b.w():b.call(null)}var g=null;g=function(a,b){switch(arguments.length){case 0:return f.call(this);case 1:return e.call(this,a);case 2:return c.call(this,a,b)}throw Error("Invalid arity: "+
(arguments.length-1));};g.w=f;g.a=e;g.b=c;return g}()}(new Ff(a))}};Hf.b=function(a,b){if("number"!==typeof a)throw Error("Assert failed: (number? n)");return new Me(null,function(){if(0<a){var c=x(b);return c?vd(y(c),Hf.b(a-1,Vc(c))):null}return null},null,null)};Hf.H=2;
function If(a,b){if("number"!==typeof a)throw Error("Assert failed: (number? n)");return new Me(null,function(c){return function(){return c(a,b)}}(function(a,b){for(;;){var c=x(b);if(0<a&&c){var d=a-1;c=Vc(c);a=d;b=c}else return c}}),null,null)}function Jf(a,b){return new Me(null,function(c){return function(){return c(a,b)}}(function(a,b){for(;;){var c=x(b),d;if(d=c)d=y(c),d=a.a?a.a(d):a.call(null,d);if(n(d))d=a,c=Vc(c),a=d,b=c;else return c}}),null,null)}
function Kf(a){return new Me(null,function(){return vd(a,Kf(a))},null,null)}function Lf(a,b){return Hf.b(a,Kf(b))}function Mf(a){return new Me(null,function(){return vd(a.w?a.w():a.call(null),Mf(a))},null,null)}
var Nf=function Nf(a,b){return vd(b,new Me(null,function(){var d=a.a?a.a(b):a.call(null,b);return Nf.b?Nf.b(a,d):Nf.call(null,a,d)},null,null))},Of=function Of(a){switch(arguments.length){case 0:return Of.w();case 1:return Of.a(arguments[0]);case 2:return Of.b(arguments[0],arguments[1]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return Of.g(arguments[0],arguments[1],new Uc(c.slice(2),0,null))}};Of.w=function(){return Wc};
Of.a=function(a){return new Me(null,function(){return a},null,null)};Of.b=function(a,b){return new Me(null,function(){var c=x(a),d=x(b);return c&&d?vd(y(c),vd(y(d),Of.b(Vc(c),Vc(d)))):null},null,null)};Of.g=function(a,b,c){return new Me(null,function(){var d=Gf.b(x,Ad.g(c,b,E([a])));return of(me,d)?We.b(Gf.b(y,d),P(Of,Gf.b(Vc,d))):null},null,null)};Of.I=function(a){var b=y(a),c=B(a);a=y(c);c=B(c);return Of.g(b,a,c)};Of.H=2;function Pf(a,b){return If(1,Of.b(Kf(a),b))}
function Qf(a,b){return P(We,df(Gf,a,b))}function Rf(a,b){return new Me(null,function(){var c=x(b);if(c){if(Td(c)){for(var d=vc(c),e=D(d),f=Qe(e),g=0;;)if(g<e){var k=xb.b(d,g);k=a.a?a.a(k):a.call(null,k);n(k)&&(k=xb.b(d,g),f.add(k));g+=1}else break;return Se(f.Ga(),Rf(a,wc(c)))}d=y(c);c=Vc(c);return n(a.a?a.a(d):a.call(null,d))?vd(d,Rf(a,c)):Rf(a,c)}return null},null,null)}function Sf(a,b){return Rf(rf(a),b)}
var Tf=function Tf(a){switch(arguments.length){case 0:return Tf.w();case 1:return Tf.a(arguments[0]);case 2:return Tf.b(arguments[0],arguments[1]);case 3:return Tf.c(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",r.a(arguments.length)].join(""));}};Tf.w=function(){return H};Tf.a=function(a){return a};Tf.b=function(a,b){return null!=a?null!=a&&(a.C&4||l===a.Wd)?Wb(qc(mb(pc,oc(a),b)),Kd(a)):mb(vb,a,b):mb(Ad,Wc,b)};
Tf.c=function(a,b,c){return null!=a&&(a.C&4||l===a.Wd)?Wb(qc(ne(b,Xe,oc(a),c)),Kd(a)):ne(b,Ad,a,c)};Tf.H=3;function Uf(a,b){return qc(mb(function(b,d){return Xe.b(b,a.a?a.a(d):a.call(null,d))},oc(H),b))}function Wf(a,b,c){var d=Vd;for(b=x(b);;)if(null!=b){a=w.c(a,y(b),d);if(d===a)return c;b=B(b)}else return a}
var Xf=function Xf(a,b,c){b=x(b);var e=y(b),f=B(b);return f?Dd.c(a,e,function(){var b=w.b(a,e);return Xf.c?Xf.c(b,f,c):Xf.call(null,b,f,c)}()):Dd.c(a,e,c)},Zf=function Zf(a){switch(arguments.length){case 3:return Zf.c(arguments[0],arguments[1],arguments[2]);case 4:return Zf.A(arguments[0],arguments[1],arguments[2],arguments[3]);case 5:return Zf.V(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4]);case 6:return Zf.Z(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5]);
default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return Zf.g(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],new Uc(c.slice(6),0,null))}};Zf.c=function(a,b,c){b=x(b);var d=y(b);return(b=B(b))?Dd.c(a,d,Zf.c(w.b(a,d),b,c)):Dd.c(a,d,function(){var b=w.b(a,d);return c.a?c.a(b):c.call(null,b)}())};
Zf.A=function(a,b,c,d){b=x(b);var e=y(b);return(b=B(b))?Dd.c(a,e,Zf.A(w.b(a,e),b,c,d)):Dd.c(a,e,function(){var b=w.b(a,e);return c.b?c.b(b,d):c.call(null,b,d)}())};Zf.V=function(a,b,c,d,e){b=x(b);var f=y(b);return(b=B(b))?Dd.c(a,f,Zf.V(w.b(a,f),b,c,d,e)):Dd.c(a,f,function(){var b=w.b(a,f);return c.c?c.c(b,d,e):c.call(null,b,d,e)}())};
Zf.Z=function(a,b,c,d,e,f){b=x(b);var g=y(b);return(b=B(b))?Dd.c(a,g,Zf.Z(w.b(a,g),b,c,d,e,f)):Dd.c(a,g,function(){var b=w.b(a,g);return c.A?c.A(b,d,e,f):c.call(null,b,d,e,f)}())};Zf.g=function(a,b,c,d,e,f,g){var k=x(b);b=y(k);return(k=B(k))?Dd.c(a,b,Id(Zf,w.b(a,b),k,c,d,E([e,f,g]))):Dd.c(a,b,Id(c,w.b(a,b),d,e,f,E([g])))};Zf.I=function(a){var b=y(a),c=B(a);a=y(c);var d=B(c);c=y(d);var e=B(d);d=y(e);var f=B(e);e=y(f);var g=B(f);f=y(g);g=B(g);return Zf.g(b,a,c,d,e,f,g)};Zf.H=6;
function $f(a,b){this.ea=a;this.i=b}function ag(a){return new $f(a,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null])}function bg(a){return new $f(a.ea,kb(a.i))}function cg(a){a=a.o;return 32>a?0:a-1>>>5<<5}function dg(a,b,c){for(;;){if(0===b)return c;var d=ag(a);d.i[0]=c;c=d;b-=5}}
var eg=function eg(a,b,c,d){var f=bg(c),g=a.o-1>>>b&31;5===b?f.i[g]=d:(c=c.i[g],null!=c?(b-=5,a=eg.A?eg.A(a,b,c,d):eg.call(null,a,b,c,d)):a=dg(null,b-5,d),f.i[g]=a);return f};function fg(a,b){throw Error(["No item ",r.a(a)," in vector of length ",r.a(b)].join(""));}function gg(a,b){if(b>=cg(a))return a.La;for(var c=a.root,d=a.shift;;)if(0<d){var e=d-5;c=c.i[b>>>d&31];d=e}else return c.i}
var hg=function hg(a,b,c,d,e){var g=bg(c);if(0===b)g.i[d&31]=e;else{var k=d>>>b&31;b-=5;c=c.i[k];a=hg.V?hg.V(a,b,c,d,e):hg.call(null,a,b,c,d,e);g.i[k]=a}return g},ig=function ig(a,b,c){var e=a.o-2>>>b&31;if(5<b){b-=5;var f=c.i[e];a=ig.c?ig.c(a,b,f):ig.call(null,a,b,f);if(null==a&&0===e)return null;c=bg(c);c.i[e]=a;return c}if(0===e)return null;c=bg(c);c.i[e]=null;return c};function jg(a,b,c,d,e,f){this.v=a;this.ad=b;this.i=c;this.na=d;this.start=e;this.end=f}
jg.prototype.ha=function(){return this.v<this.end};jg.prototype.next=function(){32===this.v-this.ad&&(this.i=gg(this.na,this.v),this.ad+=32);var a=this.i[this.v&31];this.v+=1;return a};function kg(a,b,c){return new jg(b,b-b%32,b<D(a)?gg(a,b):null,a,b,c)}function lg(a,b,c,d){return c<d?mg(a,b,qd(a,c),c+1,d):b.w?b.w():b.call(null)}function mg(a,b,c,d,e){var f=c;c=d;for(d=gg(a,d);;)if(c<e){var g=c&31;d=0===g?gg(a,c):d;g=d[g];f=b.b?b.b(f,g):b.call(null,f,g);if(gd(f))return Tb(f);c+=1}else return f}
function R(a,b,c,d,e,f){this.u=a;this.o=b;this.shift=c;this.root=d;this.La=e;this.j=f;this.h=167668511;this.C=139268}h=R.prototype;h.toString=function(){return Fc(this)};h.equiv=function(a){return this.D(null,a)};h.indexOf=function(){var a=null;a=function(a,c){switch(arguments.length){case 1:return pd(this,a,0);case 2:return pd(this,a,c)}throw Error("Invalid arity: "+(arguments.length-1));};a.a=function(a){return pd(this,a,0)};a.b=function(a,c){return pd(this,a,c)};return a}();
h.lastIndexOf=function(){function a(a){return rd(this,a,D(this))}var b=null;b=function(b,d){switch(arguments.length){case 1:return a.call(this,b);case 2:return rd(this,b,d)}throw Error("Invalid arity: "+(arguments.length-1));};b.a=a;b.b=function(a,b){return rd(this,a,b)};return b}();h.R=function(a,b){return this.F(null,b,null)};h.F=function(a,b,c){return"number"===typeof b?this.ba(null,b,c):c};
h.kc=function(a,b,c){a=0;for(var d=c;;)if(a<this.o){var e=gg(this,a);c=e.length;a:for(var f=0;;)if(f<c){var g=f+a,k=e[f];d=b.c?b.c(d,g,k):b.call(null,d,g,k);if(gd(d)){e=d;break a}f+=1}else{e=d;break a}if(gd(e))return Tb(e);a+=c;d=e}else return d};h.cd=l;h.W=function(a,b){return(0<=b&&b<this.o?gg(this,b):fg(b,this.o))[b&31]};h.ba=function(a,b,c){return 0<=b&&b<this.o?gg(this,b)[b&31]:c};
h.Ab=function(a,b,c){if(0<=b&&b<this.o)return cg(this)<=b?(a=kb(this.La),a[b&31]=c,new R(this.u,this.o,this.shift,this.root,a,null)):new R(this.u,this.o,this.shift,hg(this,this.shift,this.root,b,c),this.La,null);if(b===this.o)return this.T(null,c);throw Error(["Index ",r.a(b)," out of bounds  [0,",r.a(this.o),"]"].join(""));};h.ca=function(){return kg(this,0,this.o)};h.L=function(){return this.u};h.S=function(){return this.o};h.lc=function(){return this.W(null,0)};
h.mc=function(){return this.W(null,1)};h.Pb=function(){return 0<this.o?this.W(null,this.o-1):null};h.Qb=function(){if(0===this.o)throw Error("Can't pop empty vector");if(1===this.o)return Wb(H,this.u);if(1<this.o-cg(this))return new R(this.u,this.o-1,this.shift,this.root,this.La.slice(0,-1),null);var a=gg(this,this.o-2),b=ig(this,this.shift,this.root);b=null==b?S:b;var c=this.o-1;return 5<this.shift&&null==b.i[1]?new R(this.u,c,this.shift-5,b.i[0],a,null):new R(this.u,c,this.shift,b,a,null)};
h.Cc=function(){return 0<this.o?new td(this,this.o-1,null):null};h.M=function(){var a=this.j;return null!=a?a:this.j=a=ad(this)};h.D=function(a,b){if(b instanceof R)if(this.o===D(b))for(var c=this.ca(null),d=Dc(b);;)if(c.ha()){var e=c.next(),f=d.next();if(!C.b(e,f))return!1}else return!0;else return!1;else return ud(this,b)};
h.jc=function(){var a=this.o,b=this.shift,c=new $f({},kb(this.root.i)),d=this.La,e=[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];Ud(d,0,e,0,d.length);return new ng(a,b,c,e)};h.fa=function(){return Wb(H,this.u)};h.ja=function(a,b){return lg(this,b,0,this.o)};
h.ka=function(a,b,c){a=0;for(var d=c;;)if(a<this.o){var e=gg(this,a);c=e.length;a:for(var f=0;;)if(f<c){var g=e[f];d=b.b?b.b(d,g):b.call(null,d,g);if(gd(d)){e=d;break a}f+=1}else{e=d;break a}if(gd(e))return Tb(e);a+=c;d=e}else return d};h.P=function(a,b,c){if("number"===typeof b)return this.Ab(null,b,c);throw Error("Vector's key for assoc must be a number.");};h.Yb=function(a,b){return Yd(b)?0<=b&&b<this.o:!1};
h.O=function(){if(0===this.o)var a=null;else if(32>=this.o)a=new Uc(this.La,0,null);else{a:{a=this.root;for(var b=this.shift;;)if(0<b)b-=5,a=a.i[0];else{a=a.i;break a}}a=new og(this,a,0,0,null,null)}return a};h.J=function(a,b){return new R(b,this.o,this.shift,this.root,this.La,this.j)};
h.T=function(a,b){if(32>this.o-cg(this)){for(var c=this.La.length,d=Array(c+1),e=0;;)if(e<c)d[e]=this.La[e],e+=1;else break;d[c]=b;return new R(this.u,this.o+1,this.shift,this.root,d,null)}c=(d=this.o>>>5>1<<this.shift)?this.shift+5:this.shift;d?(d=ag(null),d.i[0]=this.root,e=dg(null,this.shift,new $f(null,this.La)),d.i[1]=e):d=eg(this,this.shift,this.root,new $f(null,this.La));return new R(this.u,this.o+1,c,d,[b],null)};
h.call=function(){var a=null;a=function(a,c,d){switch(arguments.length){case 2:return this.W(null,c);case 3:return this.ba(null,c,d)}throw Error("Invalid arity: "+(arguments.length-1));};a.b=function(a,c){return this.W(null,c)};a.c=function(a,c,d){return this.ba(null,c,d)};return a}();h.apply=function(a,b){return this.call.apply(this,[this].concat(kb(b)))};h.a=function(a){return this.W(null,a)};h.b=function(a,b){return this.ba(null,a,b)};
var S=new $f(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]),H=new R(null,0,5,S,[],bd);function pg(a){var b=a.length;if(32>b)return new R(null,b,5,S,a,null);for(var c=32,d=(new R(null,32,5,S,a.slice(0,32),null)).jc(null);;)if(c<b){var e=c+1;d=Xe.b(d,a[c]);c=e}else return qc(d)}R.prototype[hb]=function(){return Yc(this)};function qg(a){return Ya(a)?pg(a):qc(mb(pc,oc(H),a))}
var rg=function rg(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return rg.g(0<c.length?new Uc(c.slice(0),0,null):null)};rg.g=function(a){return a instanceof Uc&&0===a.v?pg(a.i):qg(a)};rg.H=0;rg.I=function(a){return rg.g(x(a))};function og(a,b,c,d,e,f){this.cb=a;this.node=b;this.v=c;this.Ea=d;this.u=e;this.j=f;this.h=32375020;this.C=1536}h=og.prototype;h.toString=function(){return Fc(this)};h.equiv=function(a){return this.D(null,a)};
h.indexOf=function(){var a=null;a=function(a,c){switch(arguments.length){case 1:return pd(this,a,0);case 2:return pd(this,a,c)}throw Error("Invalid arity: "+(arguments.length-1));};a.a=function(a){return pd(this,a,0)};a.b=function(a,c){return pd(this,a,c)};return a}();
h.lastIndexOf=function(){function a(a){return rd(this,a,D(this))}var b=null;b=function(b,d){switch(arguments.length){case 1:return a.call(this,b);case 2:return rd(this,b,d)}throw Error("Invalid arity: "+(arguments.length-1));};b.a=a;b.b=function(a,b){return rd(this,a,b)};return b}();h.L=function(){return this.u};h.ma=function(){if(this.Ea+1<this.node.length){var a=new og(this.cb,this.node,this.v,this.Ea+1,null,null);return null==a?null:a}return this.td(null)};
h.M=function(){var a=this.j;return null!=a?a:this.j=a=ad(this)};h.D=function(a,b){return ud(this,b)};h.fa=function(){return Wb(H,this.u)};h.ja=function(a,b){return lg(this.cb,b,this.v+this.Ea,D(this.cb))};h.ka=function(a,b,c){return mg(this.cb,b,c,this.v+this.Ea,D(this.cb))};h.ia=function(){return this.node[this.Ea]};h.pa=function(){if(this.Ea+1<this.node.length){var a=new og(this.cb,this.node,this.v,this.Ea+1,null,null);return null==a?Wc:a}return this.Qc(null)};h.O=function(){return this};
h.dd=function(){var a=this.node;return new Pe(a,this.Ea,a.length)};h.Qc=function(){var a=this.v+this.node.length;return a<rb(this.cb)?new og(this.cb,gg(this.cb,a),a,0,null,null):Wc};h.J=function(a,b){return new og(this.cb,this.node,this.v,this.Ea,b,null)};h.T=function(a,b){return vd(b,this)};h.td=function(){var a=this.v+this.node.length;return a<rb(this.cb)?new og(this.cb,gg(this.cb,a),a,0,null,null):null};og.prototype[hb]=function(){return Yc(this)};
function sg(a,b,c,d,e){this.u=a;this.na=b;this.start=c;this.end=d;this.j=e;this.h=167666463;this.C=139264}h=sg.prototype;h.toString=function(){return Fc(this)};h.equiv=function(a){return this.D(null,a)};h.indexOf=function(){var a=null;a=function(a,c){switch(arguments.length){case 1:return pd(this,a,0);case 2:return pd(this,a,c)}throw Error("Invalid arity: "+(arguments.length-1));};a.a=function(a){return pd(this,a,0)};a.b=function(a,c){return pd(this,a,c)};return a}();
h.lastIndexOf=function(){function a(a){return rd(this,a,D(this))}var b=null;b=function(b,d){switch(arguments.length){case 1:return a.call(this,b);case 2:return rd(this,b,d)}throw Error("Invalid arity: "+(arguments.length-1));};b.a=a;b.b=function(a,b){return rd(this,a,b)};return b}();h.R=function(a,b){return this.F(null,b,null)};h.F=function(a,b,c){return"number"===typeof b?this.ba(null,b,c):c};
h.kc=function(a,b,c){a=this.start;for(var d=0;;)if(a<this.end){var e=d,f=xb.b(this.na,a);c=b.c?b.c(c,e,f):b.call(null,c,e,f);if(gd(c))return Tb(c);d+=1;a+=1}else return c};h.W=function(a,b){return 0>b||this.end<=this.start+b?fg(b,this.end-this.start):xb.b(this.na,this.start+b)};h.ba=function(a,b,c){return 0>b||this.end<=this.start+b?c:xb.c(this.na,this.start+b,c)};
h.Ab=function(a,b,c){a=this.start+b;if(0>b||this.end+1<=a)throw Error(["Index ",r.a(b)," out of bounds [0,",r.a(this.S(null)),"]"].join(""));b=this.u;c=Dd.c(this.na,a,c);var d=this.end;a+=1;return tg(b,c,this.start,d>a?d:a,null)};h.ca=function(){return null!=this.na&&l===this.na.cd?kg(this.na,this.start,this.end):new mf(kf,this)};h.L=function(){return this.u};h.S=function(){return this.end-this.start};h.Pb=function(){return xb.b(this.na,this.end-1)};
h.Qb=function(){if(this.start===this.end)throw Error("Can't pop empty vector");return tg(this.u,this.na,this.start,this.end-1,null)};h.Cc=function(){return this.start!==this.end?new td(this,this.end-this.start-1,null):null};h.M=function(){var a=this.j;return null!=a?a:this.j=a=ad(this)};h.D=function(a,b){return ud(this,b)};h.fa=function(){return Wb(H,this.u)};h.ja=function(a,b){return null!=this.na&&l===this.na.cd?lg(this.na,b,this.start,this.end):id(this,b)};
h.ka=function(a,b,c){return null!=this.na&&l===this.na.cd?mg(this.na,b,c,this.start,this.end):jd(this,b,c)};h.P=function(a,b,c){if("number"===typeof b)return this.Ab(null,b,c);throw Error("Subvec's key for assoc must be a number.");};h.O=function(){var a=this;return function(b){return function e(d){return d===a.end?null:vd(xb.b(a.na,d),new Me(null,function(){return function(){return e(d+1)}}(b),null,null))}}(this)(a.start)};h.J=function(a,b){return tg(b,this.na,this.start,this.end,this.j)};
h.T=function(a,b){return tg(this.u,Sb(this.na,this.end,b),this.start,this.end+1,null)};h.call=function(){var a=null;a=function(a,c,d){switch(arguments.length){case 2:return this.W(null,c);case 3:return this.ba(null,c,d)}throw Error("Invalid arity: "+(arguments.length-1));};a.b=function(a,c){return this.W(null,c)};a.c=function(a,c,d){return this.ba(null,c,d)};return a}();h.apply=function(a,b){return this.call.apply(this,[this].concat(kb(b)))};h.a=function(a){return this.W(null,a)};
h.b=function(a,b){return this.ba(null,a,b)};sg.prototype[hb]=function(){return Yc(this)};function tg(a,b,c,d,e){for(;;)if(b instanceof sg)c=b.start+c,d=b.start+d,b=b.na;else{if(!Sd(b))throw Error("v must satisfy IVector");var f=D(b);if(0>c||0>d||c>f||d>f)throw Error("Index out of bounds");return new sg(a,b,c,d,e)}}function ug(a,b){if(null==b)throw Error("Assert failed: (and (not (nil? start)) (not (nil? end)))");return tg(null,a,0,b,null)}function vg(a,b){return a===b.ea?b:new $f(a,kb(b.i))}
var wg=function wg(a,b,c,d){c=vg(a.root.ea,c);var f=a.o-1>>>b&31;if(5===b)a=d;else{var g=c.i[f];null!=g?(b-=5,a=wg.A?wg.A(a,b,g,d):wg.call(null,a,b,g,d)):a=dg(a.root.ea,b-5,d)}c.i[f]=a;return c};function ng(a,b,c,d){this.o=a;this.shift=b;this.root=c;this.La=d;this.C=88;this.h=275}h=ng.prototype;
h.ac=function(a,b){if(this.root.ea){if(32>this.o-cg(this))this.La[this.o&31]=b;else{var c=new $f(this.root.ea,this.La),d=[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];d[0]=b;this.La=d;if(this.o>>>5>1<<this.shift){d=[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];var e=this.shift+
5;d[0]=this.root;d[1]=dg(this.root.ea,this.shift,c);this.root=new $f(this.root.ea,d);this.shift=e}else this.root=wg(this,this.shift,this.root,c)}this.o+=1;return this}throw Error("conj! after persistent!");};h.Dc=function(){if(this.root.ea){this.root.ea=null;var a=this.o-cg(this),b=Array(a);Ud(this.La,0,b,0,a);return new R(null,this.o,this.shift,this.root,b,null)}throw Error("persistent! called twice");};
h.$b=function(a,b,c){if("number"===typeof b)return xg(this,b,c);throw Error("TransientVector's key for assoc! must be a number.");};
function xg(a,b,c){if(a.root.ea){if(0<=b&&b<a.o){if(cg(a)<=b)a.La[b&31]=c;else{var d=function(){return function(){return function k(d,g){var f=vg(a.root.ea,g);if(0===d)f.i[b&31]=c;else{var q=b>>>d&31,t=k(d-5,f.i[q]);f.i[q]=t}return f}}(a)(a.shift,a.root)}();a.root=d}return a}if(b===a.o)return a.ac(null,c);throw Error(["Index ",r.a(b)," out of bounds for TransientVector of length",r.a(a.o)].join(""));}throw Error("assoc! after persistent!");}
h.S=function(){if(this.root.ea)return this.o;throw Error("count after persistent!");};h.W=function(a,b){if(this.root.ea)return(0<=b&&b<this.o?gg(this,b):fg(b,this.o))[b&31];throw Error("nth after persistent!");};h.ba=function(a,b,c){return 0<=b&&b<this.o?this.W(null,b):c};h.R=function(a,b){return this.F(null,b,null)};h.F=function(a,b,c){return"number"===typeof b?this.ba(null,b,c):c};
h.call=function(){var a=null;a=function(a,c,d){switch(arguments.length){case 2:return this.R(null,c);case 3:return this.F(null,c,d)}throw Error("Invalid arity: "+(arguments.length-1));};a.b=function(a,c){return this.R(null,c)};a.c=function(a,c,d){return this.F(null,c,d)};return a}();h.apply=function(a,b){return this.call.apply(this,[this].concat(kb(b)))};h.a=function(a){return this.R(null,a)};h.b=function(a,b){return this.F(null,a,b)};function yg(a,b){this.rc=a;this.Jc=b}
yg.prototype.ha=function(){var a=null!=this.rc&&x(this.rc);return a?a:(a=null!=this.Jc)?this.Jc.ha():a};yg.prototype.next=function(){if(null!=this.rc){var a=y(this.rc);this.rc=B(this.rc);return a}if(null!=this.Jc&&this.Jc.ha())return this.Jc.next();throw Error("No such element");};yg.prototype.remove=function(){return Error("Unsupported operation")};function zg(a,b,c,d){this.u=a;this.Pa=b;this.ab=c;this.j=d;this.h=31850700;this.C=0}h=zg.prototype;h.toString=function(){return Fc(this)};
h.equiv=function(a){return this.D(null,a)};h.indexOf=function(){var a=null;a=function(a,c){switch(arguments.length){case 1:return pd(this,a,0);case 2:return pd(this,a,c)}throw Error("Invalid arity: "+(arguments.length-1));};a.a=function(a){return pd(this,a,0)};a.b=function(a,c){return pd(this,a,c)};return a}();
h.lastIndexOf=function(){function a(a){return rd(this,a,D(this))}var b=null;b=function(b,d){switch(arguments.length){case 1:return a.call(this,b);case 2:return rd(this,b,d)}throw Error("Invalid arity: "+(arguments.length-1));};b.a=a;b.b=function(a,b){return rd(this,a,b)};return b}();h.L=function(){return this.u};h.ma=function(){var a=B(this.Pa);return a?new zg(this.u,a,this.ab,null):null!=this.ab?new zg(this.u,this.ab,null,null):null};h.M=function(){var a=this.j;return null!=a?a:this.j=a=ad(this)};
h.D=function(a,b){return ud(this,b)};h.fa=function(){return Wb(Wc,this.u)};h.ia=function(){return y(this.Pa)};h.pa=function(){var a=B(this.Pa);return a?new zg(this.u,a,this.ab,null):null==this.ab?this.fa(null):new zg(this.u,this.ab,null,null)};h.O=function(){return this};h.J=function(a,b){return new zg(b,this.Pa,this.ab,this.j)};h.T=function(a,b){return vd(b,this)};zg.prototype[hb]=function(){return Yc(this)};
function Ag(a,b,c,d,e){this.u=a;this.count=b;this.Pa=c;this.ab=d;this.j=e;this.C=139264;this.h=31858766}h=Ag.prototype;h.toString=function(){return Fc(this)};h.equiv=function(a){return this.D(null,a)};h.indexOf=function(){var a=null;a=function(a,c){switch(arguments.length){case 1:return pd(this,a,0);case 2:return pd(this,a,c)}throw Error("Invalid arity: "+(arguments.length-1));};a.a=function(a){return pd(this,a,0)};a.b=function(a,c){return pd(this,a,c)};return a}();
h.lastIndexOf=function(){function a(a){return rd(this,a,this.count.a?this.count.a(this):this.count.call(null,this))}var b=null;b=function(b,d){switch(arguments.length){case 1:return a.call(this,b);case 2:return rd(this,b,d)}throw Error("Invalid arity: "+(arguments.length-1));};b.a=a;b.b=function(a,b){return rd(this,a,b)};return b}();h.ca=function(){return new yg(this.Pa,Dc(this.ab))};h.L=function(){return this.u};h.S=function(){return this.count};h.Pb=function(){return y(this.Pa)};
h.Qb=function(){if(n(this.Pa)){var a=B(this.Pa);return a?new Ag(this.u,this.count-1,a,this.ab,null):new Ag(this.u,this.count-1,x(this.ab),H,null)}return this};h.M=function(){var a=this.j;return null!=a?a:this.j=a=ad(this)};h.D=function(a,b){return ud(this,b)};h.fa=function(){return Wb(Bg,this.u)};h.ia=function(){return y(this.Pa)};h.pa=function(){return Vc(x(this))};h.O=function(){var a=x(this.ab),b=this.Pa;return n(n(b)?b:a)?new zg(null,this.Pa,x(a),null):null};
h.J=function(a,b){return new Ag(b,this.count,this.Pa,this.ab,this.j)};h.T=function(a,b){if(n(this.Pa)){var c=this.ab;c=new Ag(this.u,this.count+1,this.Pa,Ad.b(n(c)?c:H,b),null)}else c=new Ag(this.u,this.count+1,Ad.b(this.Pa,b),H,null);return c};var Bg=new Ag(null,0,null,H,bd);Ag.prototype[hb]=function(){return Yc(this)};function Cg(){this.h=2097152;this.C=0}Cg.prototype.equiv=function(a){return this.D(null,a)};Cg.prototype.D=function(){return!1};var Dg=new Cg;
function Eg(a,b){return Xd(L(b)&&!Rd(b)?D(a)===D(b)?(null!=a?a.h&1048576||l===a.ff||(a.h?0:cb($b,a)):cb($b,a))?le(function(a,d,e){return C.b(w.c(b,d,Dg),e)?!0:new fd(!1)},a):of(function(a){return C.b(w.c(b,y(a),Dg),yd(a))},a):null:null)}function Fg(a,b,c,d,e){this.v=a;this.Te=b;this.qd=c;this.se=d;this.Ed=e}Fg.prototype.ha=function(){var a=this.v<this.qd;return a?a:this.Ed.ha()};
Fg.prototype.next=function(){if(this.v<this.qd){var a=qd(this.se,this.v);this.v+=1;return new R(null,2,5,S,[a,Eb.b(this.Te,a)],null)}return this.Ed.next()};Fg.prototype.remove=function(){return Error("Unsupported operation")};function Gg(a){this.K=a}Gg.prototype.next=function(){if(null!=this.K){var a=y(this.K),b=J(a,0,null);a=J(a,1,null);this.K=B(this.K);return{value:[b,a],done:!1}}return{value:null,done:!0}};function Hg(a){this.K=a}
Hg.prototype.next=function(){if(null!=this.K){var a=y(this.K);this.K=B(this.K);return{value:[a,a],done:!1}}return{value:null,done:!0}};
function Ig(a,b){if(b instanceof O)a:{var c=a.length;for(var d=b.$,e=0;;){if(c<=e){c=-1;break a}if(a[e]instanceof O&&d===a[e].$){c=e;break a}e+=2}}else if("string"==typeof b||"number"===typeof b)a:for(c=a.length,d=0;;){if(c<=d){c=-1;break a}if(b===a[d]){c=d;break a}d+=2}else if(b instanceof u)a:for(c=a.length,d=b.wb,e=0;;){if(c<=e){c=-1;break a}if(a[e]instanceof u&&d===a[e].wb){c=e;break a}e+=2}else if(null==b)a:for(c=a.length,d=0;;){if(c<=d){c=-1;break a}if(null==a[d]){c=d;break a}d+=2}else a:for(c=
a.length,d=0;;){if(c<=d){c=-1;break a}if(C.b(b,a[d])){c=d;break a}d+=2}return c}function Jg(a,b,c){this.i=a;this.v=b;this.Na=c;this.h=32374990;this.C=0}h=Jg.prototype;h.toString=function(){return Fc(this)};h.equiv=function(a){return this.D(null,a)};
h.indexOf=function(){var a=null;a=function(a,c){switch(arguments.length){case 1:return pd(this,a,0);case 2:return pd(this,a,c)}throw Error("Invalid arity: "+(arguments.length-1));};a.a=function(a){return pd(this,a,0)};a.b=function(a,c){return pd(this,a,c)};return a}();
h.lastIndexOf=function(){function a(a){return rd(this,a,D(this))}var b=null;b=function(b,d){switch(arguments.length){case 1:return a.call(this,b);case 2:return rd(this,b,d)}throw Error("Invalid arity: "+(arguments.length-1));};b.a=a;b.b=function(a,b){return rd(this,a,b)};return b}();h.L=function(){return this.Na};h.ma=function(){return this.v<this.i.length-2?new Jg(this.i,this.v+2,this.Na):null};h.S=function(){return(this.i.length-this.v)/2};h.M=function(){return ad(this)};
h.D=function(a,b){return ud(this,b)};h.fa=function(){return Wb(Wc,this.Na)};h.ja=function(a,b){return wd(b,this)};h.ka=function(a,b,c){return xd(b,c,this)};h.ia=function(){return new R(null,2,5,S,[this.i[this.v],this.i[this.v+1]],null)};h.pa=function(){return this.v<this.i.length-2?new Jg(this.i,this.v+2,this.Na):Wc};h.O=function(){return this};h.J=function(a,b){return new Jg(this.i,this.v,b)};h.T=function(a,b){return vd(b,this)};Jg.prototype[hb]=function(){return Yc(this)};
function Kg(a,b,c){this.i=a;this.v=b;this.o=c}Kg.prototype.ha=function(){return this.v<this.o};Kg.prototype.next=function(){var a=new R(null,2,5,S,[this.i[this.v],this.i[this.v+1]],null);this.v+=2;return a};function m(a,b,c,d){this.u=a;this.o=b;this.i=c;this.j=d;this.h=16647951;this.C=139268}h=m.prototype;h.toString=function(){return Fc(this)};h.equiv=function(a){return this.D(null,a)};h.keys=function(){return Yc(Lg(this))};h.entries=function(){return new Gg(x(x(this)))};h.values=function(){return Yc(Mg(this))};
h.has=function(a){return Zd(this,a)};h.get=function(a,b){return this.F(null,a,b)};h.forEach=function(a){for(var b=x(this),c=null,d=0,e=0;;)if(e<d){var f=c.W(null,e),g=J(f,0,null);f=J(f,1,null);a.b?a.b(f,g):a.call(null,f,g);e+=1}else if(b=x(b))Td(b)?(c=vc(b),b=wc(b),g=c,d=D(c),c=g):(c=y(b),g=J(c,0,null),f=J(c,1,null),a.b?a.b(f,g):a.call(null,f,g),b=B(b),c=null,d=0),e=0;else return null};h.R=function(a,b){return this.F(null,b,null)};h.F=function(a,b,c){a=Ig(this.i,b);return-1===a?c:this.i[a+1]};
h.kc=function(a,b,c){a=this.i.length;for(var d=0;;)if(d<a){var e=this.i[d],f=this.i[d+1];c=b.c?b.c(c,e,f):b.call(null,c,e,f);if(gd(c))return Tb(c);d+=2}else return c};h.ca=function(){return new Kg(this.i,0,2*this.o)};h.L=function(){return this.u};h.S=function(){return this.o};h.M=function(){var a=this.j;return null!=a?a:this.j=a=cd(this)};
h.D=function(a,b){if(L(b)&&!Rd(b)){var c=this.i.length;if(this.o===b.S(null))for(var d=0;;)if(d<c){var e=b.F(null,this.i[d],Vd);if(e!==Vd)if(C.b(this.i[d+1],e))d+=2;else return!1;else return!1}else return!0;else return!1}else return!1};h.jc=function(){return new Ng({},this.i.length,kb(this.i))};h.fa=function(){return Wb(jf,this.u)};h.ja=function(a,b){return ie(this,b)};h.ka=function(a,b,c){return je(this,b,c)};
h.oa=function(a,b){if(0<=Ig(this.i,b)){var c=this.i.length,d=c-2;if(0===d)return this.fa(null);d=Array(d);for(var e=0,f=0;;){if(e>=c)return new m(this.u,this.o-1,d,null);C.b(b,this.i[e])||(d[f]=this.i[e],d[f+1]=this.i[e+1],f+=2);e+=2}}else return this};
h.P=function(a,b,c){a=Ig(this.i,b);if(-1===a){if(this.o<Og){a=this.i;for(var d=a.length,e=Array(d+2),f=0;;)if(f<d)e[f]=a[f],f+=1;else break;e[d]=b;e[d+1]=c;return new m(this.u,this.o+1,e,null)}return Wb(Gb(Tf.b(Pg,this),b,c),this.u)}if(c===this.i[a+1])return this;b=kb(this.i);b[a+1]=c;return new m(this.u,this.o,b,null)};h.Yb=function(a,b){return-1!==Ig(this.i,b)};h.O=function(){var a=this.i;return 0<=a.length-2?new Jg(a,0,null):null};h.J=function(a,b){return new m(b,this.o,this.i,this.j)};
h.T=function(a,b){if(Sd(b))return this.P(null,xb.b(b,0),xb.b(b,1));for(var c=this,d=x(b);;){if(null==d)return c;var e=y(d);if(Sd(e))c=c.P(null,xb.b(e,0),xb.b(e,1)),d=B(d);else throw Error("conj on a map takes map entries or seqables of map entries");}};
h.call=function(){var a=null;a=function(a,c,d){switch(arguments.length){case 2:return this.R(null,c);case 3:return this.F(null,c,d)}throw Error("Invalid arity: "+(arguments.length-1));};a.b=function(a,c){return this.R(null,c)};a.c=function(a,c,d){return this.F(null,c,d)};return a}();h.apply=function(a,b){return this.call.apply(this,[this].concat(kb(b)))};h.a=function(a){return this.R(null,a)};h.b=function(a,b){return this.F(null,a,b)};var jf=new m(null,0,[],dd),Og=8;
function Qg(a){return new m(null,a.length/2,a,null)}function Ed(a){for(var b=[],c=0;;)if(c<a.length){var d=a[c],e=a[c+1],f=Ig(b,d);-1===f?(f=b,f.push(d),f.push(e)):b[f+1]=e;c+=2}else break;return new m(null,b.length/2,b,null)}m.prototype[hb]=function(){return Yc(this)};function Ng(a,b,c){this.pc=a;this.sc=b;this.i=c;this.h=258;this.C=56}h=Ng.prototype;h.S=function(){if(n(this.pc))return te(this.sc);throw Error("count after persistent!");};h.R=function(a,b){return this.F(null,b,null)};
h.F=function(a,b,c){if(n(this.pc))return a=Ig(this.i,b),-1===a?c:this.i[a+1];throw Error("lookup after persistent!");};h.ac=function(a,b){if(n(this.pc)){if(null!=b?b.h&2048||l===b.vd||(b.h?0:cb(Jb,b)):cb(Jb,b))return this.$b(null,Kb(b),Lb(b));for(var c=x(b),d=this;;){var e=y(c);if(n(e))c=B(c),d=d.$b(null,Kb(e),Lb(e));else return d}}else throw Error("conj! after persistent!");};
h.Dc=function(){if(n(this.pc))return this.pc=!1,new m(null,te(this.sc),this.i,null);throw Error("persistent! called twice");};h.$b=function(a,b,c){if(n(this.pc)){a=Ig(this.i,b);if(-1===a){if(this.sc+2<=2*Og)return this.sc+=2,this.i.push(b),this.i.push(c),this;a:{a=this.sc;for(var d=this.i,e=oc(Pg),f=0;;)if(f<a)e=rc(e,d[f],d[f+1]),f+=2;else break a}return rc(e,b,c)}c!==this.i[a+1]&&(this.i[a+1]=c);return this}throw Error("assoc! after persistent!");};function Rg(){this.B=!1}
function Sg(a,b){return a===b?!0:He(a,b)?!0:C.b(a,b)}function Tg(a,b,c){a=kb(a);a[b]=c;return a}function Ug(a,b){var c=Array(a.length-2);Ud(a,0,c,0,2*b);Ud(a,2*(b+1),c,2*b,c.length-2*b);return c}function Vg(a,b,c,d){a=a.cc(b);a.i[c]=d;return a}function Wg(a,b,c){for(var d=a.length,e=0,f=c;;)if(e<d){c=a[e];if(null!=c){var g=a[e+1];c=b.c?b.c(f,c,g):b.call(null,f,c,g)}else c=a[e+1],c=null!=c?c.ec(b,f):f;if(gd(c))return c;e+=2;f=c}else return f}
function Xg(a,b,c,d){this.i=a;this.v=b;this.Hc=c;this.qb=d}Xg.prototype.advance=function(){for(var a=this.i.length;;)if(this.v<a){var b=this.i[this.v],c=this.i[this.v+1];null!=b?b=this.Hc=new R(null,2,5,S,[b,c],null):null!=c?(b=Dc(c),b=b.ha()?this.qb=b:!1):b=!1;this.v+=2;if(b)return!0}else return!1};Xg.prototype.ha=function(){var a=null!=this.Hc;return a?a:(a=null!=this.qb)?a:this.advance()};
Xg.prototype.next=function(){if(null!=this.Hc){var a=this.Hc;this.Hc=null;return a}if(null!=this.qb)return a=this.qb.next(),this.qb.ha()||(this.qb=null),a;if(this.advance())return this.next();throw Error("No such element");};Xg.prototype.remove=function(){return Error("Unsupported operation")};function Yg(a,b,c){this.ea=a;this.ga=b;this.i=c;this.C=131072;this.h=0}h=Yg.prototype;
h.cc=function(a){if(a===this.ea)return this;var b=ue(this.ga),c=Array(0>b?4:2*(b+1));Ud(this.i,0,c,0,2*b);return new Yg(a,this.ga,c)};h.Ec=function(){return Zg(this.i,0,null)};h.ec=function(a,b){return Wg(this.i,a,b)};h.Ub=function(a,b,c,d){var e=1<<(b>>>a&31);if(0===(this.ga&e))return d;var f=ue(this.ga&e-1);e=this.i[2*f];f=this.i[2*f+1];return null==e?f.Ub(a+5,b,c,d):Sg(c,e)?f:d};
h.pb=function(a,b,c,d,e,f){var g=1<<(c>>>b&31),k=ue(this.ga&g-1);if(0===(this.ga&g)){var p=ue(this.ga);if(2*p<this.i.length){a=this.cc(a);b=a.i;f.B=!0;a:for(c=2*(p-k),f=2*k+(c-1),p=2*(k+1)+(c-1);;){if(0===c)break a;b[p]=b[f];--p;--c;--f}b[2*k]=d;b[2*k+1]=e;a.ga|=g;return a}if(16<=p){k=[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];k[c>>>b&31]=$g.pb(a,b+5,c,d,e,f);for(e=d=0;;)if(32>d)0!==
(this.ga>>>d&1)&&(k[d]=null!=this.i[e]?$g.pb(a,b+5,Oc(this.i[e]),this.i[e],this.i[e+1],f):this.i[e+1],e+=2),d+=1;else break;return new bh(a,p+1,k)}b=Array(2*(p+4));Ud(this.i,0,b,0,2*k);b[2*k]=d;b[2*k+1]=e;Ud(this.i,2*k,b,2*(k+1),2*(p-k));f.B=!0;a=this.cc(a);a.i=b;a.ga|=g;return a}p=this.i[2*k];g=this.i[2*k+1];if(null==p)return p=g.pb(a,b+5,c,d,e,f),p===g?this:Vg(this,a,2*k+1,p);if(Sg(d,p))return e===g?this:Vg(this,a,2*k+1,e);f.B=!0;f=b+5;b=Oc(p);if(b===c)e=new ch(null,b,2,[p,g,d,e]);else{var q=new Rg;
e=$g.pb(a,f,b,p,g,q).pb(a,f,c,d,e,q)}d=2*k;k=2*k+1;a=this.cc(a);a.i[d]=null;a.i[k]=e;return a};
h.ob=function(a,b,c,d,e){var f=1<<(b>>>a&31),g=ue(this.ga&f-1);if(0===(this.ga&f)){var k=ue(this.ga);if(16<=k){g=[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];g[b>>>a&31]=$g.ob(a+5,b,c,d,e);for(d=c=0;;)if(32>c)0!==(this.ga>>>c&1)&&(g[c]=null!=this.i[d]?$g.ob(a+5,Oc(this.i[d]),this.i[d],this.i[d+1],e):this.i[d+1],d+=2),c+=1;else break;return new bh(null,k+1,g)}a=Array(2*(k+1));Ud(this.i,
0,a,0,2*g);a[2*g]=c;a[2*g+1]=d;Ud(this.i,2*g,a,2*(g+1),2*(k-g));e.B=!0;return new Yg(null,this.ga|f,a)}var p=this.i[2*g];f=this.i[2*g+1];if(null==p)return k=f.ob(a+5,b,c,d,e),k===f?this:new Yg(null,this.ga,Tg(this.i,2*g+1,k));if(Sg(c,p))return d===f?this:new Yg(null,this.ga,Tg(this.i,2*g+1,d));e.B=!0;e=this.ga;k=this.i;a+=5;var q=Oc(p);if(q===b)c=new ch(null,q,2,[p,f,c,d]);else{var t=new Rg;c=$g.ob(a,q,p,f,t).ob(a,b,c,d,t)}a=2*g;g=2*g+1;d=kb(k);d[a]=null;d[g]=c;return new Yg(null,e,d)};
h.Fc=function(a,b,c){var d=1<<(b>>>a&31);if(0===(this.ga&d))return this;var e=ue(this.ga&d-1),f=this.i[2*e],g=this.i[2*e+1];return null==f?(a=g.Fc(a+5,b,c),a===g?this:null!=a?new Yg(null,this.ga,Tg(this.i,2*e+1,a)):this.ga===d?null:new Yg(null,this.ga^d,Ug(this.i,e))):Sg(c,f)?new Yg(null,this.ga^d,Ug(this.i,e)):this};h.ca=function(){return new Xg(this.i,0,null,null)};var $g=new Yg(null,0,[]);function dh(a,b,c){this.i=a;this.v=b;this.qb=c}
dh.prototype.ha=function(){for(var a=this.i.length;;){if(null!=this.qb&&this.qb.ha())return!0;if(this.v<a){var b=this.i[this.v];this.v+=1;null!=b&&(this.qb=Dc(b))}else return!1}};dh.prototype.next=function(){if(this.ha())return this.qb.next();throw Error("No such element");};dh.prototype.remove=function(){return Error("Unsupported operation")};function bh(a,b,c){this.ea=a;this.o=b;this.i=c;this.C=131072;this.h=0}h=bh.prototype;h.cc=function(a){return a===this.ea?this:new bh(a,this.o,kb(this.i))};
h.Ec=function(){return eh(this.i,0,null)};h.ec=function(a,b){for(var c=this.i.length,d=0,e=b;;)if(d<c){var f=this.i[d];if(null!=f&&(e=f.ec(a,e),gd(e)))return e;d+=1}else return e};h.Ub=function(a,b,c,d){var e=this.i[b>>>a&31];return null!=e?e.Ub(a+5,b,c,d):d};h.pb=function(a,b,c,d,e,f){var g=c>>>b&31,k=this.i[g];if(null==k)return a=Vg(this,a,g,$g.pb(a,b+5,c,d,e,f)),a.o+=1,a;b=k.pb(a,b+5,c,d,e,f);return b===k?this:Vg(this,a,g,b)};
h.ob=function(a,b,c,d,e){var f=b>>>a&31,g=this.i[f];if(null==g)return new bh(null,this.o+1,Tg(this.i,f,$g.ob(a+5,b,c,d,e)));a=g.ob(a+5,b,c,d,e);return a===g?this:new bh(null,this.o,Tg(this.i,f,a))};
h.Fc=function(a,b,c){var d=b>>>a&31,e=this.i[d];if(null!=e){a=e.Fc(a+5,b,c);if(a===e)d=this;else if(null==a)if(8>=this.o)a:{e=this.i;a=e.length;b=Array(2*(this.o-1));c=0;for(var f=1,g=0;;)if(c<a)c!==d&&null!=e[c]&&(b[f]=e[c],f+=2,g|=1<<c),c+=1;else{d=new Yg(null,g,b);break a}}else d=new bh(null,this.o-1,Tg(this.i,d,a));else d=new bh(null,this.o,Tg(this.i,d,a));return d}return this};h.ca=function(){return new dh(this.i,0,null)};
function fh(a,b,c){b*=2;for(var d=0;;)if(d<b){if(Sg(c,a[d]))return d;d+=2}else return-1}function ch(a,b,c,d){this.ea=a;this.Fb=b;this.o=c;this.i=d;this.C=131072;this.h=0}h=ch.prototype;h.cc=function(a){if(a===this.ea)return this;var b=Array(2*(this.o+1));Ud(this.i,0,b,0,2*this.o);return new ch(a,this.Fb,this.o,b)};h.Ec=function(){return Zg(this.i,0,null)};h.ec=function(a,b){return Wg(this.i,a,b)};h.Ub=function(a,b,c,d){a=fh(this.i,this.o,c);return 0>a?d:Sg(c,this.i[a])?this.i[a+1]:d};
h.pb=function(a,b,c,d,e,f){if(c===this.Fb){b=fh(this.i,this.o,d);if(-1===b){if(this.i.length>2*this.o)return b=2*this.o,c=2*this.o+1,a=this.cc(a),a.i[b]=d,a.i[c]=e,f.B=!0,a.o+=1,a;c=this.i.length;b=Array(c+2);Ud(this.i,0,b,0,c);b[c]=d;b[c+1]=e;f.B=!0;d=this.o+1;a===this.ea?(this.i=b,this.o=d,a=this):a=new ch(this.ea,this.Fb,d,b);return a}return this.i[b+1]===e?this:Vg(this,a,b+1,e)}return(new Yg(a,1<<(this.Fb>>>b&31),[null,this,null,null])).pb(a,b,c,d,e,f)};
h.ob=function(a,b,c,d,e){return b===this.Fb?(a=fh(this.i,this.o,c),-1===a?(a=2*this.o,b=Array(a+2),Ud(this.i,0,b,0,a),b[a]=c,b[a+1]=d,e.B=!0,new ch(null,this.Fb,this.o+1,b)):C.b(this.i[a+1],d)?this:new ch(null,this.Fb,this.o,Tg(this.i,a+1,d))):(new Yg(null,1<<(this.Fb>>>a&31),[null,this])).ob(a,b,c,d,e)};h.Fc=function(a,b,c){a=fh(this.i,this.o,c);return-1===a?this:1===this.o?null:new ch(null,this.Fb,this.o-1,Ug(this.i,te(a)))};h.ca=function(){return new Xg(this.i,0,null,null)};
function gh(a,b,c,d,e){this.u=a;this.rb=b;this.v=c;this.K=d;this.j=e;this.h=32374988;this.C=0}h=gh.prototype;h.toString=function(){return Fc(this)};h.equiv=function(a){return this.D(null,a)};h.indexOf=function(){var a=null;a=function(a,c){switch(arguments.length){case 1:return pd(this,a,0);case 2:return pd(this,a,c)}throw Error("Invalid arity: "+(arguments.length-1));};a.a=function(a){return pd(this,a,0)};a.b=function(a,c){return pd(this,a,c)};return a}();
h.lastIndexOf=function(){function a(a){return rd(this,a,D(this))}var b=null;b=function(b,d){switch(arguments.length){case 1:return a.call(this,b);case 2:return rd(this,b,d)}throw Error("Invalid arity: "+(arguments.length-1));};b.a=a;b.b=function(a,b){return rd(this,a,b)};return b}();h.L=function(){return this.u};h.ma=function(){return null==this.K?Zg(this.rb,this.v+2,null):Zg(this.rb,this.v,B(this.K))};h.M=function(){var a=this.j;return null!=a?a:this.j=a=ad(this)};
h.D=function(a,b){return ud(this,b)};h.fa=function(){return Wb(Wc,this.u)};h.ja=function(a,b){return wd(b,this)};h.ka=function(a,b,c){return xd(b,c,this)};h.ia=function(){return null==this.K?new R(null,2,5,S,[this.rb[this.v],this.rb[this.v+1]],null):y(this.K)};h.pa=function(){var a=null==this.K?Zg(this.rb,this.v+2,null):Zg(this.rb,this.v,B(this.K));return null!=a?a:Wc};h.O=function(){return this};h.J=function(a,b){return new gh(b,this.rb,this.v,this.K,this.j)};h.T=function(a,b){return vd(b,this)};
gh.prototype[hb]=function(){return Yc(this)};function Zg(a,b,c){if(null==c)for(c=a.length;;)if(b<c){if(null!=a[b])return new gh(null,a,b,null,null);var d=a[b+1];if(n(d)&&(d=d.Ec(),n(d)))return new gh(null,a,b+2,d,null);b+=2}else return null;else return new gh(null,a,b,c,null)}function hh(a,b,c,d,e){this.u=a;this.rb=b;this.v=c;this.K=d;this.j=e;this.h=32374988;this.C=0}h=hh.prototype;h.toString=function(){return Fc(this)};h.equiv=function(a){return this.D(null,a)};
h.indexOf=function(){var a=null;a=function(a,c){switch(arguments.length){case 1:return pd(this,a,0);case 2:return pd(this,a,c)}throw Error("Invalid arity: "+(arguments.length-1));};a.a=function(a){return pd(this,a,0)};a.b=function(a,c){return pd(this,a,c)};return a}();
h.lastIndexOf=function(){function a(a){return rd(this,a,D(this))}var b=null;b=function(b,d){switch(arguments.length){case 1:return a.call(this,b);case 2:return rd(this,b,d)}throw Error("Invalid arity: "+(arguments.length-1));};b.a=a;b.b=function(a,b){return rd(this,a,b)};return b}();h.L=function(){return this.u};h.ma=function(){return eh(this.rb,this.v,B(this.K))};h.M=function(){var a=this.j;return null!=a?a:this.j=a=ad(this)};h.D=function(a,b){return ud(this,b)};h.fa=function(){return Wb(Wc,this.u)};
h.ja=function(a,b){return wd(b,this)};h.ka=function(a,b,c){return xd(b,c,this)};h.ia=function(){return y(this.K)};h.pa=function(){var a=eh(this.rb,this.v,B(this.K));return null!=a?a:Wc};h.O=function(){return this};h.J=function(a,b){return new hh(b,this.rb,this.v,this.K,this.j)};h.T=function(a,b){return vd(b,this)};hh.prototype[hb]=function(){return Yc(this)};
function eh(a,b,c){if(null==c)for(c=a.length;;)if(b<c){var d=a[b];if(n(d)&&(d=d.Ec(),n(d)))return new hh(null,a,b+1,d,null);b+=1}else return null;else return new hh(null,a,b,c,null)}function ih(a,b,c){this.Ia=a;this.Pd=b;this.jd=c}ih.prototype.ha=function(){return!this.jd||this.Pd.ha()};ih.prototype.next=function(){if(this.jd)return this.Pd.next();this.jd=!0;return new R(null,2,5,S,[null,this.Ia],null)};ih.prototype.remove=function(){return Error("Unsupported operation")};
function jh(a,b,c,d,e,f){this.u=a;this.o=b;this.root=c;this.Ha=d;this.Ia=e;this.j=f;this.h=16123663;this.C=139268}h=jh.prototype;h.toString=function(){return Fc(this)};h.equiv=function(a){return this.D(null,a)};h.keys=function(){return Yc(Lg(this))};h.entries=function(){return new Gg(x(x(this)))};h.values=function(){return Yc(Mg(this))};h.has=function(a){return Zd(this,a)};h.get=function(a,b){return this.F(null,a,b)};
h.forEach=function(a){for(var b=x(this),c=null,d=0,e=0;;)if(e<d){var f=c.W(null,e),g=J(f,0,null);f=J(f,1,null);a.b?a.b(f,g):a.call(null,f,g);e+=1}else if(b=x(b))Td(b)?(c=vc(b),b=wc(b),g=c,d=D(c),c=g):(c=y(b),g=J(c,0,null),f=J(c,1,null),a.b?a.b(f,g):a.call(null,f,g),b=B(b),c=null,d=0),e=0;else return null};h.R=function(a,b){return this.F(null,b,null)};h.F=function(a,b,c){return null==b?this.Ha?this.Ia:c:null==this.root?c:this.root.Ub(0,Oc(b),b,c)};
h.kc=function(a,b,c){a=this.Ha?b.c?b.c(c,null,this.Ia):b.call(null,c,null,this.Ia):c;return gd(a)?Tb(a):null!=this.root?hd(this.root.ec(b,a)):a};h.ca=function(){var a=this.root?Dc(this.root):hf();return this.Ha?new ih(this.Ia,a,!1):a};h.L=function(){return this.u};h.S=function(){return this.o};h.M=function(){var a=this.j;return null!=a?a:this.j=a=cd(this)};h.D=function(a,b){return Eg(this,b)};h.jc=function(){return new kh({},this.root,this.o,this.Ha,this.Ia)};h.fa=function(){return Wb(Pg,this.u)};
h.oa=function(a,b){if(null==b)return this.Ha?new jh(this.u,this.o-1,this.root,!1,null,null):this;if(null==this.root)return this;var c=this.root.Fc(0,Oc(b),b);return c===this.root?this:new jh(this.u,this.o-1,c,this.Ha,this.Ia,null)};h.P=function(a,b,c){if(null==b)return this.Ha&&c===this.Ia?this:new jh(this.u,this.Ha?this.o:this.o+1,this.root,!0,c,null);a=new Rg;b=(null==this.root?$g:this.root).ob(0,Oc(b),b,c,a);return b===this.root?this:new jh(this.u,a.B?this.o+1:this.o,b,this.Ha,this.Ia,null)};
h.Yb=function(a,b){return null==b?this.Ha:null==this.root?!1:this.root.Ub(0,Oc(b),b,Vd)!==Vd};h.O=function(){if(0<this.o){var a=null!=this.root?this.root.Ec():null;return this.Ha?vd(new R(null,2,5,S,[null,this.Ia],null),a):a}return null};h.J=function(a,b){return new jh(b,this.o,this.root,this.Ha,this.Ia,this.j)};
h.T=function(a,b){if(Sd(b))return this.P(null,xb.b(b,0),xb.b(b,1));for(var c=this,d=x(b);;){if(null==d)return c;var e=y(d);if(Sd(e))c=c.P(null,xb.b(e,0),xb.b(e,1)),d=B(d);else throw Error("conj on a map takes map entries or seqables of map entries");}};
h.call=function(){var a=null;a=function(a,c,d){switch(arguments.length){case 2:return this.R(null,c);case 3:return this.F(null,c,d)}throw Error("Invalid arity: "+(arguments.length-1));};a.b=function(a,c){return this.R(null,c)};a.c=function(a,c,d){return this.F(null,c,d)};return a}();h.apply=function(a,b){return this.call.apply(this,[this].concat(kb(b)))};h.a=function(a){return this.R(null,a)};h.b=function(a,b){return this.F(null,a,b)};var Pg=new jh(null,0,null,!1,null,dd);
function lh(a){for(var b=a.length,c=0,d=oc(Pg);;)if(c<b){var e=c+2;d=rc(d,a[c],a[c+1]);c=e}else return qc(d)}function mh(a,b){for(var c=a.length,d=0,e=oc(Pg);;)if(d<c){var f=d+1;e=e.$b(null,a[d],b[d]);d=f}else return qc(e)}jh.prototype[hb]=function(){return Yc(this)};function kh(a,b,c,d,e){this.ea=a;this.root=b;this.count=c;this.Ha=d;this.Ia=e;this.h=258;this.C=56}
function nh(a,b,c){if(a.ea){if(null==b)a.Ia!==c&&(a.Ia=c),a.Ha||(a.count+=1,a.Ha=!0);else{var d=new Rg;b=(null==a.root?$g:a.root).pb(a.ea,0,Oc(b),b,c,d);b!==a.root&&(a.root=b);d.B&&(a.count+=1)}return a}throw Error("assoc! after persistent!");}h=kh.prototype;h.S=function(){if(this.ea)return this.count;throw Error("count after persistent!");};h.R=function(a,b){return null==b?this.Ha?this.Ia:null:null==this.root?null:this.root.Ub(0,Oc(b),b)};
h.F=function(a,b,c){return null==b?this.Ha?this.Ia:c:null==this.root?c:this.root.Ub(0,Oc(b),b,c)};h.ac=function(a,b){a:if(this.ea)if(null!=b?b.h&2048||l===b.vd||(b.h?0:cb(Jb,b)):cb(Jb,b))var c=nh(this,Kb(b),Lb(b));else{c=x(b);for(var d=this;;){var e=y(c);if(n(e))c=B(c),d=nh(d,Kb(e),Lb(e));else{c=d;break a}}}else throw Error("conj! after persistent");return c};
h.Dc=function(){if(this.ea){this.ea=null;var a=new jh(null,this.count,this.root,this.Ha,this.Ia,null)}else throw Error("persistent! called twice");return a};h.$b=function(a,b,c){return nh(this,b,c)};function oh(a,b,c){for(var d=b;;)if(null!=a)b=c?a.left:a.right,d=Ad.b(d,a),a=b;else return d}function ph(a,b,c,d,e){this.u=a;this.stack=b;this.Wb=c;this.o=d;this.j=e;this.h=32374990;this.C=0}h=ph.prototype;h.toString=function(){return Fc(this)};h.equiv=function(a){return this.D(null,a)};
h.indexOf=function(){var a=null;a=function(a,c){switch(arguments.length){case 1:return pd(this,a,0);case 2:return pd(this,a,c)}throw Error("Invalid arity: "+(arguments.length-1));};a.a=function(a){return pd(this,a,0)};a.b=function(a,c){return pd(this,a,c)};return a}();
h.lastIndexOf=function(){function a(a){return rd(this,a,D(this))}var b=null;b=function(b,d){switch(arguments.length){case 1:return a.call(this,b);case 2:return rd(this,b,d)}throw Error("Invalid arity: "+(arguments.length-1));};b.a=a;b.b=function(a,b){return rd(this,a,b)};return b}();h.L=function(){return this.u};h.ma=function(){var a=y(this.stack);a=oh(this.Wb?a.right:a.left,B(this.stack),this.Wb);return null==a?null:new ph(null,a,this.Wb,this.o-1,null)};
h.S=function(){return 0>this.o?D(B(this))+1:this.o};h.M=function(){var a=this.j;return null!=a?a:this.j=a=ad(this)};h.D=function(a,b){return ud(this,b)};h.fa=function(){return Wb(Wc,this.u)};h.ja=function(a,b){return wd(b,this)};h.ka=function(a,b,c){return xd(b,c,this)};h.ia=function(){return Ld(this.stack)};h.pa=function(){var a=y(this.stack);a=oh(this.Wb?a.right:a.left,B(this.stack),this.Wb);return null!=a?new ph(null,a,this.Wb,this.o-1,null):Wc};h.O=function(){return this};
h.J=function(a,b){return new ph(b,this.stack,this.Wb,this.o,this.j)};h.T=function(a,b){return vd(b,this)};ph.prototype[hb]=function(){return Yc(this)};function qh(a,b,c){return new ph(null,oh(a,null,b),b,c,null)}
function rh(a,b,c,d){return c instanceof sh?c.left instanceof sh?new sh(c.key,c.B,c.left.yb(),new th(a,b,c.right,d,null),null):c.right instanceof sh?new sh(c.right.key,c.right.B,new th(c.key,c.B,c.left,c.right.left,null),new th(a,b,c.right.right,d,null),null):new th(a,b,c,d,null):new th(a,b,c,d,null)}
function uh(a,b,c,d){return d instanceof sh?d.right instanceof sh?new sh(d.key,d.B,new th(a,b,c,d.left,null),d.right.yb(),null):d.left instanceof sh?new sh(d.left.key,d.left.B,new th(a,b,c,d.left.left,null),new th(d.key,d.B,d.left.right,d.right,null),null):new th(a,b,c,d,null):new th(a,b,c,d,null)}
function vh(a,b,c,d){if(c instanceof sh)return new sh(a,b,c.yb(),d,null);if(d instanceof th)return uh(a,b,c,d.Ic());if(d instanceof sh&&d.left instanceof th)return new sh(d.left.key,d.left.B,new th(a,b,c,d.left.left,null),uh(d.key,d.B,d.left.right,d.right.Ic()),null);throw Error("red-black tree invariant violation");}
function wh(a,b,c,d){if(d instanceof sh)return new sh(a,b,c,d.yb(),null);if(c instanceof th)return rh(a,b,c.Ic(),d);if(c instanceof sh&&c.right instanceof th)return new sh(c.right.key,c.right.B,rh(c.key,c.B,c.left.Ic(),c.right.left),new th(a,b,c.right.right,d,null),null);throw Error("red-black tree invariant violation");}
var xh=function xh(a,b,c){var e=null!=a.left?function(){var e=a.left;return xh.c?xh.c(e,b,c):xh.call(null,e,b,c)}():c;if(gd(e))return e;var f=function(){var c=a.key,f=a.B;return b.c?b.c(e,c,f):b.call(null,e,c,f)}();if(gd(f))return f;if(null!=a.right){var g=a.right;return xh.c?xh.c(g,b,f):xh.call(null,g,b,f)}return f};function th(a,b,c,d,e){this.key=a;this.B=b;this.left=c;this.right=d;this.j=e;this.h=32402207;this.C=0}h=th.prototype;
h.lastIndexOf=function(){function a(a){return rd(this,a,D(this))}var b=null;b=function(b,d){switch(arguments.length){case 1:return a.call(this,b);case 2:return rd(this,b,d)}throw Error("Invalid arity: "+(arguments.length-1));};b.a=a;b.b=function(a,b){return rd(this,a,b)};return b}();
h.indexOf=function(){var a=null;a=function(a,c){switch(arguments.length){case 1:return pd(this,a,0);case 2:return pd(this,a,c)}throw Error("Invalid arity: "+(arguments.length-1));};a.a=function(a){return pd(this,a,0)};a.b=function(a,c){return pd(this,a,c)};return a}();h.md=function(a){return a.pd(this)};h.Ic=function(){return new sh(this.key,this.B,this.left,this.right,null)};h.yb=function(){return this};h.ld=function(a){return a.od(this)};h.replace=function(a,b,c,d){return new th(a,b,c,d,null)};
h.od=function(a){return new th(a.key,a.B,this,a.right,null)};h.pd=function(a){return new th(a.key,a.B,a.left,this,null)};h.ec=function(a,b){return xh(this,a,b)};h.R=function(a,b){return this.ba(null,b,null)};h.F=function(a,b,c){return this.ba(null,b,c)};h.W=function(a,b){if(0===b)return this.key;if(1===b)return this.B;throw Error("Index out of bounds");};h.ba=function(a,b,c){return 0===b?this.key:1===b?this.B:c};h.Ab=function(a,b,c){return(new R(null,2,5,S,[this.key,this.B],null)).Ab(null,b,c)};
h.L=function(){return null};h.S=function(){return 2};h.lc=function(){return this.key};h.mc=function(){return this.B};h.Pb=function(){return this.B};h.Qb=function(){return new R(null,1,5,S,[this.key],null)};h.M=function(){var a=this.j;return null!=a?a:this.j=a=ad(this)};h.D=function(a,b){return ud(this,b)};h.fa=function(){return H};h.ja=function(a,b){return id(this,b)};h.ka=function(a,b,c){return jd(this,b,c)};h.P=function(a,b,c){return Dd.c(new R(null,2,5,S,[this.key,this.B],null),b,c)};
h.Yb=function(a,b){return 0===b||1===b};h.O=function(){var a=this.key;return vb(vb(Wc,this.B),a)};h.J=function(a,b){return Wb(new R(null,2,5,S,[this.key,this.B],null),b)};h.T=function(a,b){return new R(null,3,5,S,[this.key,this.B,b],null)};
h.call=function(){var a=null;a=function(a,c,d){switch(arguments.length){case 2:return this.W(null,c);case 3:return this.ba(null,c,d)}throw Error("Invalid arity: "+(arguments.length-1));};a.b=function(a,c){return this.W(null,c)};a.c=function(a,c,d){return this.ba(null,c,d)};return a}();h.apply=function(a,b){return this.call.apply(this,[this].concat(kb(b)))};h.a=function(a){return this.W(null,a)};h.b=function(a,b){return this.ba(null,a,b)};th.prototype[hb]=function(){return Yc(this)};
function sh(a,b,c,d,e){this.key=a;this.B=b;this.left=c;this.right=d;this.j=e;this.h=32402207;this.C=0}h=sh.prototype;h.lastIndexOf=function(){function a(a){return rd(this,a,D(this))}var b=null;b=function(b,d){switch(arguments.length){case 1:return a.call(this,b);case 2:return rd(this,b,d)}throw Error("Invalid arity: "+(arguments.length-1));};b.a=a;b.b=function(a,b){return rd(this,a,b)};return b}();
h.indexOf=function(){var a=null;a=function(a,c){switch(arguments.length){case 1:return pd(this,a,0);case 2:return pd(this,a,c)}throw Error("Invalid arity: "+(arguments.length-1));};a.a=function(a){return pd(this,a,0)};a.b=function(a,c){return pd(this,a,c)};return a}();h.md=function(a){return new sh(this.key,this.B,this.left,a,null)};h.Ic=function(){throw Error("red-black tree invariant violation");};h.yb=function(){return new th(this.key,this.B,this.left,this.right,null)};
h.ld=function(a){return new sh(this.key,this.B,a,this.right,null)};h.replace=function(a,b,c,d){return new sh(a,b,c,d,null)};h.od=function(a){return this.left instanceof sh?new sh(this.key,this.B,this.left.yb(),new th(a.key,a.B,this.right,a.right,null),null):this.right instanceof sh?new sh(this.right.key,this.right.B,new th(this.key,this.B,this.left,this.right.left,null),new th(a.key,a.B,this.right.right,a.right,null),null):new th(a.key,a.B,this,a.right,null)};
h.pd=function(a){return this.right instanceof sh?new sh(this.key,this.B,new th(a.key,a.B,a.left,this.left,null),this.right.yb(),null):this.left instanceof sh?new sh(this.left.key,this.left.B,new th(a.key,a.B,a.left,this.left.left,null),new th(this.key,this.B,this.left.right,this.right,null),null):new th(a.key,a.B,a.left,this,null)};h.ec=function(a,b){return xh(this,a,b)};h.R=function(a,b){return this.ba(null,b,null)};h.F=function(a,b,c){return this.ba(null,b,c)};
h.W=function(a,b){if(0===b)return this.key;if(1===b)return this.B;throw Error("Index out of bounds");};h.ba=function(a,b,c){return 0===b?this.key:1===b?this.B:c};h.Ab=function(a,b,c){return(new R(null,2,5,S,[this.key,this.B],null)).Ab(null,b,c)};h.L=function(){return null};h.S=function(){return 2};h.lc=function(){return this.key};h.mc=function(){return this.B};h.Pb=function(){return this.B};h.Qb=function(){return new R(null,1,5,S,[this.key],null)};
h.M=function(){var a=this.j;return null!=a?a:this.j=a=ad(this)};h.D=function(a,b){return ud(this,b)};h.fa=function(){return H};h.ja=function(a,b){return id(this,b)};h.ka=function(a,b,c){return jd(this,b,c)};h.P=function(a,b,c){return Dd.c(new R(null,2,5,S,[this.key,this.B],null),b,c)};h.Yb=function(a,b){return 0===b||1===b};h.O=function(){var a=this.key;return vb(vb(Wc,this.B),a)};h.J=function(a,b){return Wb(new R(null,2,5,S,[this.key,this.B],null),b)};
h.T=function(a,b){return new R(null,3,5,S,[this.key,this.B,b],null)};h.call=function(){var a=null;a=function(a,c,d){switch(arguments.length){case 2:return this.W(null,c);case 3:return this.ba(null,c,d)}throw Error("Invalid arity: "+(arguments.length-1));};a.b=function(a,c){return this.W(null,c)};a.c=function(a,c,d){return this.ba(null,c,d)};return a}();h.apply=function(a,b){return this.call.apply(this,[this].concat(kb(b)))};h.a=function(a){return this.W(null,a)};
h.b=function(a,b){return this.ba(null,a,b)};sh.prototype[hb]=function(){return Yc(this)};
var yh=function yh(a,b,c,d,e){if(null==b)return new sh(c,d,null,null,null);var g=function(){var d=b.key;return a.b?a.b(c,d):a.call(null,c,d)}();if(0===g)return e[0]=b,null;if(0>g)return g=function(){var g=b.left;return yh.V?yh.V(a,g,c,d,e):yh.call(null,a,g,c,d,e)}(),null!=g?b.ld(g):null;g=function(){var g=b.right;return yh.V?yh.V(a,g,c,d,e):yh.call(null,a,g,c,d,e)}();return null!=g?b.md(g):null},zh=function zh(a,b){if(null==a)return b;if(null==b)return a;if(a instanceof sh){if(b instanceof sh){var d=
function(){var d=a.right,f=b.left;return zh.b?zh.b(d,f):zh.call(null,d,f)}();return d instanceof sh?new sh(d.key,d.B,new sh(a.key,a.B,a.left,d.left,null),new sh(b.key,b.B,d.right,b.right,null),null):new sh(a.key,a.B,a.left,new sh(b.key,b.B,d,b.right,null),null)}return new sh(a.key,a.B,a.left,function(){var d=a.right;return zh.b?zh.b(d,b):zh.call(null,d,b)}(),null)}if(b instanceof sh)return new sh(b.key,b.B,function(){var d=b.left;return zh.b?zh.b(a,d):zh.call(null,a,d)}(),b.right,null);d=function(){var d=
a.right,f=b.left;return zh.b?zh.b(d,f):zh.call(null,d,f)}();return d instanceof sh?new sh(d.key,d.B,new th(a.key,a.B,a.left,d.left,null),new th(b.key,b.B,d.right,b.right,null),null):vh(a.key,a.B,a.left,new th(b.key,b.B,d,b.right,null))},Ah=function Ah(a,b,c,d){if(null!=b){var f=function(){var d=b.key;return a.b?a.b(c,d):a.call(null,c,d)}();if(0===f)return d[0]=b,zh(b.left,b.right);if(0>f)return f=function(){var f=b.left;return Ah.A?Ah.A(a,f,c,d):Ah.call(null,a,f,c,d)}(),null!=f||null!=d[0]?b.left instanceof
th?vh(b.key,b.B,f,b.right):new sh(b.key,b.B,f,b.right,null):null;f=function(){var f=b.right;return Ah.A?Ah.A(a,f,c,d):Ah.call(null,a,f,c,d)}();return null!=f||null!=d[0]?b.right instanceof th?wh(b.key,b.B,b.left,f):new sh(b.key,b.B,b.left,f,null):null}return null},Bh=function Bh(a,b,c,d){var f=b.key,g=a.b?a.b(c,f):a.call(null,c,f);return 0===g?b.replace(f,d,b.left,b.right):0>g?b.replace(f,b.B,function(){var f=b.left;return Bh.A?Bh.A(a,f,c,d):Bh.call(null,a,f,c,d)}(),b.right):b.replace(f,b.B,b.left,
function(){var f=b.right;return Bh.A?Bh.A(a,f,c,d):Bh.call(null,a,f,c,d)}())};function Ch(a,b,c,d,e){this.gb=a;this.Nb=b;this.o=c;this.u=d;this.j=e;this.h=418776847;this.C=8192}h=Ch.prototype;h.forEach=function(a){for(var b=x(this),c=null,d=0,e=0;;)if(e<d){var f=c.W(null,e),g=J(f,0,null);f=J(f,1,null);a.b?a.b(f,g):a.call(null,f,g);e+=1}else if(b=x(b))Td(b)?(c=vc(b),b=wc(b),g=c,d=D(c),c=g):(c=y(b),g=J(c,0,null),f=J(c,1,null),a.b?a.b(f,g):a.call(null,f,g),b=B(b),c=null,d=0),e=0;else return null};
h.get=function(a,b){return this.F(null,a,b)};h.entries=function(){return new Gg(x(x(this)))};h.toString=function(){return Fc(this)};h.keys=function(){return Yc(Lg(this))};h.values=function(){return Yc(Mg(this))};h.equiv=function(a){return this.D(null,a)};function Dh(a,b){for(var c=a.Nb;;)if(null!=c){var d=c.key;d=a.gb.b?a.gb.b(b,d):a.gb.call(null,b,d);if(0===d)return c;c=0>d?c.left:c.right}else return null}h.has=function(a){return Zd(this,a)};h.R=function(a,b){return this.F(null,b,null)};
h.F=function(a,b,c){a=Dh(this,b);return null!=a?a.B:c};h.kc=function(a,b,c){return null!=this.Nb?hd(xh(this.Nb,b,c)):c};h.L=function(){return this.u};h.S=function(){return this.o};h.Cc=function(){return 0<this.o?qh(this.Nb,!1,this.o):null};h.M=function(){var a=this.j;return null!=a?a:this.j=a=cd(this)};h.D=function(a,b){return Eg(this,b)};h.fa=function(){return new Ch(this.gb,null,0,this.u,0)};
h.oa=function(a,b){var c=[null],d=Ah(this.gb,this.Nb,b,c);return null==d?null==qd(c,0)?this:new Ch(this.gb,null,0,this.u,null):new Ch(this.gb,d.yb(),this.o-1,this.u,null)};h.P=function(a,b,c){a=[null];var d=yh(this.gb,this.Nb,b,c,a);return null==d?(a=qd(a,0),C.b(c,a.B)?this:new Ch(this.gb,Bh(this.gb,this.Nb,b,c),this.o,this.u,null)):new Ch(this.gb,d.yb(),this.o+1,this.u,null)};h.Yb=function(a,b){return null!=Dh(this,b)};h.O=function(){return 0<this.o?qh(this.Nb,!0,this.o):null};
h.J=function(a,b){return new Ch(this.gb,this.Nb,this.o,b,this.j)};h.T=function(a,b){if(Sd(b))return this.P(null,xb.b(b,0),xb.b(b,1));for(var c=this,d=x(b);;){if(null==d)return c;var e=y(d);if(Sd(e))c=c.P(null,xb.b(e,0),xb.b(e,1)),d=B(d);else throw Error("conj on a map takes map entries or seqables of map entries");}};
h.call=function(){var a=null;a=function(a,c,d){switch(arguments.length){case 2:return this.R(null,c);case 3:return this.F(null,c,d)}throw Error("Invalid arity: "+(arguments.length-1));};a.b=function(a,c){return this.R(null,c)};a.c=function(a,c,d){return this.F(null,c,d)};return a}();h.apply=function(a,b){return this.call.apply(this,[this].concat(kb(b)))};h.a=function(a){return this.R(null,a)};h.b=function(a,b){return this.F(null,a,b)};var Eh=new Ch(ce,null,0,null,dd);Ch.prototype[hb]=function(){return Yc(this)};
var Fh=function Fh(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return Fh.g(0<c.length?new Uc(c.slice(0),0,null):null)};Fh.g=function(a){a=x(a);for(var b=oc(Pg);;)if(a){var c=B(B(a));b=Ye(b,y(a),yd(a));a=c}else return qc(b)};Fh.H=0;Fh.I=function(a){return Fh.g(x(a))};
function Gh(a){for(var b=[],c=arguments.length,d=0;;)if(d<c)b.push(arguments[d]),d+=1;else break;a:for(b=x(0<b.length?new Uc(b.slice(0),0,null):null),d=Eh;;)if(b)c=B(B(b)),d=Dd.c(d,y(b),yd(b)),b=c;else break a;return d}function Hh(a,b){this.X=a;this.Na=b;this.h=32374988;this.C=0}h=Hh.prototype;h.toString=function(){return Fc(this)};h.equiv=function(a){return this.D(null,a)};
h.indexOf=function(){var a=null;a=function(a,c){switch(arguments.length){case 1:return pd(this,a,0);case 2:return pd(this,a,c)}throw Error("Invalid arity: "+(arguments.length-1));};a.a=function(a){return pd(this,a,0)};a.b=function(a,c){return pd(this,a,c)};return a}();
h.lastIndexOf=function(){function a(a){return rd(this,a,D(this))}var b=null;b=function(b,d){switch(arguments.length){case 1:return a.call(this,b);case 2:return rd(this,b,d)}throw Error("Invalid arity: "+(arguments.length-1));};b.a=a;b.b=function(a,b){return rd(this,a,b)};return b}();h.L=function(){return this.Na};h.ma=function(){var a=(null!=this.X?this.X.h&128||l===this.X.Rc||(this.X.h?0:cb(Cb,this.X)):cb(Cb,this.X))?this.X.ma(null):B(this.X);return null==a?null:new Hh(a,this.Na)};h.M=function(){return ad(this)};
h.D=function(a,b){return ud(this,b)};h.fa=function(){return Wb(Wc,this.Na)};h.ja=function(a,b){return wd(b,this)};h.ka=function(a,b,c){return xd(b,c,this)};h.ia=function(){return this.X.ia(null).lc(null)};h.pa=function(){var a=(null!=this.X?this.X.h&128||l===this.X.Rc||(this.X.h?0:cb(Cb,this.X)):cb(Cb,this.X))?this.X.ma(null):B(this.X);return null!=a?new Hh(a,this.Na):Wc};h.O=function(){return this};h.J=function(a,b){return new Hh(this.X,b)};h.T=function(a,b){return vd(b,this)};Hh.prototype[hb]=function(){return Yc(this)};
function Lg(a){return(a=x(a))?new Hh(a,null):null}function Ih(a,b){this.X=a;this.Na=b;this.h=32374988;this.C=0}h=Ih.prototype;h.toString=function(){return Fc(this)};h.equiv=function(a){return this.D(null,a)};h.indexOf=function(){var a=null;a=function(a,c){switch(arguments.length){case 1:return pd(this,a,0);case 2:return pd(this,a,c)}throw Error("Invalid arity: "+(arguments.length-1));};a.a=function(a){return pd(this,a,0)};a.b=function(a,c){return pd(this,a,c)};return a}();
h.lastIndexOf=function(){function a(a){return rd(this,a,D(this))}var b=null;b=function(b,d){switch(arguments.length){case 1:return a.call(this,b);case 2:return rd(this,b,d)}throw Error("Invalid arity: "+(arguments.length-1));};b.a=a;b.b=function(a,b){return rd(this,a,b)};return b}();h.L=function(){return this.Na};h.ma=function(){var a=(null!=this.X?this.X.h&128||l===this.X.Rc||(this.X.h?0:cb(Cb,this.X)):cb(Cb,this.X))?this.X.ma(null):B(this.X);return null==a?null:new Ih(a,this.Na)};h.M=function(){return ad(this)};
h.D=function(a,b){return ud(this,b)};h.fa=function(){return Wb(Wc,this.Na)};h.ja=function(a,b){return wd(b,this)};h.ka=function(a,b,c){return xd(b,c,this)};h.ia=function(){return this.X.ia(null).mc(null)};h.pa=function(){var a=(null!=this.X?this.X.h&128||l===this.X.Rc||(this.X.h?0:cb(Cb,this.X)):cb(Cb,this.X))?this.X.ma(null):B(this.X);return null!=a?new Ih(a,this.Na):Wc};h.O=function(){return this};h.J=function(a,b){return new Ih(this.X,b)};h.T=function(a,b){return vd(b,this)};Ih.prototype[hb]=function(){return Yc(this)};
function Mg(a){return(a=x(a))?new Ih(a,null):null}var Jh=function Jh(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return Jh.g(0<c.length?new Uc(c.slice(0),0,null):null)};Jh.g=function(a){return n(pf(me,a))?ke(function(a,c){return Ad.b(n(a)?a:jf,c)},a):null};Jh.H=0;Jh.I=function(a){return Jh.g(x(a))};
var Kh=function Kh(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return Kh.g(arguments[0],1<c.length?new Uc(c.slice(1),0,null):null)};Kh.g=function(a,b){return n(pf(me,b))?ke(function(a){return function(b,c){return mb(a,n(b)?b:jf,x(c))}}(function(b,d){var c=y(d),f=yd(d);return Zd(b,c)?Dd.c(b,c,function(){var d=w.b(b,c);return a.b?a.b(d,f):a.call(null,d,f)}()):Dd.c(b,c,f)}),b):null};Kh.H=1;Kh.I=function(a){var b=y(a);a=B(a);return Kh.g(b,a)};
function Lh(a){for(var b=jf,c=x(Mh);;)if(c){var d=y(c),e=w.c(a,d,Nh);b=ff(e,Nh)?Dd.c(b,d,e):b;c=B(c)}else return Wb(b,Kd(a))}function Oh(a){this.hd=a}Oh.prototype.ha=function(){return this.hd.ha()};Oh.prototype.next=function(){if(this.hd.ha())return this.hd.next().La[0];throw Error("No such element");};Oh.prototype.remove=function(){return Error("Unsupported operation")};function V(a,b,c){this.u=a;this.Gb=b;this.j=c;this.h=15077647;this.C=139268}h=V.prototype;h.toString=function(){return Fc(this)};
h.equiv=function(a){return this.D(null,a)};h.keys=function(){return Yc(x(this))};h.entries=function(){return new Hg(x(x(this)))};h.values=function(){return Yc(x(this))};h.has=function(a){return Zd(this,a)};h.forEach=function(a){for(var b=x(this),c=null,d=0,e=0;;)if(e<d){var f=c.W(null,e),g=J(f,0,null);f=J(f,1,null);a.b?a.b(f,g):a.call(null,f,g);e+=1}else if(b=x(b))Td(b)?(c=vc(b),b=wc(b),g=c,d=D(c),c=g):(c=y(b),g=J(c,0,null),f=J(c,1,null),a.b?a.b(f,g):a.call(null,f,g),b=B(b),c=null,d=0),e=0;else return null};
h.R=function(a,b){return this.F(null,b,null)};h.F=function(a,b,c){return Fb(this.Gb,b)?b:c};h.ca=function(){return new Oh(Dc(this.Gb))};h.L=function(){return this.u};h.S=function(){return rb(this.Gb)};h.M=function(){var a=this.j;return null!=a?a:this.j=a=cd(this)};h.D=function(a,b){return Pd(b)&&D(this)===D(b)&&le(function(){return function(a,d){var c=Zd(b,d);return c?c:new fd(!1)}}(this),this.Gb)};h.jc=function(){return new Ph(oc(this.Gb))};h.fa=function(){return Wb(Qh,this.u)};
h.xd=function(a,b){return new V(this.u,Ib(this.Gb,b),null)};h.O=function(){return Lg(this.Gb)};h.J=function(a,b){return new V(b,this.Gb,this.j)};h.T=function(a,b){return new V(this.u,Dd.c(this.Gb,b,null),null)};h.call=function(){var a=null;a=function(a,c,d){switch(arguments.length){case 2:return this.R(null,c);case 3:return this.F(null,c,d)}throw Error("Invalid arity: "+(arguments.length-1));};a.b=function(a,c){return this.R(null,c)};a.c=function(a,c,d){return this.F(null,c,d)};return a}();
h.apply=function(a,b){return this.call.apply(this,[this].concat(kb(b)))};h.a=function(a){return this.R(null,a)};h.b=function(a,b){return this.F(null,a,b)};var Qh=new V(null,jf,dd);function be(a){for(var b=a.length,c=oc(Qh),d=0;;)if(d<b)pc(c,a[d]),d+=1;else break;return qc(c)}V.prototype[hb]=function(){return Yc(this)};function Ph(a){this.Mb=a;this.C=136;this.h=259}h=Ph.prototype;h.ac=function(a,b){this.Mb=rc(this.Mb,b,null);return this};h.Dc=function(){return new V(null,qc(this.Mb),null)};h.S=function(){return D(this.Mb)};
h.R=function(a,b){return this.F(null,b,null)};h.F=function(a,b,c){return Eb.c(this.Mb,b,Vd)===Vd?c:b};h.call=function(){function a(a,b,c){return Eb.c(this.Mb,b,Vd)===Vd?c:b}function b(a,b){return Eb.c(this.Mb,b,Vd)===Vd?null:b}var c=null;c=function(c,e,f){switch(arguments.length){case 2:return b.call(this,0,e);case 3:return a.call(this,0,e,f)}throw Error("Invalid arity: "+(arguments.length-1));};c.b=b;c.c=a;return c}();h.apply=function(a,b){return this.call.apply(this,[this].concat(kb(b)))};
h.a=function(a){return Eb.c(this.Mb,a,Vd)===Vd?null:a};h.b=function(a,b){return Eb.c(this.Mb,a,Vd)===Vd?b:a};function Rh(a){a=x(a);if(null==a)return Qh;if(a instanceof Uc&&0===a.v)return be(a.i);for(var b=oc(Qh);;)if(null!=a){var c=B(a);b=b.ac(null,a.ia(null));a=c}else return qc(b)}function Sh(a){for(var b=H;;)if(B(a))b=Ad.b(b,y(a)),a=B(a);else return x(b)}
function Le(a){if(null!=a&&(a.C&4096||l===a.$d))return a.Ac(null);if("string"===typeof a)return a;throw Error(["Doesn't support name: ",r.a(a)].join(""));}function Th(a,b){for(var c=oc(jf),d=x(a),e=x(b);;)if(d&&e)c=Ye(c,y(d),y(e)),d=B(d),e=B(e);else return qc(c)}
var Uh=function Uh(a){switch(arguments.length){case 2:return Uh.b(arguments[0],arguments[1]);case 3:return Uh.c(arguments[0],arguments[1],arguments[2]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return Uh.g(arguments[0],arguments[1],arguments[2],new Uc(c.slice(3),0,null))}};Uh.b=function(a,b){return b};Uh.c=function(a,b,c){return(a.a?a.a(b):a.call(null,b))>(a.a?a.a(c):a.call(null,c))?b:c};
Uh.g=function(a,b,c,d){return mb(function(b,c){return Uh.c(a,b,c)},Uh.c(a,b,c),d)};Uh.I=function(a){var b=y(a),c=B(a);a=y(c);var d=B(c);c=y(d);d=B(d);return Uh.g(b,a,c,d)};Uh.H=3;function Vh(a,b){return new Me(null,function(){var c=x(b);if(c){var d=y(c);d=a.a?a.a(d):a.call(null,d);c=n(d)?vd(y(c),Vh(a,Vc(c))):null}else c=null;return c},null,null)}function Wh(a,b,c){this.v=a;this.end=b;this.step=c}Wh.prototype.ha=function(){return 0<this.step?this.v<this.end:this.v>this.end};
Wh.prototype.next=function(){var a=this.v;this.v+=this.step;return a};function Xh(a,b,c,d,e){this.u=a;this.start=b;this.end=c;this.step=d;this.j=e;this.h=32375006;this.C=139264}h=Xh.prototype;h.toString=function(){return Fc(this)};h.equiv=function(a){return this.D(null,a)};
h.indexOf=function(){var a=null;a=function(a,c){switch(arguments.length){case 1:return pd(this,a,0);case 2:return pd(this,a,c)}throw Error("Invalid arity: "+(arguments.length-1));};a.a=function(a){return pd(this,a,0)};a.b=function(a,c){return pd(this,a,c)};return a}();
h.lastIndexOf=function(){function a(a){return rd(this,a,D(this))}var b=null;b=function(b,d){switch(arguments.length){case 1:return a.call(this,b);case 2:return rd(this,b,d)}throw Error("Invalid arity: "+(arguments.length-1));};b.a=a;b.b=function(a,b){return rd(this,a,b)};return b}();h.W=function(a,b){if(0<=b&&b<this.S(null))return this.start+b*this.step;if(0<=b&&this.start>this.end&&0===this.step)return this.start;throw Error("Index out of bounds");};
h.ba=function(a,b,c){return 0<=b&&b<this.S(null)?this.start+b*this.step:0<=b&&this.start>this.end&&0===this.step?this.start:c};h.ca=function(){return new Wh(this.start,this.end,this.step)};h.L=function(){return this.u};h.ma=function(){return 0<this.step?this.start+this.step<this.end?new Xh(this.u,this.start+this.step,this.end,this.step,null):null:this.start+this.step>this.end?new Xh(this.u,this.start+this.step,this.end,this.step,null):null};
h.S=function(){return $a(this.O(null))?0:Math.ceil((this.end-this.start)/this.step)};h.M=function(){var a=this.j;return null!=a?a:this.j=a=ad(this)};h.D=function(a,b){return ud(this,b)};h.fa=function(){return Wb(Wc,this.u)};h.ja=function(a,b){return id(this,b)};h.ka=function(a,b,c){for(a=this.start;;)if(0<this.step?a<this.end:a>this.end){c=b.b?b.b(c,a):b.call(null,c,a);if(gd(c))return Tb(c);a+=this.step}else return c};h.ia=function(){return null==this.O(null)?null:this.start};
h.pa=function(){return null!=this.O(null)?new Xh(this.u,this.start+this.step,this.end,this.step,null):Wc};h.O=function(){return 0<this.step?this.start<this.end?this:null:0>this.step?this.start>this.end?this:null:this.start===this.end?null:this};h.J=function(a,b){return new Xh(b,this.start,this.end,this.step,this.j)};h.T=function(a,b){return vd(b,this)};Xh.prototype[hb]=function(){return Yc(this)};function Yh(a){return new Xh(null,0,a,1,null)}
function Zh(a,b){if("number"!==typeof a)throw Error("Assert failed: (number? n)");return new Me(null,function(){var c=x(b);return c?vd(y(c),Zh(a,If(a,c))):null},null,null)}function $h(a,b){return new R(null,2,5,S,[Vh(a,b),Jf(a,b)],null)}function ai(a,b){return new Me(null,function(){var c=x(b);if(c){var d=y(c),e=a.a?a.a(d):a.call(null,d);d=vd(d,Vh(function(b,c){return function(b){return C.b(c,a.a?a.a(b):a.call(null,b))}}(d,e,c,c),B(c)));return vd(d,ai(a,x(If(D(d),c))))}return null},null,null)}
function bi(a){return qc(mb(function(a,c){return Ye(a,c,w.c(a,c,0)+1)},oc(jf),a))}function ci(a,b,c){if(gd(b)){var d=Tb(b);return vb(Wc,d)}return vd(b,new Me(null,function(){var d=x(c);if(d){var f=ci;var g=y(d);g=a.b?a.b(b,g):a.call(null,b,g);d=f(a,g,Vc(d))}else d=null;return d},null,null))}
function di(){var a=Le;return function(){function b(b,c,d){return new R(null,2,5,S,[Ie.c?Ie.c(b,c,d):Ie.call(null,b),a.c?a.c(b,c,d):a.call(null,b,c,d)],null)}function c(b,c){return new R(null,2,5,S,[Ie.b?Ie.b(b,c):Ie.call(null,b),a.b?a.b(b,c):a.call(null,b,c)],null)}function d(b){return new R(null,2,5,S,[Ie.a?Ie.a(b):Ie.call(null,b),a.a?a.a(b):a.call(null,b)],null)}function e(){return new R(null,2,5,S,[Ie.w?Ie.w():Ie.call(null),a.w?a.w():a.call(null)],null)}var f=null,g=function(){function b(a,b,
d,e){var f=null;if(3<arguments.length){f=0;for(var g=Array(arguments.length-3);f<g.length;)g[f]=arguments[f+3],++f;f=new Uc(g,0,null)}return c.call(this,a,b,d,f)}function c(b,c,d,e){return new R(null,2,5,S,[ef(Ie,b,c,d,e),ef(a,b,c,d,e)],null)}b.H=3;b.I=function(a){var b=y(a);a=B(a);var d=y(a);a=B(a);var e=y(a);a=Vc(a);return c(b,d,e,a)};b.g=c;return b}();f=function(a,f,q,t){switch(arguments.length){case 0:return e.call(this);case 1:return d.call(this,a);case 2:return c.call(this,a,f);case 3:return b.call(this,
a,f,q);default:var k=null;if(3<arguments.length){k=0;for(var p=Array(arguments.length-3);k<p.length;)p[k]=arguments[k+3],++k;k=new Uc(p,0,null)}return g.g(a,f,q,k)}throw Error("Invalid arity: "+(arguments.length-1));};f.H=3;f.I=g.I;f.w=e;f.a=d;f.b=c;f.c=b;f.g=g.g;return f}()}function ei(a){a:for(var b=a;;)if(x(b))b=B(b);else break a;return a}
function fi(a,b){if("string"===typeof b){var c=a.exec(b);return C.b(y(c),b)?1===D(c)?y(c):qg(c):null}throw new TypeError("re-matches must match against a string.");}function gi(a,b){if("string"===typeof b){var c=a.exec(b);return null==c?null:1===D(c)?y(c):qg(c)}throw new TypeError("re-find must match against a string.");}function hi(a){if(a instanceof RegExp)return a;var b=gi(/^\(\?([idmsux]*)\)/,a),c=J(b,0,null);b=J(b,1,null);a=ye(a,D(c));return new RegExp(a,n(b)?b:"")}
function ii(a,b,c,d,e,f,g){var k=Ma;Ma=null==Ma?null:Ma-1;try{if(null!=Ma&&0>Ma)return lc(a,"#");lc(a,c);if(0===Wa.a(f))x(g)&&lc(a,function(){var a=ji.a(f);return n(a)?a:"..."}());else{if(x(g)){var p=y(g);b.c?b.c(p,a,f):b.call(null,p,a,f)}for(var q=B(g),t=Wa.a(f)-1;;)if(!q||null!=t&&0===t){x(q)&&0===t&&(lc(a,d),lc(a,function(){var a=ji.a(f);return n(a)?a:"..."}()));break}else{lc(a,d);var v=y(q);c=a;g=f;b.c?b.c(v,c,g):b.call(null,v,c,g);var A=B(q);c=t-1;q=A;t=c}}return lc(a,e)}finally{Ma=k}}
function ki(a,b){for(var c=x(b),d=null,e=0,f=0;;)if(f<e){var g=d.W(null,f);lc(a,g);f+=1}else if(c=x(c))d=c,Td(d)?(c=vc(d),e=wc(d),d=c,g=D(c),c=e,e=g):(g=y(d),lc(a,g),c=B(d),d=null,e=0),f=0;else return null}function li(a){if(null==Ka)throw Error("No *print-fn* fn set for evaluation environment");Ka.a?Ka.a(a):Ka.call(null,a)}var mi={'"':'\\"',"\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
function ni(a){return[r.a('"'),r.a(a.replace(RegExp('[\\\\"\b\f\n\r\t]',"g"),function(a){return mi[a]})),r.a('"')].join("")}function oi(a,b){var c=Xd(w.b(a,Ta));return c?(c=null!=b?b.h&131072||l===b.zc?!0:!1:!1)?null!=Kd(b):c:c}
function pi(a,b,c){if(null==a)return lc(b,"nil");oi(c,a)&&(lc(b,"^"),qi(Kd(a),b,c),lc(b," "));if(a.tb)return a.Bb(a,b,c);if(null!=a&&(a.h&2147483648||l===a.da))return a.N(null,b,c);if(!0===a||!1===a)return lc(b,""+r.a(a));if("number"===typeof a)return lc(b,isNaN(a)?"##NaN":a===Number.POSITIVE_INFINITY?"##Inf":a===Number.NEGATIVE_INFINITY?"##-Inf":""+r.a(a));if(null!=a&&a.constructor===Object)return lc(b,"#js "),ri(Gf.b(function(b){return new R(null,2,5,S,[null!=fi(/[A-Za-z_\*\+\?!\-'][\w\*\+\?!\-']*/,
b)?Ke.a(b):b,a[b]],null)},ra(a)),b,c);if(Ya(a))return ii(b,qi,"#js ["," ","]",c,a);if("string"==typeof a)return n(Ra.a(c))?lc(b,ni(a)):lc(b,a);if("function"==ba(a)){var d=a.name;c=n(function(){var a=null==d;return a?a:/^[\s\xa0]*$/.test(d)}())?"Function":d;return ki(b,E(["#object[",c,"","]"]))}if(a instanceof Date)return c=function(a,b){for(var c=""+r.a(a);;)if(D(c)<b)c=["0",r.a(c)].join("");else return c},ki(b,E(['#inst "',""+r.a(a.getUTCFullYear()),"-",c(a.getUTCMonth()+1,2),"-",c(a.getUTCDate(),
2),"T",c(a.getUTCHours(),2),":",c(a.getUTCMinutes(),2),":",c(a.getUTCSeconds(),2),".",c(a.getUTCMilliseconds(),3),"-",'00:00"']));if(a instanceof RegExp)return ki(b,E(['#"',a.source,'"']));if(n(function(){var b=null==a?null:a.constructor;return null==b?null:b.fb}()))return ki(b,E(["#object[",a.constructor.fb.replace(RegExp("/","g"),"."),"]"]));d=function(){var b=null==a?null:a.constructor;return null==b?null:b.name}();c=n(function(){var a=null==d;return a?a:/^[\s\xa0]*$/.test(d)}())?"Object":d;return null==
a.constructor?ki(b,E(["#object[",c,"]"])):ki(b,E(["#object[",c," ",""+r.a(a),"]"]))}function qi(a,b,c){var d=si.a(c);return n(d)?(c=Dd.c(c,ti,pi),d.c?d.c(a,b,c):d.call(null,a,b,c)):pi(a,b,c)}function ui(a,b){var c=new Ga;a:{var d=new Ec(c);qi(y(a),d,b);for(var e=x(B(a)),f=null,g=0,k=0;;)if(k<g){var p=f.W(null,k);lc(d," ");qi(p,d,b);k+=1}else if(e=x(e))f=e,Td(f)?(e=vc(f),g=wc(f),f=e,p=D(e),e=g,g=p):(p=y(f),lc(d," "),qi(p,d,b),e=B(f),f=null,g=0),k=0;else break a}return c}
function vi(a,b){return Nd(a)?"":""+r.a(ui(a,b))}function wi(){var a=Pa();li("\n");return w.b(a,Qa),null}function xi(a){return vi(a,Pa())}function yi(a){var b=Dd.c(Pa(),Ra,!1);li(vi(a,b));return wi()}function zi(a){li(vi(a,Pa()));wi()}function Ai(a,b,c,d,e){return ii(d,function(a,b,d){var e=Kb(a);c.c?c.c(e,b,d):c.call(null,e,b,d);lc(b," ");a=Lb(a);return c.c?c.c(a,b,d):c.call(null,a,b,d)},[r.a(a),"{"].join(""),", ","}",e,x(b))}
function ri(a,b,c){var d=qi,e=(L(a),null),f=J(e,0,null);e=J(e,1,null);return n(f)?Ai(["#:",r.a(f)].join(""),e,d,b,c):Ai(null,a,d,b,c)}Ff.prototype.da=l;Ff.prototype.N=function(a,b,c){lc(b,"#object [cljs.core.Volatile ");qi(new m(null,1,[Bi,this.state],null),b,c);return lc(b,"]")};Uc.prototype.da=l;Uc.prototype.N=function(a,b,c){return ii(b,qi,"("," ",")",c,this)};Me.prototype.da=l;Me.prototype.N=function(a,b,c){return ii(b,qi,"("," ",")",c,this)};ph.prototype.da=l;
ph.prototype.N=function(a,b,c){return ii(b,qi,"("," ",")",c,this)};gh.prototype.da=l;gh.prototype.N=function(a,b,c){return ii(b,qi,"("," ",")",c,this)};th.prototype.da=l;th.prototype.N=function(a,b,c){return ii(b,qi,"["," ","]",c,this)};Jg.prototype.da=l;Jg.prototype.N=function(a,b,c){return ii(b,qi,"("," ",")",c,this)};og.prototype.da=l;og.prototype.N=function(a,b,c){return ii(b,qi,"("," ",")",c,this)};Ee.prototype.da=l;Ee.prototype.N=function(a,b,c){return ii(b,qi,"("," ",")",c,this)};
td.prototype.da=l;td.prototype.N=function(a,b,c){return ii(b,qi,"("," ",")",c,this)};jh.prototype.da=l;jh.prototype.N=function(a,b,c){return ri(this,b,c)};hh.prototype.da=l;hh.prototype.N=function(a,b,c){return ii(b,qi,"("," ",")",c,this)};sg.prototype.da=l;sg.prototype.N=function(a,b,c){return ii(b,qi,"["," ","]",c,this)};Ch.prototype.da=l;Ch.prototype.N=function(a,b,c){return ri(this,b,c)};V.prototype.da=l;V.prototype.N=function(a,b,c){return ii(b,qi,"#{"," ","}",c,this)};Re.prototype.da=l;
Re.prototype.N=function(a,b,c){return ii(b,qi,"("," ",")",c,this)};Bf.prototype.da=l;Bf.prototype.N=function(a,b,c){lc(b,"#object [cljs.core.Atom ");qi(new m(null,1,[Bi,this.state],null),b,c);return lc(b,"]")};Ih.prototype.da=l;Ih.prototype.N=function(a,b,c){return ii(b,qi,"("," ",")",c,this)};sh.prototype.da=l;sh.prototype.N=function(a,b,c){return ii(b,qi,"["," ","]",c,this)};R.prototype.da=l;R.prototype.N=function(a,b,c){return ii(b,qi,"["," ","]",c,this)};zg.prototype.da=l;
zg.prototype.N=function(a,b,c){return ii(b,qi,"("," ",")",c,this)};Ce.prototype.da=l;Ce.prototype.N=function(a,b){return lc(b,"()")};Ag.prototype.da=l;Ag.prototype.N=function(a,b,c){return ii(b,qi,"#queue ["," ","]",c,x(this))};m.prototype.da=l;m.prototype.N=function(a,b,c){return ri(this,b,c)};Xh.prototype.da=l;Xh.prototype.N=function(a,b,c){return ii(b,qi,"("," ",")",c,this)};Hh.prototype.da=l;Hh.prototype.N=function(a,b,c){return ii(b,qi,"("," ",")",c,this)};Ae.prototype.da=l;
Ae.prototype.N=function(a,b,c){return ii(b,qi,"("," ",")",c,this)};u.prototype.Zb=l;u.prototype.zb=function(a,b){if(b instanceof u)return Rc(this,b);throw Error(["Cannot compare ",r.a(this)," to ",r.a(b)].join(""));};O.prototype.Zb=l;O.prototype.zb=function(a,b){if(b instanceof O)return Fe(this,b);throw Error(["Cannot compare ",r.a(this)," to ",r.a(b)].join(""));};sg.prototype.Zb=l;
sg.prototype.zb=function(a,b){if(Sd(b))return de(this,b);throw Error(["Cannot compare ",r.a(this)," to ",r.a(b)].join(""));};R.prototype.Zb=l;R.prototype.zb=function(a,b){if(Sd(b))return de(this,b);throw Error(["Cannot compare ",r.a(this)," to ",r.a(b)].join(""));};th.prototype.Zb=l;th.prototype.zb=function(a,b){if(Sd(b))return de(this,b);throw Error(["Cannot compare ",r.a(this)," to ",r.a(b)].join(""));};sh.prototype.Zb=l;
sh.prototype.zb=function(a,b){if(Sd(b))return de(this,b);throw Error(["Cannot compare ",r.a(this)," to ",r.a(b)].join(""));};var Ci=null;function Di(a){null==Ci&&(Ci=Cf(0));return Sc.a([r.a(a),r.a(Ef.b(Ci,ed))].join(""))}function Ei(a,b){this.qc=a;this.value=b;this.h=32768;this.C=1}Ei.prototype.yc=function(){n(this.qc)&&(this.value=this.qc.w?this.qc.w():this.qc.call(null),this.qc=null);return this.value};Ei.prototype.fd=function(){return $a(this.qc)};function Fi(a){return a instanceof Ei}
function Gi(a){var b=Bi;return qc(mb(function(a,d){var c=b.a?b.a(d):b.call(null,d);return Ye(a,c,Ad.b(w.c(a,c,H),d))},oc(jf),a))}var Hi=null;function Ii(){null==Hi&&(Hi=Cf(new m(null,3,[Ji,jf,Ki,jf,Li,jf],null)));return Hi}
function Mi(a,b,c){var d=C.b(b,c);if(d)return d;d=Li.a(a);d=d.a?d.a(b):d.call(null,b);if(!(d=Zd(d,c))&&(d=Sd(c)))if(d=Sd(b))if(d=D(c)===D(b)){d=!0;for(var e=0;;)if(d&&e!==D(c))d=Mi(a,b.a?b.a(e):b.call(null,e),c.a?c.a(e):c.call(null,e)),e+=1;else return d}else return d;else return d;else return d}function Ni(a){var b=Tb(Ii());return gf(w.b(Ji.a(b),a))}function Oi(a,b,c,d){Ef.b(a,function(){return Tb(b)});Ef.b(c,function(){return Tb(d)})}
var Pi=function Pi(a,b,c){var e=function(){var b=Tb(c);return b.a?b.a(a):b.call(null,a)}();e=n(n(e)?e.a?e.a(b):e.call(null,b):e)?!0:null;if(n(e))return e;e=function(){for(var e=Ni(b);;)if(0<D(e)){var g=y(e);Pi.c?Pi.c(a,g,c):Pi.call(null,a,g,c);e=Vc(e)}else return null}();if(n(e))return e;e=function(){for(var e=Ni(a);;)if(0<D(e)){var g=y(e);Pi.c?Pi.c(g,b,c):Pi.call(null,g,b,c);e=Vc(e)}else return null}();return n(e)?e:!1};function Qi(a,b,c,d){c=Pi(a,b,c);return n(c)?c:Mi(d,a,b)}
var Ri=function Ri(a,b,c,d,e,f,g,k){var q=mb(function(d,f){var g=J(f,0,null);J(f,1,null);if(Mi(Tb(c),b,g)){var k=(k=null==d)?k:Qi(g,y(d),e,Tb(c));k=n(k)?f:d;if(!n(Qi(y(k),g,e,Tb(c))))throw Error(["Multiple methods in multimethod '",r.a(a),"' match dispatch value: ",r.a(b)," -\x3e ",r.a(g)," and ",r.a(y(k)),", and neither is preferred"].join(""));return k}return d},null,Tb(d)),t=function(){var a;if(a=null==q)a=Tb(d),a=a.a?a.a(k):a.call(null,k);return n(a)?new R(null,2,5,S,[k,a],null):q}();if(n(t)){if(C.b(Tb(g),
Tb(c)))return Ef.A(f,Dd,b,yd(t)),yd(t);Oi(f,d,g,c);return Ri.la?Ri.la(a,b,c,d,e,f,g,k):Ri.call(null,a,b,c,d,e,f,g,k)}return null};function Si(a,b){throw Error(["No method in multimethod '",r.a(a),"' for dispatch value: ",r.a(b)].join(""));}function Ti(a,b,c,d,e,f,g,k){this.name=a;this.m=b;this.qe=c;this.Vc=d;this.Zc=e;this.Se=f;this.Yc=g;this.Lc=k;this.h=4194305;this.C=4352}h=Ti.prototype;
h.call=function(){function a(a,b,c,d,e,f,g,k,p,q,t,v,z,A,F,I,G,M,K,Q,U,T){a=this;var ua=Id(a.m,b,c,d,e,E([f,g,k,p,q,t,v,z,A,F,I,G,M,K,Q,U,T])),ca=this.U(ua);n(ca)||Si(a.name,ua);return Id(ca,b,c,d,e,E([f,g,k,p,q,t,v,z,A,F,I,G,M,K,Q,U,T]))}function b(a,b,c,d,e,f,g,k,p,q,t,v,z,A,F,I,G,M,K,Q,U){a=this;var ua=a.m.Ba?a.m.Ba(b,c,d,e,f,g,k,p,q,t,v,z,A,F,I,G,M,K,Q,U):a.m.call(null,b,c,d,e,f,g,k,p,q,t,v,z,A,F,I,G,M,K,Q,U),ca=this.U(ua);n(ca)||Si(a.name,ua);return ca.Ba?ca.Ba(b,c,d,e,f,g,k,p,q,t,v,z,A,F,I,
G,M,K,Q,U):ca.call(null,b,c,d,e,f,g,k,p,q,t,v,z,A,F,I,G,M,K,Q,U)}function c(a,b,c,d,e,f,g,k,p,q,t,v,z,A,F,I,G,M,K,Q){a=this;var ua=a.m.Aa?a.m.Aa(b,c,d,e,f,g,k,p,q,t,v,z,A,F,I,G,M,K,Q):a.m.call(null,b,c,d,e,f,g,k,p,q,t,v,z,A,F,I,G,M,K,Q),ca=this.U(ua);n(ca)||Si(a.name,ua);return ca.Aa?ca.Aa(b,c,d,e,f,g,k,p,q,t,v,z,A,F,I,G,M,K,Q):ca.call(null,b,c,d,e,f,g,k,p,q,t,v,z,A,F,I,G,M,K,Q)}function d(a,b,c,d,e,f,g,k,p,q,t,v,z,A,F,I,G,M,K){a=this;var ua=a.m.za?a.m.za(b,c,d,e,f,g,k,p,q,t,v,z,A,F,I,G,M,K):a.m.call(null,
b,c,d,e,f,g,k,p,q,t,v,z,A,F,I,G,M,K),ca=this.U(ua);n(ca)||Si(a.name,ua);return ca.za?ca.za(b,c,d,e,f,g,k,p,q,t,v,z,A,F,I,G,M,K):ca.call(null,b,c,d,e,f,g,k,p,q,t,v,z,A,F,I,G,M,K)}function e(a,b,c,d,e,f,g,k,p,q,t,v,z,A,F,I,G,M){a=this;var ua=a.m.ya?a.m.ya(b,c,d,e,f,g,k,p,q,t,v,z,A,F,I,G,M):a.m.call(null,b,c,d,e,f,g,k,p,q,t,v,z,A,F,I,G,M),ca=this.U(ua);n(ca)||Si(a.name,ua);return ca.ya?ca.ya(b,c,d,e,f,g,k,p,q,t,v,z,A,F,I,G,M):ca.call(null,b,c,d,e,f,g,k,p,q,t,v,z,A,F,I,G,M)}function f(a,b,c,d,e,f,g,k,
p,q,t,v,z,A,F,I,G){a=this;var ua=a.m.xa?a.m.xa(b,c,d,e,f,g,k,p,q,t,v,z,A,F,I,G):a.m.call(null,b,c,d,e,f,g,k,p,q,t,v,z,A,F,I,G),M=this.U(ua);n(M)||Si(a.name,ua);return M.xa?M.xa(b,c,d,e,f,g,k,p,q,t,v,z,A,F,I,G):M.call(null,b,c,d,e,f,g,k,p,q,t,v,z,A,F,I,G)}function g(a,b,c,d,e,f,g,k,p,q,t,v,z,A,F,I){a=this;var G=a.m.wa?a.m.wa(b,c,d,e,f,g,k,p,q,t,v,z,A,F,I):a.m.call(null,b,c,d,e,f,g,k,p,q,t,v,z,A,F,I),ua=this.U(G);n(ua)||Si(a.name,G);return ua.wa?ua.wa(b,c,d,e,f,g,k,p,q,t,v,z,A,F,I):ua.call(null,b,c,
d,e,f,g,k,p,q,t,v,z,A,F,I)}function k(a,b,c,d,e,f,g,k,p,q,t,v,z,A,F){a=this;var I=a.m.va?a.m.va(b,c,d,e,f,g,k,p,q,t,v,z,A,F):a.m.call(null,b,c,d,e,f,g,k,p,q,t,v,z,A,F),G=this.U(I);n(G)||Si(a.name,I);return G.va?G.va(b,c,d,e,f,g,k,p,q,t,v,z,A,F):G.call(null,b,c,d,e,f,g,k,p,q,t,v,z,A,F)}function p(a,b,c,d,e,f,g,k,p,q,t,v,z,A){a=this;var F=a.m.ua?a.m.ua(b,c,d,e,f,g,k,p,q,t,v,z,A):a.m.call(null,b,c,d,e,f,g,k,p,q,t,v,z,A),I=this.U(F);n(I)||Si(a.name,F);return I.ua?I.ua(b,c,d,e,f,g,k,p,q,t,v,z,A):I.call(null,
b,c,d,e,f,g,k,p,q,t,v,z,A)}function q(a,b,c,d,e,f,g,k,p,q,t,v,z){a=this;var A=a.m.ta?a.m.ta(b,c,d,e,f,g,k,p,q,t,v,z):a.m.call(null,b,c,d,e,f,g,k,p,q,t,v,z),F=this.U(A);n(F)||Si(a.name,A);return F.ta?F.ta(b,c,d,e,f,g,k,p,q,t,v,z):F.call(null,b,c,d,e,f,g,k,p,q,t,v,z)}function t(a,b,c,d,e,f,g,k,p,q,t,v){a=this;var z=a.m.sa?a.m.sa(b,c,d,e,f,g,k,p,q,t,v):a.m.call(null,b,c,d,e,f,g,k,p,q,t,v),A=this.U(z);n(A)||Si(a.name,z);return A.sa?A.sa(b,c,d,e,f,g,k,p,q,t,v):A.call(null,b,c,d,e,f,g,k,p,q,t,v)}function v(a,
b,c,d,e,f,g,k,p,q,t){a=this;var v=a.m.ra?a.m.ra(b,c,d,e,f,g,k,p,q,t):a.m.call(null,b,c,d,e,f,g,k,p,q,t),z=this.U(v);n(z)||Si(a.name,v);return z.ra?z.ra(b,c,d,e,f,g,k,p,q,t):z.call(null,b,c,d,e,f,g,k,p,q,t)}function A(a,b,c,d,e,f,g,k,p,q){a=this;var t=a.m.Da?a.m.Da(b,c,d,e,f,g,k,p,q):a.m.call(null,b,c,d,e,f,g,k,p,q),v=this.U(t);n(v)||Si(a.name,t);return v.Da?v.Da(b,c,d,e,f,g,k,p,q):v.call(null,b,c,d,e,f,g,k,p,q)}function z(a,b,c,d,e,f,g,k,p){a=this;var q=a.m.la?a.m.la(b,c,d,e,f,g,k,p):a.m.call(null,
b,c,d,e,f,g,k,p),t=this.U(q);n(t)||Si(a.name,q);return t.la?t.la(b,c,d,e,f,g,k,p):t.call(null,b,c,d,e,f,g,k,p)}function G(a,b,c,d,e,f,g,k){a=this;var p=a.m.Ca?a.m.Ca(b,c,d,e,f,g,k):a.m.call(null,b,c,d,e,f,g,k),q=this.U(p);n(q)||Si(a.name,p);return q.Ca?q.Ca(b,c,d,e,f,g,k):q.call(null,b,c,d,e,f,g,k)}function F(a,b,c,d,e,f,g){a=this;var k=a.m.Z?a.m.Z(b,c,d,e,f,g):a.m.call(null,b,c,d,e,f,g),p=this.U(k);n(p)||Si(a.name,k);return p.Z?p.Z(b,c,d,e,f,g):p.call(null,b,c,d,e,f,g)}function I(a,b,c,d,e,f){a=
this;var g=a.m.V?a.m.V(b,c,d,e,f):a.m.call(null,b,c,d,e,f),k=this.U(g);n(k)||Si(a.name,g);return k.V?k.V(b,c,d,e,f):k.call(null,b,c,d,e,f)}function M(a,b,c,d,e){a=this;var f=a.m.A?a.m.A(b,c,d,e):a.m.call(null,b,c,d,e),g=this.U(f);n(g)||Si(a.name,f);return g.A?g.A(b,c,d,e):g.call(null,b,c,d,e)}function Q(a,b,c,d){a=this;var e=a.m.c?a.m.c(b,c,d):a.m.call(null,b,c,d),f=this.U(e);n(f)||Si(a.name,e);return f.c?f.c(b,c,d):f.call(null,b,c,d)}function U(a,b,c){a=this;var d=a.m.b?a.m.b(b,c):a.m.call(null,
b,c),e=this.U(d);n(e)||Si(a.name,d);return e.b?e.b(b,c):e.call(null,b,c)}function ea(a,b){a=this;var c=a.m.a?a.m.a(b):a.m.call(null,b),d=this.U(c);n(d)||Si(a.name,c);return d.a?d.a(b):d.call(null,b)}function T(a){a=this;var b=a.m.w?a.m.w():a.m.call(null),c=this.U(b);n(c)||Si(a.name,b);return c.w?c.w():c.call(null)}var K=null;K=function(K,ca,Ha,fa,Ua,Nb,db,Sa,zb,ab,ub,qb,jb,Ea,Oa,Xb,gc,se,ae,Zc,ah,Vf){switch(arguments.length){case 1:return T.call(this,K);case 2:return ea.call(this,K,ca);case 3:return U.call(this,
K,ca,Ha);case 4:return Q.call(this,K,ca,Ha,fa);case 5:return M.call(this,K,ca,Ha,fa,Ua);case 6:return I.call(this,K,ca,Ha,fa,Ua,Nb);case 7:return F.call(this,K,ca,Ha,fa,Ua,Nb,db);case 8:return G.call(this,K,ca,Ha,fa,Ua,Nb,db,Sa);case 9:return z.call(this,K,ca,Ha,fa,Ua,Nb,db,Sa,zb);case 10:return A.call(this,K,ca,Ha,fa,Ua,Nb,db,Sa,zb,ab);case 11:return v.call(this,K,ca,Ha,fa,Ua,Nb,db,Sa,zb,ab,ub);case 12:return t.call(this,K,ca,Ha,fa,Ua,Nb,db,Sa,zb,ab,ub,qb);case 13:return q.call(this,K,ca,Ha,fa,Ua,
Nb,db,Sa,zb,ab,ub,qb,jb);case 14:return p.call(this,K,ca,Ha,fa,Ua,Nb,db,Sa,zb,ab,ub,qb,jb,Ea);case 15:return k.call(this,K,ca,Ha,fa,Ua,Nb,db,Sa,zb,ab,ub,qb,jb,Ea,Oa);case 16:return g.call(this,K,ca,Ha,fa,Ua,Nb,db,Sa,zb,ab,ub,qb,jb,Ea,Oa,Xb);case 17:return f.call(this,K,ca,Ha,fa,Ua,Nb,db,Sa,zb,ab,ub,qb,jb,Ea,Oa,Xb,gc);case 18:return e.call(this,K,ca,Ha,fa,Ua,Nb,db,Sa,zb,ab,ub,qb,jb,Ea,Oa,Xb,gc,se);case 19:return d.call(this,K,ca,Ha,fa,Ua,Nb,db,Sa,zb,ab,ub,qb,jb,Ea,Oa,Xb,gc,se,ae);case 20:return c.call(this,
K,ca,Ha,fa,Ua,Nb,db,Sa,zb,ab,ub,qb,jb,Ea,Oa,Xb,gc,se,ae,Zc);case 21:return b.call(this,K,ca,Ha,fa,Ua,Nb,db,Sa,zb,ab,ub,qb,jb,Ea,Oa,Xb,gc,se,ae,Zc,ah);case 22:return a.call(this,K,ca,Ha,fa,Ua,Nb,db,Sa,zb,ab,ub,qb,jb,Ea,Oa,Xb,gc,se,ae,Zc,ah,Vf)}throw Error("Invalid arity: "+(arguments.length-1));};K.a=T;K.b=ea;K.c=U;K.A=Q;K.V=M;K.Z=I;K.Ca=F;K.la=G;K.Da=z;K.ra=A;K.sa=v;K.ta=t;K.ua=q;K.va=p;K.wa=k;K.xa=g;K.ya=f;K.za=e;K.Aa=d;K.Ba=c;K.ed=b;K.Xd=a;return K}();
h.apply=function(a,b){return this.call.apply(this,[this].concat(kb(b)))};h.w=function(){var a=this.m.w?this.m.w():this.m.call(null),b=this.U(a);n(b)||Si(this.name,a);return b.w?b.w():b.call(null)};h.a=function(a){var b=this.m.a?this.m.a(a):this.m.call(null,a),c=this.U(b);n(c)||Si(this.name,b);return c.a?c.a(a):c.call(null,a)};h.b=function(a,b){var c=this.m.b?this.m.b(a,b):this.m.call(null,a,b),d=this.U(c);n(d)||Si(this.name,c);return d.b?d.b(a,b):d.call(null,a,b)};
h.c=function(a,b,c){var d=this.m.c?this.m.c(a,b,c):this.m.call(null,a,b,c),e=this.U(d);n(e)||Si(this.name,d);return e.c?e.c(a,b,c):e.call(null,a,b,c)};h.A=function(a,b,c,d){var e=this.m.A?this.m.A(a,b,c,d):this.m.call(null,a,b,c,d),f=this.U(e);n(f)||Si(this.name,e);return f.A?f.A(a,b,c,d):f.call(null,a,b,c,d)};h.V=function(a,b,c,d,e){var f=this.m.V?this.m.V(a,b,c,d,e):this.m.call(null,a,b,c,d,e),g=this.U(f);n(g)||Si(this.name,f);return g.V?g.V(a,b,c,d,e):g.call(null,a,b,c,d,e)};
h.Z=function(a,b,c,d,e,f){var g=this.m.Z?this.m.Z(a,b,c,d,e,f):this.m.call(null,a,b,c,d,e,f),k=this.U(g);n(k)||Si(this.name,g);return k.Z?k.Z(a,b,c,d,e,f):k.call(null,a,b,c,d,e,f)};h.Ca=function(a,b,c,d,e,f,g){var k=this.m.Ca?this.m.Ca(a,b,c,d,e,f,g):this.m.call(null,a,b,c,d,e,f,g),p=this.U(k);n(p)||Si(this.name,k);return p.Ca?p.Ca(a,b,c,d,e,f,g):p.call(null,a,b,c,d,e,f,g)};
h.la=function(a,b,c,d,e,f,g,k){var p=this.m.la?this.m.la(a,b,c,d,e,f,g,k):this.m.call(null,a,b,c,d,e,f,g,k),q=this.U(p);n(q)||Si(this.name,p);return q.la?q.la(a,b,c,d,e,f,g,k):q.call(null,a,b,c,d,e,f,g,k)};h.Da=function(a,b,c,d,e,f,g,k,p){var q=this.m.Da?this.m.Da(a,b,c,d,e,f,g,k,p):this.m.call(null,a,b,c,d,e,f,g,k,p),t=this.U(q);n(t)||Si(this.name,q);return t.Da?t.Da(a,b,c,d,e,f,g,k,p):t.call(null,a,b,c,d,e,f,g,k,p)};
h.ra=function(a,b,c,d,e,f,g,k,p,q){var t=this.m.ra?this.m.ra(a,b,c,d,e,f,g,k,p,q):this.m.call(null,a,b,c,d,e,f,g,k,p,q),v=this.U(t);n(v)||Si(this.name,t);return v.ra?v.ra(a,b,c,d,e,f,g,k,p,q):v.call(null,a,b,c,d,e,f,g,k,p,q)};h.sa=function(a,b,c,d,e,f,g,k,p,q,t){var v=this.m.sa?this.m.sa(a,b,c,d,e,f,g,k,p,q,t):this.m.call(null,a,b,c,d,e,f,g,k,p,q,t),A=this.U(v);n(A)||Si(this.name,v);return A.sa?A.sa(a,b,c,d,e,f,g,k,p,q,t):A.call(null,a,b,c,d,e,f,g,k,p,q,t)};
h.ta=function(a,b,c,d,e,f,g,k,p,q,t,v){var A=this.m.ta?this.m.ta(a,b,c,d,e,f,g,k,p,q,t,v):this.m.call(null,a,b,c,d,e,f,g,k,p,q,t,v),z=this.U(A);n(z)||Si(this.name,A);return z.ta?z.ta(a,b,c,d,e,f,g,k,p,q,t,v):z.call(null,a,b,c,d,e,f,g,k,p,q,t,v)};h.ua=function(a,b,c,d,e,f,g,k,p,q,t,v,A){var z=this.m.ua?this.m.ua(a,b,c,d,e,f,g,k,p,q,t,v,A):this.m.call(null,a,b,c,d,e,f,g,k,p,q,t,v,A),G=this.U(z);n(G)||Si(this.name,z);return G.ua?G.ua(a,b,c,d,e,f,g,k,p,q,t,v,A):G.call(null,a,b,c,d,e,f,g,k,p,q,t,v,A)};
h.va=function(a,b,c,d,e,f,g,k,p,q,t,v,A,z){var G=this.m.va?this.m.va(a,b,c,d,e,f,g,k,p,q,t,v,A,z):this.m.call(null,a,b,c,d,e,f,g,k,p,q,t,v,A,z),F=this.U(G);n(F)||Si(this.name,G);return F.va?F.va(a,b,c,d,e,f,g,k,p,q,t,v,A,z):F.call(null,a,b,c,d,e,f,g,k,p,q,t,v,A,z)};
h.wa=function(a,b,c,d,e,f,g,k,p,q,t,v,A,z,G){var F=this.m.wa?this.m.wa(a,b,c,d,e,f,g,k,p,q,t,v,A,z,G):this.m.call(null,a,b,c,d,e,f,g,k,p,q,t,v,A,z,G),I=this.U(F);n(I)||Si(this.name,F);return I.wa?I.wa(a,b,c,d,e,f,g,k,p,q,t,v,A,z,G):I.call(null,a,b,c,d,e,f,g,k,p,q,t,v,A,z,G)};
h.xa=function(a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F){var I=this.m.xa?this.m.xa(a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F):this.m.call(null,a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F),M=this.U(I);n(M)||Si(this.name,I);return M.xa?M.xa(a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F):M.call(null,a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F)};
h.ya=function(a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I){var M=this.m.ya?this.m.ya(a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I):this.m.call(null,a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I),Q=this.U(M);n(Q)||Si(this.name,M);return Q.ya?Q.ya(a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I):Q.call(null,a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I)};
h.za=function(a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M){var Q=this.m.za?this.m.za(a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M):this.m.call(null,a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M),U=this.U(Q);n(U)||Si(this.name,Q);return U.za?U.za(a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M):U.call(null,a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M)};
h.Aa=function(a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M,Q){var U=this.m.Aa?this.m.Aa(a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M,Q):this.m.call(null,a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M,Q),ea=this.U(U);n(ea)||Si(this.name,U);return ea.Aa?ea.Aa(a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M,Q):ea.call(null,a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M,Q)};
h.Ba=function(a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M,Q,U){var ea=this.m.Ba?this.m.Ba(a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M,Q,U):this.m.call(null,a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M,Q,U),T=this.U(ea);n(T)||Si(this.name,ea);return T.Ba?T.Ba(a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M,Q,U):T.call(null,a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M,Q,U)};
h.ed=function(a,b,c,d,e,f,g,k,p,q,t,v,A,z,G,F,I,M,Q,U,ea){var T=Id(this.m,a,b,c,d,E([e,f,g,k,p,q,t,v,A,z,G,F,I,M,Q,U,ea])),K=this.U(T);n(K)||Si(this.name,T);return Id(K,a,b,c,d,E([e,f,g,k,p,q,t,v,A,z,G,F,I,M,Q,U,ea]))};function Ui(a,b){var c=Vi;Ef.A(c.Zc,Dd,a,b);Oi(c.Yc,c.Zc,c.Lc,c.Vc)}h.U=function(a){C.b(Tb(this.Lc),Tb(this.Vc))||Oi(this.Yc,this.Zc,this.Lc,this.Vc);var b=Tb(this.Yc);b=b.a?b.a(a):b.call(null,a);return n(b)?b:Ri(this.name,a,this.Vc,this.Zc,this.Se,this.Yc,this.Lc,this.qe)};h.Ac=function(){return xc(this.name)};
h.Bc=function(){return yc(this.name)};h.M=function(){return this[da]||(this[da]=++ha)};function Wi(a,b){this.hc=a;this.j=b;this.h=2153775104;this.C=2048}h=Wi.prototype;h.toString=function(){return this.hc};h.equiv=function(a){return this.D(null,a)};h.D=function(a,b){return b instanceof Wi&&this.hc===b.hc};h.N=function(a,b){return lc(b,['#uuid "',r.a(this.hc),'"'].join(""))};h.M=function(){null==this.j&&(this.j=Oc(this.hc));return this.j};h.zb=function(a,b){return pa(this.hc,b.hc)};
function Xi(a){if("string"!==typeof a)throw Error("Assert failed: (string? s)");return new Wi(a.toLowerCase(),null)}
function Yi(){function a(){return Math.floor(16*Math.random()).toString(16)}var b=(8|3&Math.floor(16*Math.random())).toString(16);return Xi([r.a(a()),r.a(a()),r.a(a()),r.a(a()),r.a(a()),r.a(a()),r.a(a()),r.a(a()),"-",r.a(a()),r.a(a()),r.a(a()),r.a(a()),"-4",r.a(a()),r.a(a()),r.a(a()),"-",r.a(b),r.a(a()),r.a(a()),r.a(a()),"-",r.a(a()),r.a(a()),r.a(a()),r.a(a()),r.a(a()),r.a(a()),r.a(a()),r.a(a()),r.a(a()),r.a(a()),r.a(a()),r.a(a())].join(""))}
function Zi(a,b,c){var d=Error(a);this.message=a;this.data=b;this.rd=c;this.name=d.name;this.description=d.description;this.Le=d.Le;this.fileName=d.fileName;this.lineNumber=d.lineNumber;this.columnNumber=d.columnNumber;this.stack=d.stack;return this}Zi.prototype.__proto__=Error.prototype;Zi.prototype.da=l;Zi.prototype.N=function(a,b,c){lc(b,"#error {:message ");qi(this.message,b,c);n(this.data)&&(lc(b,", :data "),qi(this.data,b,c));n(this.rd)&&(lc(b,", :cause "),qi(this.rd,b,c));return lc(b,"}")};
Zi.prototype.toString=function(){return Fc(this)};function $i(a,b){return aj(a,b,null)}function aj(a,b,c){return new Zi(a,b,c)}function bj(a,b){this.tag=a;this.form=b;this.h=2153775360;this.C=0}h=bj.prototype;h.toString=function(){return Fc(this)};h.D=function(a,b){return b instanceof bj&&C.b(this.tag,b.tag)&&C.b(this.form,b.form)};h.M=function(){return 31*Oc(this.tag)+Oc(this.form)};h.R=function(a,b){return this.F(null,b,null)};
h.F=function(a,b,c){switch(b instanceof O?b.$:null){case "tag":return this.tag;case "form":return this.form;default:return c}};h.N=function(a,b,c){lc(b,["#",r.a(this.tag)," "].join(""));return qi(this.form,b,c)};
var cj="arguments abstract await boolean break byte case catch char class const continue debugger default delete do double else enum export extends final finally float for function goto if implements import in instanceof int interface let long native new package private protected public return short static super switch synchronized this throw throws transient try typeof var void volatile while with yield methods null constructor".split(" "),dj=null;
function ej(a){null==dj&&(dj=mb(function(a,c){a[c]=!0;return a},{},cj));return dj.hasOwnProperty(a)}function fj(a,b){this.name=b;this.h=6291456;this.C=0}fj.prototype.getName=function(){return this.name};fj.prototype.toString=function(){return""+r.a(this.name)};fj.prototype.D=function(a,b){return b instanceof fj?C.b(this.name,b.name):!1};fj.prototype.M=function(){return Oc(this.name)};var gj=null;
function hj(a){null==gj&&(gj=Cf(jf));var b=w.b(Tb(gj),a);if(null!=b)return b;b=""+r.a(a);var c=""+r.a(b);for(var d=new Ga,e=0;;)if(e<c.length){var f=c.charAt(e),g=sa(ib,f);null!=g?d.append(g):d.append(f);e+=1}else break;c=d.toString();c=".."===c?"_DOT__DOT_":n(ej(c))?[r.a(c),"$"].join(""):c;a:for(b=(b instanceof u?Sc.a(c):c).split("."),c=aa;;){if(null==c){b=null;break a}if(null==b){b=c;break a}d=y(b);c=sa(c,d);b=B(b)}if(null==b)return null;b=new fj(0,a);Ef.A(gj,Dd,a,b);return b};var ij=new O("alt","comment","alt/comment",532371456),jj=new u(null,"form","form",16469056,null),kj=new O(null,"zprint","zprint",1501225152),lj=new u(null,"max-count","max-count",-1115250464,null),mj=new O(null,"in-code?","in-code?",194866464),nj=new u("cljs.spec.alpha","*","cljs.spec.alpha/*",-1238084288,null),oj=new u(null,"\x26","\x26",-2144855648,null),pj=new O("zprint.spec","user-fn","zprint.spec/user-fn",243799488),qj=new u(null,"uuid","uuid",-504564192,null),rj=new O(null,"path","path",-188191168),
sj=new O(null,"comment-wrap","comment-wrap",720664128),tj=new O("zprint.spec","elide","zprint.spec/elide",-1347145120),uj=new O(null,"features","features",-1146962336),vj=new O("zprint.spec","force-nl?","zprint.spec/force-nl?",-1319581088),wj=new O(null,"ppath","ppath",-1758182784),xj=new O("zprint.spec","pair-fn","zprint.spec/pair-fn",-413440320),yj=new O(null,"req-un","req-un",1074571008),zj=new O(null,"opt-un","opt-un",883442496),Aj=new O(null,"old?","old?",-1129887872),Bj=new O("zprint.spec",
"hash-paren","zprint.spec/hash-paren",21716864),Cj=new O(null,"ex-kind","ex-kind",1581199296),Dj=new O("zprint.spec","tab","zprint.spec/tab",-380251039),Ej=new O(null,"zloc?","zloc?",-1457193855),Fj=new O("zprint.spec","object?","zprint.spec/object?",-1219657567),Gj=new O(null,"bold","bold",-116809535),Hj=new O(null,"flow?","flow?",96929057),Ij=new O(null,"sort-in-code?","sort-in-code?",111878497),Jj=new u(null,"defrecord*","defrecord*",-1936366207,null),Kj=new O(null,"nl-separator?","nl-separator?",
-758068767),Lj=new u(null,"unc","unc",-465250751,null),Mj=new O("zprint.spec","size","zprint.spec/size",1148061377),Nj=new O(null,"back-magenta","back-magenta",1900361441),Oj=new O(null,"suffix","suffix",367373057),Pj=new O(null,"reader-error","reader-error",1610253121),Qj=new O("zprint.spec","respect-nl?","zprint.spec/respect-nl?",429656929),Rj=new O(null,"hang-size","hang-size",-347944063),Sj=new u("cljs.spec.alpha","+","cljs.spec.alpha/+",2101263265,null),Tj=new O("zprint.spec","lines","zprint.spec/lines",
-583737439),Uj=new u(null,"try","try",-1273693247,null),Vj=new O(null,"p2","p2",905500641),Wj=new O("zprint.spec","hang-diff","zprint.spec/hang-diff",-594733054),Xj=new O(null,"gt3-force-nl","gt3-force-nl",-1297517534),Yj=new O("zprint.spec","dbg-print?","zprint.spec/dbg-print?",-751425438),Zj=new O(null,"explain","explain",484226146),ak=new O(null,"ret","ret",-468222814),bk=new O("cljs.spec.alpha","unknown","cljs.spec.alpha/unknown",651034818),ck=new O("zprint.spec","key-color-value","zprint.spec/key-color-value",
91493570),dk=new u("cljs.core","sequential?","cljs.core/sequential?",1777854658,null),ek=new O(null,"dbg","dbg",202767554),fk=new O("zprint.spec","file?","zprint.spec/file?",1699556578),gk=new O("cljs.spec.alpha","value","cljs.spec.alpha/value",1974786274),hk=new O(null,"indent-arg","indent-arg",58691874),ik=new O(null,"gfn","gfn",791517474),jk=new O(null,"format","format",-1306924766),kk=new O("cljs.spec.alpha","name","cljs.spec.alpha/name",205233570),lk=new u("zprint.smacros","only-keys","zprint.smacros/only-keys",
182691234,null),mk=new O("zip","branch?","zip/branch?",-998880862),nk=new O(null,"children","children",-940561982),ok=new O(null,"newlines","newlines",-1185451518),pk=new O("zprint.spec","count?","zprint.spec/count?",-553253342),qk=new O(null,"arg2-extend","arg2-extend",1554629186),rk=new O("zprint.spec","fn-name","zprint.spec/fn-name",-811735454),sk=new O(null,"arg2-pair","arg2-pair",-1268132126),tk=new u("cljs.core","keyword?","cljs.core/keyword?",713156450,null),uk=new O(null,"r","r",-471384190),
vk=new O(null,"remove","remove",-131428414),wk=new u("clojure.core","list","clojure.core/list",-1119203325,null),xk=new O(null,"pred-exprs","pred-exprs",1792271395),yk=new O("zprint.spec","agent","zprint.spec/agent",-658307005),zk=new O(null,"key-depth-color","key-depth-color",1448522819),Ak=new O(null,"wrap-coll?","wrap-coll?",908181571),Bk=new O(null,"into","into",-150836029),Ck=new O("zip","children","zip/children",-940194589),Dk=new O(null,"constant-pair?","constant-pair?",-1009181437),Ek=new O(null,
"keys-pred","keys-pred",858984739),Fk=new O(null,"end-row","end-row",-545103581),W=new O(null,"indent","indent",-148200125),Gk=new O(null,"max-length","max-length",-254826109),Hk=new u(null,"vector?","vector?",-61367869,null),Ik=new O("zprint.spec","parse-string?","zprint.spec/parse-string?",1628022211),Jk=new O(null,"gen-max","gen-max",-793680445),Kk=new O("zprint.spec","options","zprint.spec/options",6458947),Lk=new O("zprint.spec","syntax-quote-paren","zprint.spec/syntax-quote-paren",863213123),
Mk=new O(null,"tuning","tuning",-48660925),Nk=new O(null,"comma?","comma?",1532168963),Ok=new O(null,"blink","blink",-271985917),Pk=new O("zprint.spec","key-value","zprint.spec/key-value",-296448157),Qk=new O("zprint.spec","deref","zprint.spec/deref",-238915645),Rk=new O(null,"record-type?","record-type?",-1195765660),Sk=new u("clojure.core","constantly","clojure.core/constantly",1026935908,null),Tk=new O(null,"fn","fn",-1175266204),Uk=new u("cljs.spec.alpha","alt","cljs.spec.alpha/alt",-2130750332,
null),Vk=new O("zprint.spec","set","zprint.spec/set",-359223132),Wk=new O("zprint.spec","hang?","zprint.spec/hang?",-1597597500),Xk=new O(null,"justify?","justify?",294994148),Yk=new O("zprint.spec","version","zprint.spec/version",82497796),Zk=new O(null,"fn-force-nl","fn-force-nl",1501458692),$k=new O("zprint.spec","fn-map","zprint.spec/fn-map",1478967716),al=new O(null,"namespaced-map","namespaced-map",1235665380),bl=new O(null,"rep+","rep+",-281382396),cl=new O(null,"max-hang-depth","max-hang-depth",
-915232220),Ta=new O(null,"meta","meta",1499536964),dl=new O(null,"dbg-hang","dbg-hang",-1928862076),el=new u("cljs.core","\x3d","cljs.core/\x3d",-1891498332,null),fl=new O(null,"arg1-body","arg1-body",-1677449564),gl=new O(null,"multi-line","multi-line",240640676),hl=new O(null,"unquote-splicing","unquote-splicing",1295267556),il=new O(null,"future","future",1877842724),jl=new O("zprint.spec","hang-flow-limit","zprint.spec/hang-flow-limit",329070404),kl=new O(null,"opt-keys","opt-keys",1262688261),
ll=new u(null,"keys-\x3especnames","keys-\x3especnames",1791294693,null),ml=new O(null,"justify-tuning","justify-tuning",-958931675),Va=new O(null,"dup","dup",556298533),nl=new O(null,"zprint-not-found","zprint-not-found",-198220411),ol=new O("cljs.spec.alpha","rep","cljs.spec.alpha/rep",1483217317),pl=new O(null,"pred","pred",1927423397),ql=new O(null,"pair-nl","pair-nl",-252106299),rl=new O(null,"back-green","back-green",1691074021),sl=new O(null,"arg2","arg2",1729550917),tl=new O(null,"whitespace",
"whitespace",-1340035483),ul=new u("s","or","s/or",1876282981,null),vl=new O(null,"element","element",1974019749),wl=new O(null,"user-fn-map","user-fn-map",-908243227),zl=new O("zprint.spec","atom","zprint.spec/atom",-288954587),Al=new u("cljs.core","array-map","cljs.core/array-map",-1519210683,null),Bl=new O(null,"splice","splice",449588165),Cl=new u(null,"check?","check?",409539557,null),Dl=new u(null,"forms","forms",-608443419,null),El=new O("zprint.spec","sort?","zprint.spec/sort?",-1600462842),
Fl=new O(null,"hash-paren","hash-paren",-1158425562),Gl=new O(null,"white","white",-483998618),Hl=new u(null,"opt","opt",845825158,null),Il=new O("cljs.spec.alpha","accept","cljs.spec.alpha/accept",370988198),Jl=new O(null,"community","community",1600340198),Kl=new O(null,"reader-exception","reader-exception",-1938323098),Ll=new O(null,"pair-fn","pair-fn",-360146586),Ml=new O(null,"extend","extend",1836484006),Nl=new O(null,"else","else",-1508377146),Ol=new O(null,"force-nl","force-nl",-755040826),
Pl=new u(null,"eval","eval",536963622,null),Ql=new O("zprint.spec","max-hang-count","zprint.spec/max-hang-count",546112070),Rl=new O(null,"number","number",1570378438),Sl=new O(null,"extend-nl","extend-nl",-757494042),Tl=new O("alt","uneval","alt/uneval",1932003078),Ul=new O("zprint.spec","fn-map-value","zprint.spec/fn-map-value",692642598),Vl=new O("zprint.spec","parallel?","zprint.spec/parallel?",468176710),Wl=new O(null,"zipper","zipper",1500694438),Xl=new O(null,"ks","ks",1900203942),Yl=new O(null,
"arg1-extend","arg1-extend",-157225050),Zl=new O("zprint.spec","paren","zprint.spec/paren",-66471994),$l=new O(null,"reader-macro","reader-macro",750056422),am=new u("cljs.core","count","cljs.core/count",-921270233,null),bm=new u(null,"sequential?","sequential?",1102351463,null),cm=new O(null,"unknown","unknown",-935977881),dm=new u(null,"ns*","ns*",1840949383,null),em=new O(null,"back-blue","back-blue",-548906873),fm=new O("zprint.spec","output","zprint.spec/output",-1297860441),gm=new u("cljs.core",
"hash-map","cljs.core/hash-map",303385767,null),hm=new O(null,"promise","promise",1767129287),im=new O("zprint.spec","max-hang-dept","zprint.spec/max-hang-dept",560086279),jm=new u(null,"req-un","req-un",-1579864761,null),km=new O("zprint.spec","do-in-hang?","zprint.spec/do-in-hang?",-1145019065),lm=new u(null,"opt-un","opt-un",-1770993273,null),mm=new O("zprint.spec","additional-libraries?","zprint.spec/additional-libraries?",-57777721),nm=new O(null,"arg1-pair","arg1-pair",-38672953),om=new u("cljs.spec.alpha",
"coll-of","cljs.spec.alpha/coll-of",1019430407,null),pm=new O(null,"hang-expand","hang-expand",1086807559),qm=new u("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),rm=new u("cljs.core","apply","cljs.core/apply",1757277831,null),sm=new O(null,"not-specified","not-specified",1542080231),tm=new O(null,"_","_",1453416199),um=new O("cljs.spec.alpha","kind-form","cljs.spec.alpha/kind-form",-1047104697),vm=new O(null,"yellow","yellow",-881035449),wm=new u(null,"finally","finally",-1065347064,
null),xm=new O(null,"brace","brace",-1705077624),ym=new O(null,"maybe","maybe",-314397560),zm=new O(null,"unquote","unquote",1649741032),Am=new O(null,"default","default",-1987822328),Bm=new O(null,"spaces?","spaces?",1967773960),Cm=new O(null,"pair","pair",-447516312),Dm=new O(null,"via","via",-1904457336),Em=new O("zprint.spec","hex?","zprint.spec/hex?",833123752),Fm=new O(null,"flow","flow",590489032),Gm=new O("zprint.spec","hang-adjust","zprint.spec/hang-adjust",-690072120),Hm=new O(null,"sequential",
"sequential",-1082983960),Im=new O("zprint.spec","drop?","zprint.spec/drop?",-1775310264),Jm=new u(null,"loop*","loop*",615029416,null),Km=new O(null,"back-yellow","back-yellow",432707272),Lm=new O(null,"noarg1","noarg1",2031519464),Mm=new O(null,"noarg1-body","noarg1-body",774553320),Om=new O(null,"ns","ns",441598760),Pm=new O(null,"pair-hang?","pair-hang?",-492564664),Qm=new O(null,"symbol","symbol",-1038572696),Rm=new O(null,"support","support",1392531368),Sm=new O("zprint.spec","comma?","zprint.spec/comma?",
1356873801),Tm=new O(null,"key-value-color","key-value-color",676042889),Um=new O("zprint.spec","quote","zprint.spec/quote",126508169),Vm=new O(null,"constant-pair-min","constant-pair-min",1245759721),Wm=new u(null,"NaN","NaN",666918153,null),Xm=new O("zprint.spec","justify-hang","zprint.spec/justify-hang",1191349545),Ym=new O(null,"m","m",1632677161),Zm=new O(null,"key-value","key-value",-34906839),$m=new u("cljs.core","string?","cljs.core/string?",-2072921719,null),an=new O(null,"sexpr","sexpr",
-783344087),bn=new O(null,"configured?","configured?",642178633),cn=new O(null,"in-hang?","in-hang?",-1065695639),dn=new O(null,"constant","constant",-379609303),en=new O(null,"req-specs","req-specs",553962313),fn=new u("cljs.spec.alpha","or","cljs.spec.alpha/or",-831679639,null),gn=new u(null,"gfn","gfn",-1862918295,null),hn=new O(null,"dbg-ge","dbg-ge",257927017),jn=new O(null,"value","value",305978217),kn=new O("cljs.spec.alpha","gfn","cljs.spec.alpha/gfn",-593120375),ln=new O(null,"keyword-respect-nl",
"keyword-respect-nl",1810746249),mn=new O("zprint.spec","indent","zprint.spec/indent",-241700983),nn=new O(null,"green","green",-945526839),on=new O("zprint.spec","list","zprint.spec/list",869170121),pn=new u(null,"gen-max","gen-max",846851082,null),qn=new O(null,"user-fn","user-fn",223976490),rn=new O(null,"expand?","expand?",-1744295862),sn=new O(null,"back-purple","back-purple",-1009092470),tn=new O(null,"rightcnt","rightcnt",-45750070),un=new O("zprint.spec","key-color","zprint.spec/key-color",
-318959350),vn=new O("zprint.spec","format-value","zprint.spec/format-value",923532650),wn=new O(null,"file","file",-1269645878),xn=new O(null,"explain-justified","explain-justified",371413450),yn=new O(null,"cyan","cyan",1118839274),zn=new u("cljs.core","concat","cljs.core/concat",-1133584918,null),An=new u(null,"v","v",1661996586,null),Bn=new u(null,"map?","map?",-1780568534,null),Cn=new O("cljs.spec.alpha","spec","cljs.spec.alpha/spec",1947137578),En=new O("zprint.spec","hang-flow","zprint.spec/hang-flow",
-13173206),Fn=new O(null,"dbg-indent","dbg-indent",1534856778),Gn=new u(null,"pred-exprs","pred-exprs",-862164374,null),Hn=new O(null,"conform-keys","conform-keys",-1800041814),In=new O("zprint.spec","fn","zprint.spec/fn",-1149162838),Jn=new O(null,"force-nl?","force-nl?",-1299761462),Kn=new u(null,"js","js",-886355190,null),Ln=new O(null,"readers","readers",-2118263030),Mn=new u(null,"keys-pred","keys-pred",-1795451030,null),Nn=new O(null,"end-column","end-column",1425389514),On=new O(null,"drop",
"drop",364481611),Pn=new O("zprint.spec","map","zprint.spec/map",642753675),Qn=new O(null,"width","width",-384071477),Rn=new O(null,"gt2-force-nl","gt2-force-nl",-1746243317),Sn=new O(null,"respect-nl?","respect-nl?",604814635),Tn=new u(null,"unquote-splicing","unquote-splicing",-1359168213,null),Un=new O(null,"lines","lines",-700165781),Vn=new u(null,"cpred?","cpred?",35589515,null),Wn=new O("zprint.spec","nil","zprint.spec/nil",4288971),Xn=new O(null,"uneval","uneval",1932037707),Yn=new u(null,
"argm","argm",-181546357,null),Zn=new O("zprint.spec","constant-seq","zprint.spec/constant-seq",-565122325),$n=new O("zprint.spec","comment","zprint.spec/comment",625585995),ao=new O("zprint.spec","keep-or-drop","zprint.spec/keep-or-drop",1301199884),bo=new O(null,"fn-name","fn-name",-766594004),co=new O("zprint.spec","wrap?","zprint.spec/wrap?",-1718136724),eo=new O(null,"paths","paths",-1807389588),fo=new O(null,"key-ignore-silent","key-ignore-silent",-1720115060),go=new O(null,"read-cond","read-cond",
1056899244),Bi=new O(null,"val","val",128701612),ho=new O("cljs.spec.alpha","op","cljs.spec.alpha/op",-1269055252),io=new u("cljs.spec.alpha","nilable","cljs.spec.alpha/nilable",1628308748,null),jo=new u(null,"string?","string?",-1129175764,null),ko=new O(null,"key-order","key-order",-356936372),lo=new u(null,"inst","inst",-2008473268,null),mo=new O(null,"color-map","color-map",-207789684),no=new O(null,"type","type",1174270348),oo=new u(null,"opt-keys","opt-keys",-1391747508,null),po=new O("cljs.spec.alpha",
"v","cljs.spec.alpha/v",552625740),qo=new O(null,"arg1-pair-body","arg1-pair-body",541801100),ro=new O("zprint.spec","hang-type-flow","zprint.spec/hang-type-flow",-1389571380),so=new O("zprint.spec","none","zprint.spec/none",1512625900),to=new O("zprint.spec","auto-width?","zprint.spec/auto-width?",134191916),uo=new O(null,"color?","color?",-1891974356),vo=new u("cljs.spec.alpha","tuple","cljs.spec.alpha/tuple",-415901908,null),wo=new O("zprint.spec","format","zprint.spec/format",-1280765076),xo=
new u(null,"do","do",1686842252,null),yo=new O(null,"key-ignore","key-ignore",75506668),zo=new u(null,"pred","pred",-727012372,null),Ao=new O("zprint.spec","return-cvec?","zprint.spec/return-cvec?",1428086764),Bo=new O(null,"sexpr-count","sexpr-count",890534957),Co=new O("zprint.spec","style-map","zprint.spec/style-map",1432581229),Do=new O("zprint.spec","fn-gt3-force-nl","zprint.spec/fn-gt3-force-nl",-217079635),Eo=new O(null,"preserve","preserve",1276846509),ti=new O(null,"fallback-impl","fallback-impl",
-1501286995),Fo=new u(null,"Inf","Inf",647172781,null),Go=new u("cljs.core","map?","cljs.core/map?",-1390345523,null),Ho=new u(null,"keyword?","keyword?",1917797069,null),Io=new O(null,"source","source",-433931539),Jo=new O(null,"output","output",-1105869043),Ko=new O(null,"agent","agent",-766455027),Qa=new O(null,"flush-on-newline","flush-on-newline",-151457939),Lo=new O(null,"binding-nl","binding-nl",-1642873971),Mo=new O(null,"do-in-hang?","do-in-hang?",-1235364947),No=new O("cljs.spec.alpha",
"cpred","cljs.spec.alpha/cpred",-693471218),Oo=new u(null,"zany?","zany?",-25257714,null),Po=new O(null,"string","string",-1989541586),Qo=new u(null,"queue","queue",-1198599890,null),Ro=new O(null,"no-arg1?","no-arg1?",1560368430),So=new O(null,"p1","p1",-936759954),To=new O(null,"vector","vector",1902966158),Uo=new O(null,"hex?","hex?",890937870),Vo=new u("cljs.core","zipmap","cljs.core/zipmap",-1902130674,null),Wo=new O("zprint.spec","brace","zprint.spec/brace",-1853112786),Xo=new O("zprint.spec",
"boolean","zprint.spec/boolean",1882148398),Yo=new O(null,"illegal-argument","illegal-argument",-1845493170),Zo=new O("zprint.spec","fn-force-nl","zprint.spec/fn-force-nl",1561270862),$o=new u(null,"letfn*","letfn*",-110097810,null),ap=new O("zprint.spec","spaces?","zprint.spec/spaces?",2075821742),bp=new O("zprint.spec","record-type?","zprint.spec/record-type?",-1507607890),cp=new O("zprint.spec","hang-if-equal-flow?","zprint.spec/hang-if-equal-flow?",-1204842802),dp=new O(null,"e","e",1381269198),
ep=new u(null,"if","if",1181717262,null),fp=new O("zprint.spec","process-bang-zprint?","zprint.spec/process-bang-zprint?",-1478236402),gp=new u("cljs.core","with-meta","cljs.core/with-meta",749126446,null),hp=new O("cljs.spec.alpha","problems","cljs.spec.alpha/problems",447400814),ip=new O(null,"array","array",-2080713842),jp=new O(null,"s","s",1705939918),kp=new O(null,"empty","empty",767870958),lp=new u(null,"cpred","cpred",-540353554,null),mp=new u(null,"%","%",-950237169,null),np=new O("zprint.spec",
"record","zprint.spec/record",1726027823),op=new O("zprint.spec","bracket","zprint.spec/bracket",-638618577),pp=new u("cljs.core","map","cljs.core/map",-338988913,null),qp=new O(null,"l","l",1395893423),rp=new u(null,"new","new",-444906321,null),sp=new O("zprint.spec","parse","zprint.spec/parse",-1083460401),tp=new O(null,"strable","strable",1877668047),Ki=new O(null,"descendants","descendants",1824886031),up=new O("zip","make-node","zip/make-node",1103800591),vp=new O(null,"underline","underline",
2018066703),wp=new O(null,"allow","allow",-1857325745),xp=new u(null,"ns","ns",2082130287,null),yp=new O(null,"size","size",1098693007),zp=new O("cljs.spec.alpha","kvs-\x3emap","cljs.spec.alpha/kvs-\x3emap",579713455),Ap=new O(null,"k","k",-2146297393),Bp=new O(null,"sym","sym",-1444860305),Cp=new O(null,"object?","object?",-1313059217),Dp=new u("cljs.core","fn?","cljs.core/fn?",71876239,null),Ep=new O(null,"parse-string-all?","parse-string-all?",-744455473),Fp=new O("zprint.spec","general-hang-adjust",
"zprint.spec/general-hang-adjust",-1401814321),Gp=new O("zprint.spec","justify-tuning","zprint.spec/justify-tuning",-261215537),Hp=new O(null,"force-nl-body","force-nl-body",1789087439),Ip=new O(null,"distinct","distinct",-1788879121),Jp=new O(null,"prefix","prefix",-265908465),Kp=new O(null,"column","column",2078222095),Lp=new u(null,"unquote","unquote",-1004694737,null),Mp=new O(null,"map-depth","map-depth",-191378641),Np=new O("alt","extend","alt/extend",1836320623),Op=new O("zprint.spec","trim-comments?",
"zprint.spec/trim-comments?",-1489581201),Pp=new O("zprint.spec","sort-in-code?","zprint.spec/sort-in-code?",286945199),Qp=new O(null,"xsf","xsf",1294187664),Rp=new O(null,"surround","surround",2016177296),Li=new O(null,"ancestors","ancestors",-776045424),Sp=new O(null,"arg2-fn","arg2-fn",1172769072),Tp=new O(null,"dbg-cnt?","dbg-cnt?",-1638028976),Up=new O(null,"style","style",-496642736),Vp=new O("zprint.spec","to-string?","zprint.spec/to-string?",1092439440),Wp=new u(null,"req-specs","req-specs",
-2100473456,null),Xp=new u("zprint.spec","zboolean?","zprint.spec/zboolean?",387886512,null),Yp=new O(null,"hang-diff","hang-diff",-1575205424),Zp=new O("zprint.spec","remove","zprint.spec/remove",-1030136304),$p=new O(null,"paren","paren",-294107600),aq=new O(null,"dbg-print?","dbg-print?",-660113872),bq=new O(null,"back-cyan","back-cyan",-1507796336),cq=new O(null,"file?","file?",1755223728),dq=new O(null,"zprint-ignored","zprint-ignored",434436784),eq=new u("cljs.spec.alpha","keys","cljs.spec.alpha/keys",
1109346032,null),Ra=new O(null,"readably","readably",1129599760),fq=new O("zprint.spec","indent-arg","zprint.spec/indent-arg",504445808),gq=new O(null,"fn-obj","fn-obj",465065936),hq=new O(null,"count?","count?",-122202128),ji=new O(null,"more-marker","more-marker",-14717935),iq=new O(null,"lift-ns-in-code?","lift-ns-in-code?",1444279377),jq=new O("zprint.spec","hash-brace","zprint.spec/hash-brace",-1594438511),kq=new O("zprint.spec","uneval","zprint.spec/uneval",1870143665),lq=new O(null,"config-map",
"config-map",807193777),mq=new u(null,"re","re",1869207729,null),nq=new O(null,"fn-gt2-force-nl","fn-gt2-force-nl",1348579537),oq=new u(null,"conform-keys","conform-keys",-159510287,null),pq=new O(null,"constant-seq","constant-seq",1562582289),qq=new O(null,"string-value","string-value",1109600561),rq=new O(null,"spec","spec",347520401),sq=new O(null,"token","token",-1211463215),tq=new u(null,"kps","kps",-1157342767,null),uq=new O(null,"syntax-quote","syntax-quote",-1233164847),vq=new O(null,"reason",
"reason",-2070751759),wq=new O("zprint.spec","style-value","zprint.spec/style-value",-1042847247),xq=new O("cljs.spec.alpha","invalid","cljs.spec.alpha/invalid",-1220295119),yq=new u(null,"preds","preds",150921777,null),zq=new u("cljs.core","number?","cljs.core/number?",-811857295,null),Aq=new O(null,"seq-fn","seq-fn",-991013231),Bq=new O(null,"not-present","not-present",125254321),Cq=new O(null,"c","c",-1763192079),Dq=new u(null,"kind-form","kind-form",1155997457,null),Eq=new O(null,"req","req",
-326448303),Fq=new O(null,"strike","strike",-1173815471),Gq=new O(null,"left-space","left-space",457574289),Hq=new O(null,"binding","binding",539932593),Iq=new O(null,"inline?","inline?",-1674483791),Jq=new u(null,"addcv","addcv",-1552991247,null),Kq=new O(null,"modifiers","modifiers",50378834),Lq=new u("cljs.core","constantly","cljs.core/constantly",119002258,null),Mq=new O("zprint.spec","old?","zprint.spec/old?",-1271556814),Nq=new O(null,"illegal-state","illegal-state",-1519851182),Oq=new O(null,
"hang-type-flow","hang-type-flow",-1585576590),Pq=new O(null,"arg1-force-nl","arg1-force-nl",-945624718),Qq=new u("clojure.core","unquote-splicing","clojure.core/unquote-splicing",-552003150,null),Rq=new u(null,"deftype*","deftype*",962659890,null),Sq=new O(null,"arg2-mixin","arg2-mixin",-1918663118),Tq=new O(null,"back-red","back-red",-1985566158),Uq=new u(null,"let*","let*",1920721458,null),Vq=new O("zprint.spec","nilable-number","zprint.spec/nilable-number",-1250618798),Wq=new O(null,"wrap?","wrap?",
-1677427054),Xq=new O("zprint.spec","paths","zprint.spec/paths",1792202450),Yq=new u(null,"cfns","cfns",1335482066,null),Zq=new u(null,"nil?","nil?",1612038930,null),$q=new O(null,"map-nl","map-nl",727129906),ar=new O(null,"hang-adjust","hang-adjust",-613514382),br=new O(null,"splicing?","splicing?",-428596366),cr=new O("zprint.spec","key-order","zprint.spec/key-order",-414529614),dr=new u(null,"js*","js*",-1134233646,null),er=new O("zprint.spec","path","zprint.spec/path",-96788494),fr=new O(null,
"dbg-local?","dbg-local?",-895545325),gr=new O(null,"next","next",-117701485),hr=new O(null,"namespaced?","namespaced?",-877312877),ir=new O("zprint.spec","configured?","zprint.spec/configured?",549997747),jr=new O("zprint.spec","max-depth","zprint.spec/max-depth",233118963),kr=new O(null,"line","line",212345235),lr=new O(null,"hang","hang",-1007256173),mr=new O(null,"dbg?","dbg?",1845730771),nr=new O("zprint.spec","user-fn-map","zprint.spec/user-fn-map",-880698797),or=new O(null,"justify-hang","justify-hang",
1083292243),pr=new O(null,"list","list",765357683),qr=new O(null,"var","var",-769682797),rr=new u(null,"fn*","fn*",-752876845,null),sr=new O(null,"quote","quote",-262615245),tr=new O(null,"keyword","keyword",811389747),ur=new O("zprint.spec","constant-pair-min","zprint.spec/constant-pair-min",1156716371),vr=new u(null,"recur","recur",1202958259,null),wr=new O("zprint.spec","value","zprint.spec/value",266554323),xr=new O("zprint.spec","dbg-ge","zprint.spec/dbg-ge",445806547),yr=new u("cljs.core","\x3c\x3d",
"cljs.core/\x3c\x3d",1677001748,null),zr=new O(null,"ztype","ztype",-562179020),Ar=new O(null,"not-found","not-found",-629079980),Br=new O(null,"wrap-after-multi?","wrap-after-multi?",1010808052),Wa=new O(null,"print-length","print-length",1931866356),Cr=new O(null,"hidden","hidden",-312506092),Dr=new O(null,"flow-body","flow-body",1355242804),Er=new O(null,"hang-flow","hang-flow",428126548),Fr=new O("zprint.spec","number","zprint.spec/number",1477010868),Gr=new O("zprint.spec","line-seq","zprint.spec/line-seq",
1246117364),Hr=new O("cljs.spec.alpha","amp","cljs.spec.alpha/amp",831147508),Ir=new O(null,"col","col",-1959363084),Jr=new O(null,"id","id",-1388402092),Kr=new O(null,"binding?","binding?",-1071925644),Lr=new u("zprint.spec","zany?","zprint.spec/zany?",-83022156,null),Mr=new O("zprint.spec","expand?","zprint.spec/expand?",-1667369292),Nr=new O(null,"red","red",-969428204),Or=new O("zprint.spec","docstring?","zprint.spec/docstring?",-1860944044),Pr=new O(null,"blue","blue",-622100620),Qr=new O(null,
"key-color","key-color",-209002572),Rr=new O(null,"string-color","string-color",-1853875244),Sr=new u(null,"describe-form","describe-form",-1410156588,null),Tr=new O("zprint.spec","dbg-bug?","zprint.spec/dbg-bug?",-425712652),Ur=new O(null,"min-count","min-count",1594709013),Vr=new O(null,"syntax-quote-paren","syntax-quote-paren",646342677),Wr=new O(null,"trim-comments?","trim-comments?",-1532658667),Xr=new u("clojure.core","deref","clojure.core/deref",188719157,null),Yr=new O(null,"general-hang-adjust",
"general-hang-adjust",-1631406987),Zr=new O(null,"nil","nil",99600501),$r=new O(null,"kind","kind",-717265803),as=new O("zprint.spec","wrap-coll?","zprint.spec/wrap-coll?",951356693),bs=new O(null,"off","off",606440789),cs=new O(null,"interpose","interpose",576140629),ds=new O(null,"max-hang-span","max-hang-span",256100693),es=new u("cljs.spec.alpha","map-of","cljs.spec.alpha/map-of",153715093,null),fs=new O(null,"deref","deref",-145586795),gs=new O(null,"bracket","bracket",-600276523),hs=new O(null,
"record","record",-779106859),is=new O(null,"comment","comment",532206069),Ji=new O(null,"parents","parents",-2027538891),js=new u("cljs.core","set?","cljs.core/set?",-1176684971,null),ks=new O(null,"count","count",2139924085),ls=new u(null,"cnt","cnt",1924510325,null),ms=new O(null,"parse","parse",-1162164619),ns=new O(null,"none-hang","none-hang",-1101780299),os=new O(null,"last-element","last-element",-1161021771),ps=new O("zprint.spec","constant-pair?","zprint.spec/constant-pair?",-579450155),
qs=new u(null,"/","/",-1371932971,null),rs=new O("zprint.spec","tuning","zprint.spec/tuning",-106419435),ss=new O(null,"comment-inline","comment-inline",712944405),ts=new O(null,"none-hang-one","none-hang-one",-1392848107),us=new O(null,"pnodes","pnodes",1739080565),vs=new O(null,"req-keys","req-keys",514319221),ws=new O(null,"parse-string?","parse-string?",2006674325),xs=new O(null,"fn-style","fn-style",1330516917),ys=new O(null,"lift-ns?","lift-ns?",2021372853),zs=new u(null,"k","k",-505765866,
null),As=new O("zprint.spec","style","zprint.spec/style",-537491402),Bs=new O(null,"elide","elide",-1239101386),Cs=new u("cljs.core","false?","cljs.core/false?",-1660815306,null),Ds=new O(null,"auto-width?","auto-width?",93515862),Es=new O("cljs.spec.alpha","k","cljs.spec.alpha/k",-1602615178),Fs=new O("zprint.spec","path-seq","zprint.spec/path-seq",1637102774),Gs=new O("zprint.spec","justify?","zprint.spec/justify?",375581878),Hs=new O(null,"changed?","changed?",-437828330),Is=new u("cljs.core",
"fn","cljs.core/fn",-1065745098,null),Js=new u(null,"distinct","distinct",-148347594,null),Ks=new O("zprint.spec","color?","zprint.spec/color?",-1781697130),Ls=new O(null,"wrap-fn","wrap-fn",-270233130),Ms=new O("zprint.spec","surround","zprint.spec/surround",1618942582),Ns=new u("clojure.core","unquote","clojure.core/unquote",843087510,null),Os=new O("zprint.spec","fn-obj","zprint.spec/fn-obj",275318454),Ps=new O(null,"opt-specs","opt-specs",-384905450),Qs=new O(null,"to-string?","to-string?",1452120886),
Rs=new O(null,"b","b",1482224470),Ss=new O(null,"justified","justified",-547284074),Ts=new O(null,"end-line","end-line",1837326455),Us=new O(null,"style-map","style-map",1488693527),Vs=new O("zprint.spec","object","zprint.spec/object",1565811991),Ws=new O("zprint.spec","hang-size","zprint.spec/hang-size",-558659241),Xs=new O("zprint.spec","constant","zprint.spec/constant",-738325097),Ys=new O("zprint.spec","boolean-or-string","zprint.spec/boolean-or-string",971392503),Zs=new O(null,"right","right",
-452581833),$s=new O("zprint.spec","zloc?","zprint.spec/zloc?",-1414157737),at=new O(null,"fn-gt3-force-nl","fn-gt3-force-nl",-58306985),bt=new u("cljs.core","vec","cljs.core/vec",307622519,null),ct=new O(null,"focus","focus",234677911),dt=new O(null,"one-line?","one-line?",2055953111),et=new O("zprint.spec","flow?","zprint.spec/flow?",-23604489),ft=new O("zprint.spec","delay","zprint.spec/delay",1668763415),gt=new O(null,"nl-separator-flow?","nl-separator-flow?",495760215),ht=new u(null,"-Inf","-Inf",
-2123243689,null),it=new O("zprint.spec","nl-separator?","zprint.spec/nl-separator?",-683571273),jt=new O(null,"option-fn-first","option-fn-first",-1679196201),kt=new O(null,"string-str?","string-str?",2059147352),lt=new O(null,"process-bang-zprint?","process-bang-zprint?",-1250782024),mt=new O(null,"pred-forms","pred-forms",172611832),nt=new O("zprint.spec","zipper?","zprint.spec/zipper?",-632228552),ot=new O(null,"f","f",-1597136552),pt=new u(null,"req","req",1314083224,null),qt=new O("zprint.spec",
"key-or-ks-seq","zprint.spec/key-or-ks-seq",437686744),rt=new O(null,"set-by","set-by",-1411360264),st=new u("cljs.core","sequence","cljs.core/sequence",1908459032,null),tt=new O(null,"depth","depth",1768663640),ut=new O(null,"regex","regex",939488856),vt=new O(null,"hang-if-equal-flow?","hang-if-equal-flow?",-1113113992),wt=new O(null,"arg1-mixin","arg1-mixin",1553512120),xt=new u("s","nilable","s/nilable",-812128520,null),yt=new O(null,"on","on",173873944),zt=new O("zprint.spec","reader-cond","zprint.spec/reader-cond",
-2059040840),At=new u(null,"spec","spec",1988051928,null),Bt=new O(null,"magenta","magenta",1687937081),Ct=new O(null,"additional-libraries?","additional-libraries?",-538987431),Dt=new u(null,"keys","keys",-1586012071,null),Et=new O(null,"multiple-styles","multiple-styles",-1070882663),Ft=new u(null,"distinct?","distinct?",-1684357959,null),Gt=new O("zprint.spec","parse-string-all?","zprint.spec/parse-string-all?",-584100615),Ht=new O(null,"wrap-length","wrap-length",-268108519),It=new u(null,"set!",
"set!",250714521,null),Jt=new O(null,"unsupported-operation","unsupported-operation",1890540953),Kt=new O(null,"form","form",-1624062471),Lt=new O(null,"single-style","single-style",-1759730151),Mt=new O(null,"end-col","end-col",-724155879),Nt=new O(null,"tag","tag",-1290361223),Ot=new O(null,"max-count","max-count",1539185305),Pt=new O("zprint.spec","key-depth-color","zprint.spec/key-depth-color",1707337369),Qt=new u(null,"read-string","read-string",-558384455,null),Rt=new O("zprint.spec","max-length",
"zprint.spec/max-length",-163375399),St=new u(null,"kfn","kfn",729311001,null),Tt=new O("cljs.spec.alpha","kfn","cljs.spec.alpha/kfn",672643897),Ut=new O(null,"max-depth","max-depth",127060793),Vt=new O("zprint.spec","hang-expand","zprint.spec/hang-expand",1135979353),Wt=new O(null,"arg1-\x3e","arg1-\x3e",1319654329),Xt=new u(null,"gen-into","gen-into",592640985,null),Yt=new u(null,".",".",1975675962,null),Zt=new O(null,"help","help",-439233446),$t=new O("zprint.spec","max-hang-depth","zprint.spec/max-hang-depth",
-1025255302),au=new u(null,"var","var",870848730,null),bu=new O(null,"drop?","drop?",-2009514790),cu=new O("zprint.spec","binding?","zprint.spec/binding?",-926717702),du=new O("zprint.spec","future","zprint.spec/future",1767641466),eu=new u(null,"quote","quote",1377916282,null),fu=new O("zprint.spec","pair-hang?","zprint.spec/pair-hang?",-502162022),gu=new O(null,"set","set",304602554),hu=new O(null,"dbg-bug?","dbg-bug?",-315779526),iu=new O(null,"purple","purple",-876021126),ju=new O(null,"end",
"end",-268185958),ku=new O(null,"fn-map","fn-map",565481146),lu=new O(null,"none-two-up","none-two-up",-457831686),mu=new O(null,"sexpr-fn","sexpr-fn",-1214941414),nu=new O(null,"hang?","hang?",-579442854),ou=new O("zprint.spec","wrap-after-multi?","zprint.spec/wrap-after-multi?",1120977786),pu=new O(null,"version","version",425292698),qu=new O(null,"pdepth","pdepth",-1943862342),ru=new O("zprint.spec","pair","zprint.spec/pair",-138413126),su=new u("cljs.core","coll?","cljs.core/coll?",1208130522,
null),tu=new O(null,"none-body","none-body",-171554854),uu=new O(null,"hang-flow-limit","hang-flow-limit",389146586),vu=new O(null,"shift-seq","shift-seq",267527195),wu=new O(null,"atom","atom",-397043653),xu=new u(null,"id","id",252129435,null),yu=new u(null,"clojure.repl","clojure.repl",570897595,null),zu=new O(null,"eof","eof",-489063237),Au=new O("zprint.spec","left-space","zprint.spec/left-space",433311003),Bu=new u("s","coll-of","s/coll-of",-1705285349,null),Cu=new O("zprint.spec","fn-type",
"zprint.spec/fn-type",-971701893),Du=new O(null,"hierarchy","hierarchy",-1053470341),Eu=new u(null,"catch","catch",-1616370245,null),Fu=new O("zprint.spec","lift-ns-in-code?","zprint.spec/lift-ns-in-code?",1223074267),Gu=new O(null,"hash-brace","hash-brace",-1522139685),Hu=new O(null,"newline","newline",1790071323),Iu=new O("zprint.spec","fn-gt2-force-nl","zprint.spec/fn-gt2-force-nl",1473434203),Ju=new O(null,"tab","tab",-559583621),si=new O(null,"alt-impl","alt-impl",670969595),Ku=new O("zprint.spec",
"spec","zprint.spec/spec",288975643),Lu=new u(null,"...","...",-1926939749,null),Mu=new u(null,"specs","specs",-1227865028,null),Nu=new O(null,"rightmost-pair","rightmost-pair",-39229380),Ou=new u(null,"count","count",-514511684,null),Pu=new O("zprint.spec","array","zprint.spec/array",-1733794628),Qu=new O(null,"max-hang-count","max-hang-count",637294812),Ru=new u(null,"req-keys","req-keys",-2140116548,null),Su=new O(null,"parallel?","parallel?",-25273892),Tu=new O("zprint.spec","modifiers","zprint.spec/modifiers",
10353116),Uu=new O("zprint.spec","extend","zprint.spec/extend",1659133436),Vu=new u(null,"min-count","min-count",-1059726756,null),Wu=new O(null,"sort?","sort?",-567661924),Xu=new u(null,"opts","opts",1795607228,null),Yu=new O("zprint.spec","vector","zprint.spec/vector",1746030268),Zu=new u(null,"kind","kind",923265724,null),$u=new u(null,"cform","cform",1319506748,null),av=new O("zprint.spec","string","zprint.spec/string",-1346647204),bv=new u(null,"deref","deref",1494944732,null),cv=new O(null,
"boolean","boolean",-1919418404),dv=new O(null,"cursor-element","cursor-element",-616791907),ev=new O(null,"delay","delay",-574225219),fv=new O("zprint.spec","keyword","zprint.spec/keyword",655198397),gv=new O("zprint.spec","dbg?","zprint.spec/dbg?",1754615133),hv=new u(null,"opt-specs","opt-specs",1255626077,null),iv=new u("cljs.core","hash-set","cljs.core/hash-set",1130426749,null),jv=new O(null,"character","character",380652989),kv=new O(null,"map","map",1371690461),lv=new u("cljs.core","list",
"cljs.core/list",-1331406371,null),mv=new O(null,"eofthrow","eofthrow",-334166531),nv=new u(null,"conform-all","conform-all",-980179459,null),ov=new O("zprint.spec","option-fn-first","zprint.spec/option-fn-first",-1856295427),pv=new O("cljs.spec.alpha","conform-all","cljs.spec.alpha/conform-all",45201917),qv=new O("cljs.spec.alpha","alt","cljs.spec.alpha/alt",523685437),rv=new O("zprint.spec","width","zprint.spec/width",-443606435),sv=new O(null,"object","object",1474613949),tv=new O("zprint.spec",
"promise","zprint.spec/promise",1826721693),uv=new O("zprint.spec","focus","zprint.spec/focus",60962749),vv=new O(null,"runtime-exception","runtime-exception",-1495664514),wv=new u(null,"throw","throw",595905694,null),xv=new O(null,"arg1","arg1",951899358),X=new O(null,"none","none",1333468478),yv=new O(null,"reader-cond","reader-cond",-2133265058),zv=new O(null,"docstring?","docstring?",-1820749410),Av=new O(null,"forms","forms",2045992350),Bv=new O("zprint.spec","key-ignore-silent","zprint.spec/key-ignore-silent",
-1607799266),Cv=new O(null,"return-cvec?","return-cvec?",1372433982),Dv=new O("cljs.spec.alpha","pred","cljs.spec.alpha/pred",-798342594),Ev=new O(null,"keep","keep",-2133338530),Fv=new O("zprint.spec","key-ignore","zprint.spec/key-ignore",-149883266),Gv=new O("cljs.spec.alpha","nil","cljs.spec.alpha/nil",1733813950),Hv=new u(null,"number?","number?",-1747282210,null),Iv=new O(null,"zipper?","zipper?",-1061271842),Jv=new O("zprint.spec","color-map","zprint.spec/color-map",-97644770),Kv=new O(null,
"ps","ps",292358046),Lv=new O(null,"reverse","reverse",-888455266),Mv=new O(null,"rightmost","rightmost",800279518),Nv=new O(null,"range","range",1639692286),Ov=new u(null,"k-\x3es","k-\x3es",-1685112801,null),Pv=new O(null,"row","row",-570139521),Qv=new O(null,"select","select",1147833503),Rv=new O(null,"skip","skip",602715391),Sv=new u("cljs.spec.alpha","conformer","cljs.spec.alpha/conformer",2140085535,null),Tv=new O(null,"in","in",-1531184865),Uv=new O("zprint.spec","inline?","zprint.spec/inline?",
1637995839),Vv=new O("zprint.spec","binding","zprint.spec/binding",626025791),Wv=new O(null,"left","left",-399115937),Xv=new O("zprint.spec","color","zprint.spec/color",851289471),Nh=new O("cljs.core","not-found","cljs.core/not-found",-1572889185),Yv=new u(null,"def","def",597100991,null),Zv=new O("cljs.spec.alpha","describe","cljs.spec.alpha/describe",1883026911),$v=new u(null,"conform-into","conform-into",-1039113729,null),aw=new O("zprint.spec","key-value-color","zprint.spec/key-value-color",733882911),
bw=new u("cljs.spec.alpha","\x26","cljs.spec.alpha/\x26",1635809823,null),cw=new O(null,"opt","opt",-794706369),ew=new O("cljs.spec.alpha","pcat","cljs.spec.alpha/pcat",26406623),fw=new O("zprint.spec","vec-or-list-of-keyword","zprint.spec/vec-or-list-of-keyword",1409636095),gw=new u(null,"pred-forms","pred-forms",1813143359,null),hw=new O("zprint.spec","interpose","zprint.spec/interpose",1019511679),iw=new O("zprint.spec","max-hang-span","zprint.spec/max-hang-span",372684671),jw=new u("cljs.spec.alpha",
"?","cljs.spec.alpha/?",1605136319,null),kw=new O("zprint.spec","lift-ns?","zprint.spec/lift-ns?",2081293279),lw=new O(null,"black","black",1294279647),mw=new O(null,"eval","eval",-1103567905);function nw(a,b){if("string"===typeof b)return a.replace(new RegExp(String(b).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g,"\\$1").replace(/\x08/g,"\\x08"),"g"),"");if(b instanceof RegExp){var c=RegExp,d=b.source;var e=n(b.ignoreCase)?[r.a("g"),"i"].join(""):"g";e=n(b.multiline)?[r.a(e),"m"].join(""):e;e=n(b.Af)?[r.a(e),"u"].join(""):e;c=new c(d,e);return a.replace(c,"")}throw["Invalid match arg: ",r.a(b)].join("");}
function ow(a){var b=new Ga;for(a=x(a);;)if(null!=a)b.append(""+r.a(y(a))),a=B(a),null!=a&&b.append("\n");else return b.toString()}function pw(a,b){if(0>=b||b>=2+D(a))return Ad.b(qg(vd("",Gf.b(r,x(a)))),"");if(n(we?bc(1,b):ve(1,b)))return new R(null,1,5,S,[a],null);if(n(we?bc(2,b):ve(2,b)))return new R(null,2,5,S,["",a],null);var c=b-2;return Ad.b(qg(vd("",ug(qg(Gf.b(r,x(a))),c))),a.substring(c))}function qw(a,b){return rw(a,b,0)}
function rw(a,b,c){if("/(?:)/"===""+r.a(b))b=pw(a,c);else if(1>c)b=qg((""+r.a(a)).split(b));else a:for(var d=c,e=H;;){if(1===d){b=Ad.b(e,a);break a}var f=gi(b,a);if(null!=f){var g=a.indexOf(f);f=a.substring(g+D(f));--d;e=Ad.b(e,a.substring(0,g));a=f}else{b=Ad.b(e,a);break a}}if(0===c&&1<D(b))a:for(c=b;;)if(""===Ld(c))c=null==c?null:Qb(c);else break a;else c=b;return c};function sw(a){if(null==a)a=null;else if("number"===typeof a)a=String.fromCharCode(a);else if("string"!==typeof a||1!==a.length)throw Error("Argument to char must be a character or number");return a}function tw(a,b,c,d,e){this.Lb=a;this.form=b;this.s=c;this.f=d;this.j=e;this.h=2229667594;this.C=139264}h=tw.prototype;h.R=function(a,b){return this.F(null,b,null)};
h.F=function(a,b,c){switch(b instanceof O?b.$:null){case "splicing?":return this.Lb;case "form":return this.form;default:return w.c(this.f,b,c)}};h.N=function(a,b,c){return ii(b,function(){return function(a){return ii(b,qi,""," ","",c,a)}}(this),"#cljs.tools.reader.impl.utils.ReaderConditional{",", ","}",c,We.b(new R(null,2,5,S,[new R(null,2,5,S,[br,this.Lb],null),new R(null,2,5,S,[Kt,this.form],null)],null),this.f))};
h.ca=function(){return new Fg(0,this,2,new R(null,2,5,S,[br,Kt],null),n(this.f)?Dc(this.f):hf())};h.L=function(){return this.s};h.S=function(){return 2+D(this.f)};h.M=function(){var a=this,b=this.j;if(null!=b)return b;var c=function(){return function(){return function(a){return-209062840^cd(a)}}(b,a)(a)}();return this.j=c};h.D=function(a,b){return null!=b&&this.constructor===b.constructor&&C.b(this.Lb,b.Lb)&&C.b(this.form,b.form)&&C.b(this.f,b.f)};
h.oa=function(a,b){return Zd(new V(null,new m(null,2,[br,null,Kt,null],null),null),b)?Fd.b(Wb(Tf.b(jf,this),this.s),b):new tw(this.Lb,this.form,this.s,gf(Fd.b(this.f,b)),null)};h.P=function(a,b,c){return n(He.b?He.b(br,b):He(br,b))?new tw(c,this.form,this.s,this.f,null):n(He.b?He.b(Kt,b):He(Kt,b))?new tw(this.Lb,c,this.s,this.f,null):new tw(this.Lb,this.form,this.s,Dd.c(this.f,b,c),null)};
h.O=function(){return x(We.b(new R(null,2,5,S,[new R(null,2,5,S,[br,this.Lb],null),new R(null,2,5,S,[Kt,this.form],null)],null),this.f))};h.J=function(a,b){return new tw(this.Lb,this.form,b,this.f,this.j)};h.T=function(a,b){return Sd(b)?this.P(null,xb.b(b,0),xb.b(b,1)):mb(vb,this,b)};function uw(a,b){return new tw(b,a,null,null,null)}h.da=l;h.N=function(a,b,c){lc(b,["#?",r.a(n(br.a(this))?"@":null)].join(""));return qi(Kt.a(this),b,c)};var vw=/[\s]/;
function ww(a){return null==a?null:","===a?!0:vw.test(a)}function xw(a){return null==a?null:!/[^0-9]/.test(a)}function yw(a){return"\n"===a||"\n"===a||null==a}function zw(a){return a instanceof O?Ed([a,!0]):a instanceof u?new m(null,1,[Nt,a],null):"string"===typeof a?new m(null,1,[Nt,a],null):a}var Aw=Cf(0);
function Bw(a,b){return function e(b){return new Me(null,function(){for(;;){var d=x(b);if(d){if(Td(d)){var g=vc(d),k=D(g),p=Qe(k);return function(){for(var b=0;;)if(b<k){var d=xb.b(g,b),e=p;if(d instanceof u||d instanceof O){var f=di();var q=f.a?f.a(d):f(d);f=J(q,0,null);q=J(q,1,null);var F=d instanceof u?Sc:Ke;d=null==f?F.b?F.b(a,q):F(a,q):C.b("_",f)?F.a?F.a(q):F(q):d}e.add(d);b+=1}else return!0}()?Se(p.Ga(),e(wc(d))):Se(p.Ga(),null)}var q=y(d);return vd(q instanceof u||q instanceof O?function(){var b=
di();var d=b.a?b.a(q):b(q);b=J(d,0,null);d=J(d,1,null);var e=q instanceof u?Sc:Ke;return null==b?e.b?e.b(a,d):e(a,d):C.b("_",b)?e.a?e.a(d):e(d):q}():q,e(Vc(d)))}return null}},null,null)}(b)}function Cw(a){var b=J(a,0,null);a=J(a,1,null);return n(b)?null:a};var Dw=function Dw(a){if(null!=a&&null!=a.aa)return a.aa(a);var c=Dw[ba(null==a?null:a)];if(null!=c)return c.a?c.a(a):c(a);c=Dw._;if(null!=c)return c.a?c.a(a):c(a);throw fb("Reader.read-char",a);},Ew=function Ew(a){if(null!=a&&null!=a.Oa)return a.Oa(a);var c=Ew[ba(null==a?null:a)];if(null!=c)return c.a?c.a(a):c(a);c=Ew._;if(null!=c)return c.a?c.a(a):c(a);throw fb("Reader.peek-char",a);},Fw=function Fw(a,b){if(null!=a&&null!=a.bc)return a.bc(a,b);var d=Fw[ba(null==a?null:a)];if(null!=d)return d.b?
d.b(a,b):d(a,b);d=Fw._;if(null!=d)return d.b?d.b(a,b):d(a,b);throw fb("IPushbackReader.unread",a);},Gw=function Gw(a){if(null!=a&&null!=a.oc)return a.oc();var c=Gw[ba(null==a?null:a)];if(null!=c)return c.a?c.a(a):c(a);c=Gw._;if(null!=c)return c.a?c.a(a):c(a);throw fb("IndexingReader.get-line-number",a);},Hw=function Hw(a){if(null!=a&&null!=a.nc)return a.nc();var c=Hw[ba(null==a?null:a)];if(null!=c)return c.a?c.a(a):c(a);c=Hw._;if(null!=c)return c.a?c.a(a):c(a);throw fb("IndexingReader.get-column-number",
a);},Iw=function Iw(a){if(null!=a&&null!=a.ke)return a.Uc;var c=Iw[ba(null==a?null:a)];if(null!=c)return c.a?c.a(a):c(a);c=Iw._;if(null!=c)return c.a?c.a(a):c(a);throw fb("IndexingReader.get-file-name",a);};function Jw(a,b,c){this.K=a;this.Qd=b;this.uc=c}Jw.prototype.aa=function(){if(this.Qd>this.uc){var a=this.K.charAt(this.uc);this.uc+=1;return a}return null};Jw.prototype.Oa=function(){return this.Qd>this.uc?this.K.charAt(this.uc):null};
function Kw(a,b,c,d){this.fc=a;this.Xb=b;this.bd=c;this.lb=d}Kw.prototype.aa=function(){var a=this.lb<this.bd?this.Xb[this.lb]:this.fc.aa(null);this.lb<this.bd&&(this.lb+=1);return sw(a)};Kw.prototype.Oa=function(){var a=this.lb<this.bd?this.Xb[this.lb]:this.fc.Oa(null);return sw(a)};Kw.prototype.bc=function(a,b){if(n(b)){if(0===this.lb)throw Error("Pushback buffer is full");--this.lb;return this.Xb[this.lb]=b}return null};
function Lw(a,b,c,d,e,f,g){this.fc=a;this.line=b;this.Sb=c;this.Gc=d;this.Nd=e;this.Od=f;this.Uc=g}h=Lw.prototype;h.aa=function(){var a=this.fc.aa(null);if(n(a)){var b=this.fc;"\r"===a?(a=b.Oa(null),"\f"!==a&&"\n"!==a||b.aa(null),b="\n"):b=a;this.Nd=this.Gc;this.Gc=yw(b);n(this.Gc)&&(this.Od=this.Sb,this.Sb=0,this.line+=1);this.Sb+=1;return b}return null};h.Oa=function(){return this.fc.Oa(null)};
h.bc=function(a,b){n(this.Gc)?(--this.line,this.Sb=this.Od):--this.Sb;this.Gc=this.Nd;return this.fc.bc(null,b)};h.je=l;h.oc=function(){return this.line|0};h.nc=function(){return this.Sb|0};h.ke=function(){return this.Uc};function Mw(a){return null!=a?l===a.je?!0:!1:!1}
function Nw(a,b){var c=new Jw(a,D(a),0);if("number"===typeof b)a:{var d=Array(b);if(Wd(null))for(var e=0,f=x(null);;)if(f&&e<b)d[e]=y(f),e+=1,f=B(f);else break a;else for(e=0;;)if(e<b)d[e]=null,e+=1;else break}else d=lb(b);return new Kw(c,d,b,b)}function Ow(a){switch(arguments.length){case 1:return Pw(arguments[0]);case 2:return Qw(arguments[0],arguments[1],null);case 3:return Qw(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",r.a(arguments.length)].join(""));}}
function Pw(a){return Qw(a,1,null)}function Qw(a,b,c){return new Lw("string"===typeof a?Nw(a,b):a,1,1,!0,null,0,c)};function Rw(a,b,c,d){var e=D(b);a=n(a)?0:10<e?10:e;b=Gf.b(uf(Vi,!0),Hf.b(a,b));b=P(r,Pf(" ",b));e=a<e?"...":null;return[r.a(c),r.a(b),r.a(e),r.a(d)].join("")}function Sw(a,b){return null==b?Zr:"string"===typeof b?Po:b instanceof O?tp:"number"===typeof b?tp:b instanceof u?tp:Sd(b)?To:Be(b)?pr:L(b)?kv:Pd(b)?gu:C.b(b,!0)?tp:C.b(b,!1)?tp:eb(b)}
if("undefined"===typeof Vi){var Vi,Tw=Cf(jf),Uw=Cf(jf),Vw=Cf(jf),Ww=Cf(jf),Xw=w.c(jf,Du,Ii());Vi=new Ti(Sc.b("cljs.tools.reader.impl.inspect","inspect*"),Sw,Am,Xw,Tw,Uw,Vw,Ww)}Ui(Po,function(a,b){var c=n(a)?5:20,d=b.length>c?'..."':'"';return[r.a('"'),r.a(b.substring(0,function(){var a=b.length;return c<a?c:a}())),r.a(d)].join("")});Ui(tp,function(a,b){return""+r.a(b)});Ui({}.lf,function(){return"\x3cindexed seq\x3e"});Ui(Jg,function(){return"\x3cmap seq\x3e"});Ui(gh,function(){return"\x3cmap seq\x3e"});
Ui(Ee,function(){return"\x3ccons\x3e"});Ui(Me,function(){return"\x3clazy seq\x3e"});Ui(Zr,function(){return"nil"});Ui(pr,function(a,b){return Rw(a,b,"(",")")});Ui(kv,function(a,b){var c=D(b),d=n(a)?0:c,e=P(We,Hf.b(d,b));return Rw(a,e,"{",c>d?"...}":"}")});Ui(gu,function(a,b){return Rw(a,b,"#{","}")});Ui(To,function(a,b){return Rw(a,b,"[","]")});Ui(Am,function(a,b){return xi(E([eb(b)]))});function Yw(a){return Vi.b?Vi.b(!1,a):Vi(!1,a)};function Zw(a,b,c){b=new m(null,2,[no,Kl,Cj,b],null);a=n(Mw(a))?Dd.g(b,wn,Iw(a),E([kr,Gw(a),Ir,Hw(a)])):b;var d=wn.a(a);b=kr.a(a);var e=Ir.a(a);d=n(d)?[r.a(d)," "].join(""):null;b=n(b)?["[line ",r.a(b),", col ",r.a(e),"]"].join(""):null;c=ef(r,d,b,n(n(d)?d:b)?" ":null,c);throw $i(c,a);}function $w(a,b){return Zw(a,Pj,E([P(r,b)]))}function ax(a,b){return Zw(a,Yo,E([P(r,b)]))}function bx(a,b){return Zw(a,zu,E([P(r,b)]))}
function cx(a,b,c,d,e){return bx(a,E(["Unexpected EOF while reading ",n(e)?["item ",r.a(e)," of "].join(""):null,Le(b),n(c)?[", starting at line ",r.a(c)," and column ",r.a(d)].join(""):null,"."]))}function dx(a,b,c,d){$w(a,E(["The map literal starting with ",Yw(y(d)),n(b)?[" on line ",r.a(b)," column ",r.a(c)].join(""):null," contains ",D(d)," form(s). Map literals must contain an even number of forms."]))}function ex(a){throw ax(null,E(["Invalid unicode literal: \\",a,"."]));}
function fx(a,b){return $w(a,E(["Invalid unicode escape: \\u",b,"."]))}function gx(a,b,c){return $w(a,E(["Invalid ",Le(b),": ",c,"."]))}function hx(a,b){return bx(a,E(["Unexpected EOF while reading start of ",Le(b),"."]))}function ix(a,b,c){return $w(a,E(["Invalid character: ",c," found while reading ",Le(b),"."]))}function jx(a){return bx(a,E(["Unexpected EOF while reading dispatch character."]))}
function kx(a,b,c){a:{var d=b instanceof O?b.$:null;switch(d){case "regex":d='#"';break a;case "string":d='"';break a;default:throw Error(["No matching clause: ",r.a(d)].join(""));}}return bx(a,E(["Unexpected EOF reading ",Le(b)," starting ",df(r,d,c),"."]))}function lx(a,b){return ax(null,E(["Invalid digit ",a," in unicode character \\",b,"."]))}function mx(a,b){return ax(a,E(["Invalid digit ",b," in unicode character."]))}
function nx(a,b,c){return ax(a,E(["Invalid unicode literal. Unicode literals should be ",c,"characters long.  ","value suppled is ",b,"characters long."]))}function ox(a,b){return $w(a,E(["Invalid character literal \\u",b,"."]))}function px(a,b){return $w(a,E(["Invalid octal escape sequence in a character literal:",b,". Octal escape sequences must be 3 or fewer digits."]))}function qx(a){return $w(a,E(["Octal escape sequence must be in range [0, 377]."]))}
function rx(a){return bx(a,E(["Unexpected EOF while reading character."]))}function sx(a,b){return $w(a,E(["Unsupported escape character: \\",b,"."]))}function tx(a){return $w(a,E(["A single colon is not a valid keyword."]))}function ux(a,b){$w(a,E(["Metadata cannot be ",Yw(b),". Metadata must be a Symbol, Keyword, String or Map."]))}function vx(a,b){return $w(a,E(["Metadata can not be applied to ",Yw(b),". ","Metadata can only be applied to IMetas."]))}
function wx(a,b){return $w(a,E(["Namespaced map with namespace ",b," does not specify a map."]))}function xx(a,b){return $w(a,E(["Invalid value used as namespace in namespaced map: ",b,"."]))}function yx(a,b){$w(a,E(["Invalid reader tag: ",Yw(b),". Reader tags must be symbols."]))}function zx(a,b){return $w(a,E(["No reader function for tag ",Yw(b),"."]))}
function Ax(a,b){var c=function(a){return function g(a){return new Me(null,function(){for(var b=a;;)if(b=x(b)){if(Td(b)){var c=vc(b),d=D(c),f=Qe(d);a:for(var v=0;;)if(v<d){var A=xb.b(c,v),z=J(A,0,null);1<J(A,1,null)&&f.add(z);v+=1}else{c=!0;break a}return c?Se(f.Ga(),g(wc(b))):Se(f.Ga(),null)}f=y(b);c=J(f,0,null);if(1<J(f,1,null))return vd(c,g(Vc(b)));b=Vc(b)}else return null},null,null)}(bi(a))}(b);return ef(r,a,1<D(c)?"s":null,": ",Pf(", ",c))}
function Bx(a,b,c){return $w(a,E([Ax([r.a(la(Le(b)))," literal contains duplicate key"].join(""),c)]))}function Cx(a,b){return n(b)?bx(a,E(["EOF while reading, starting at line ",b,"."])):bx(a,E(["EOF while reading."]))};function Dx(a){for(var b=a.aa(null);;)if(ww.a?ww.a(b):ww(b))b=a.aa(null);else return b}var Ex=/^([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?$/,Fx=/([-+]?[0-9]+)\/([0-9]+)/,Gx=/([-+]?[0-9]+(\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?/;
function Hx(a){var b=qg(gi(Ex,a));if(null!=(b.a?b.a(2):b(2)))return 0;a="-"===(b.a?b.a(1):b(1));var c=null!=(b.a?b.a(3):b(3))?new R(null,2,5,S,[b.a?b.a(3):b(3),10],null):null!=(b.a?b.a(4):b(4))?new R(null,2,5,S,[b.a?b.a(4):b(4),16],null):null!=(b.a?b.a(5):b(5))?new R(null,2,5,S,[b.a?b.a(5):b(5),8],null):null!=(b.a?b.a(7):b(7))?new R(null,2,5,S,[b.a?b.a(7):b(7),function(){var a=b.a?b.a(6):b(6);return parseInt(a)}()],null):new R(null,2,5,S,[null,null],null),d=c.a?c.a(0):c(0);if(null==d)return null;
var e=function(){var a=c.a?c.a(1):c(1);return parseInt(d,a)}();a=a?-1*e:e;return n(isNaN(a))?null:a}function Ix(a,b){var c=gi(a,b);return J(c,0,null)===b}function Jx(a){if(Ix(Ex,a))a=Hx(a);else if(Ix(Gx,a)){var b=qg(gi(Gx,a));null!=(b.a?b.a(4):b(4))&&(a=b.a?b.a(1):b(1));a=parseFloat(a)}else Ix(Fx,a)?(b=qg(gi(Fx,a)),a=b.a?b.a(1):b(1),b=b.a?b.a(2):b(2),a=n(gi(/^\+/,a))?a.substring(1):a,a=parseInt(a)/parseInt(b)):a=null;return a}
function Kx(a){if(""===a||!0===/:$/.test(a)||!0===/^::/.test(a))return null;var b=a.indexOf("/"),c=0<b?a.substring(0,b):null;if(null!=c){b+=1;if(b===D(a))return null;a=a.substring(b);return xw(qd(a,0))||""===a||!1!==/:$/.test(c)||"/"!==a&&-1!==a.indexOf("/")?null:new R(null,2,5,S,[c,a],null)}return"/"===a||-1===a.indexOf("/")?new R(null,2,5,S,[null,a],null):null}
var Lx=function Lx(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return Lx.g(arguments[0],1<c.length?new Uc(c.slice(1),0,null):null)};Lx.g=function(a){for(;!yw(a.aa(null)););return a};Lx.H=1;Lx.I=function(a){var b=y(a);a=B(a);return Lx.g(b,a)};
function Mx(a){return function(){function b(a,b){if(1<arguments.length)for(var d=0,e=Array(arguments.length-1);d<e.length;)e[d]=arguments[d+1],++d;return c.call(this,a)}function c(b){return $w(b,E([a]))}b.H=1;b.I=function(a){var b=y(a);Vc(a);return c(b)};b.g=c;return b}()};function Nx(a){switch(a){case '"':case ";":case "@":case "^":case "`":case "~":case "(":case ")":case "[":case "]":case "{":case "}":case "\\":return!0;default:return!1}}var Ox=new Ga;function Px(a,b,c){if(null==c)return hx(a,b);Ox.clear();for(b=c;;){if(ww(b)||Nx(b)||null==b)return null!=b&&a.bc(null,b),Ox.toString();Ox.append(b);b=a.aa(null)}}
function Qx(a,b,c,d){b=a.aa(null);if(n(b)){var e=Rx.a?Rx.a(b):Rx(b);if(n(e))return e.A?e.A(a,b,c,d):e(a,b,c,d);a.bc(null,b);return Sx.A?Sx.A(a,b,c,d):Sx(a,0,c,d)}return jx(a)}function Tx(a,b){return $w(a,E(["Unmatched delimiter ",b,"."]))}function Ux(a){for(var b=new Ga,c=a.aa(null);;){if('"'===c)return hi(""+r.a(b));if(null==c)return kx(a,ut,E([b]));b.append(c);"\\"===c&&(c=a.aa(null),null==c&&kx(a,ut,E([b])),b.append(c));c=a.aa(null)}}
function Vx(a,b){var c=parseInt(a,b);return n(isNaN(c))?-1:c}function Wx(a,b,c){b=1+b;D(a)!==b&&ex(a);for(var d=1,e=0;;){if(d===b)return String.fromCharCode(e);var f=Vx(qd(a,d),c);if(-1===f)return lx(qd(a,d),a);e=f+e*c;d+=1}}
function Xx(a,b,c,d,e){for(var f=1,g=Vx(b,c);;){if(-1===g)return mx(a,b);if(f!==d){var k=a.Oa(null);var p=ww(k);p||(p=Yx.a?Yx.a(k):Yx(k),p=n(p)?p:null==k);if(n(p))return n(e)?nx(a,f,d):String.fromCharCode(g);p=Vx(k,c);a.aa(null);if(-1===p)return mx(a,k);g=p+g*c;f+=1}else return String.fromCharCode(g)}}
function Zx(a){var b=a.aa(null);if(null!=b){b=Nx(b)||ww(b)?""+r.a(b):Px(a,jv,b);var c=b.length;if(1===c)return b.charAt(0);if(C.b(b,"newline"))return"\n";if(C.b(b,"space"))return" ";if(C.b(b,"tab"))return"\t";if(C.b(b,"backspace"))return"\b";if(C.b(b,"formfeed"))return"\f";if(C.b(b,"return"))return"\r";if(n(0==b.lastIndexOf("u",0)))return b=Wx(b,4,16),c=b.charCodeAt(0),55295<c&&57344>c?ox(a,b):b;if(n(0==b.lastIndexOf("o",0))){--c;if(3<c)return px(a,b);c=Wx(b,c,8);return $a(255>=parseInt(b.substring(1),
8))?qx(a):c}return $w(a,E(["Unsupported character: ",b,"."]))}return rx(a)}function $x(a){return n(Mw(a))?new R(null,2,5,S,[a.oc(),a.nc()-1|0],null):null}function ay(a){return n(Mw(a))?new R(null,2,5,S,[a.oc(),a.nc()],null):null}if("undefined"===typeof by)var by={};if("undefined"===typeof cy)var cy={};var dy=!1;
function ey(a,b,c,d,e){var f=dy;dy=!0;try{a:for(var g=$x(c),k=J(g,0,null),p=J(g,1,null),q=sw(b),t=oc(H);;){var v=fy?fy(c,!1,by,q,d,e):gy(c,!1,by,q,d,e);if(v===cy){var A=qc(t);break a}if(v===by){A=cx(c,a,k,p,D(t));break a}t=Xe.b(t,v)}return A}finally{dy=f}}
function hy(a,b,c,d){var e=$x(a);b=J(e,0,null);e=J(e,1,null);c=ey(pr,")",a,c,d);var f=ay(a);d=J(f,0,null);f=J(f,1,null);return Jd(Nd(c)?Wc:P(N,c),n(b)?Jh.g(E([function(){var b=Iw(a);return n(b)?new m(null,1,[wn,b],null):null}(),new m(null,4,[kr,b,Kp,e,Ts,d,Nn,f],null)])):null)}
function iy(a,b,c,d){var e=$x(a);b=J(e,0,null);e=J(e,1,null);c=ey(To,"]",a,c,d);var f=ay(a);d=J(f,0,null);f=J(f,1,null);return Jd(c,n(b)?Jh.g(E([function(){var b=Iw(a);return n(b)?new m(null,1,[wn,b],null):null}(),new m(null,4,[kr,b,Kp,e,Ts,d,Nn,f],null)])):null)}
function jy(a,b,c,d){var e=$x(a);b=J(e,0,null);e=J(e,1,null);c=ey(kv,"}",a,c,d);d=D(c);var f=Zh(2,c),g=Rh(f),k=ay(a),p=J(k,0,null);k=J(k,1,null);!qf(d)&&dx(a,b,e,c);C.b(D(g),D(f))||Bx(a,kv,f);return Jd(d<=2*Og?Qg(ge(c)):lh(ge(c)),n(b)?Jh.g(E([function(){var b=Iw(a);return n(b)?new m(null,1,[wn,b],null):null}(),new m(null,4,[kr,b,Kp,e,Ts,p,Nn,k],null)])):null)}
function ky(a,b){for(var c=function(){var a=new Ga;a.append(b);return a}(),d=a.aa(null);;){if(n(function(){var a=ww(d);if(a)return a;a=Yx.a?Yx.a(d):Yx(d);return n(a)?a:null==d}())){var e=""+r.a(c);a.bc(null,d);var f=Jx(e);return n(f)?f:$w(a,E(["Invalid number: ",e,"."]))}e=function(){var a=c;a.append(d);return a}();f=a.aa(null);c=e;d=f}}
function ly(a){var b=a.aa(null);switch(b){case "t":return"\t";case "r":return"\r";case "n":return"\n";case "\\":return"\\";case '"':return'"';case "b":return"\b";case "f":return"\f";case "u":return b=a.aa(null),-1===parseInt(b|0,16)?fx(a,b):Xx(a,b,16,4,!0);default:return xw(b)?(b=Xx(a,b,8,3,!1),223<(b|0)?qx(a):b):sx(a,b)}}
function my(a){for(var b=new Ga,c=a.aa(null);;){if(null==c)return kx(a,Po,E(['"',b]));switch(c){case "\\":var d=function(){var c=b;c.append(ly(a));return c}(),e=a.aa(null);b=d;c=e;continue;case '"':return""+r.a(b);default:d=function(){var a=b;a.append(c);return a}(),e=a.aa(null),b=d,c=e}}}function ny(a,b,c){if(null==b)return null;var d=Iw(a);d=null==d?null:new m(null,1,[wn,d],null);var e=ay(a);a=J(e,0,null);e=J(e,1,null);return Jh.g(E([d,new m(null,4,[kr,b,Kp,c,Ts,a,Nn,e],null)]))}
function oy(a,b){var c=$x(a),d=J(c,0,null);c=J(c,1,null);var e=Px(a,Qm,b);if(null==e)return null;switch(e){case "nil":return null;case "true":return!0;case "false":return!1;case "/":return qs;default:var f=Kx(e);return null!=f?Sc.b(f.W(null,0),f.W(null,1)).J(null,ny(a,d,c)):gx(a,Qm,e)}}
function py(a){var b=a.aa(null);if(ww(b))return tx(a);b=Px(a,tr,b);var c=Kx(b);if(null!=c){var d=c.W(null,0);c=c.W(null,1);if(":"===b.charAt(0)){if(null!=d)return d=w.b(null,Sc.a(d.substring(1))),n(d)?Ke.b(""+r.a(d),c):gx(a,tr,[r.a(":"),r.a(b)].join(""));d=null;return n(d)?Ke.b(""+r.a(d),c.substring(1)):$w(a,E(["Invalid token: :",b]))}return Ke.b(d,c)}return gx(a,tr,[r.a(":"),r.a(b)].join(""))}
function qy(a){return function(b,c,d,e){b=ry?ry(b,!0,null,d,e):gy(b,!0,null,d,e);b=vb(Wc,b);return vb(b,a)}}function sy(a,b,c,d){var e=$x(a);b=J(e,0,null);e=J(e,1,null);var f=zw(ry?ry(a,!0,null,c,d):gy(a,!0,null,c,d));L(f)||ux(a,f);c=ry?ry(a,!0,null,c,d):gy(a,!0,null,c,d);return null!=c&&(c.h&131072||l===c.zc)?(a=n(n(b)?Wd(c):b)?Dd.g(f,kr,b,E([Kp,e])):f,null!=c&&(c.h&262144||l===c.Ad)?Jd(c,Jh.g(E([Kd(c),a]))):c.u=a):vx(a,c)}
function ty(a,b,c,d){var e=$x(a);b=J(e,0,null);e=J(e,1,null);e=n(e)?e-1|0:null;c=ey(gu,"}",a,c,d);d=Rh(c);var f=ay(a),g=J(f,0,null);f=J(f,1,null);C.b(D(c),D(d))||$w(a,E([Bx(a,gu,c)]));return Jd(d,n(b)?Jh.g(E([function(){var b=Iw(a);return n(b)?new m(null,1,[wn,b],null):null}(),new m(null,4,[kr,b,Kp,e,Ts,g,Nn,f],null)])):null)}function uy(a,b,c,d){ry?ry(a,!0,null,c,d):gy(a,!0,null,c,d);return a}
function vy(a,b,c,d){b=ry?ry(a,!0,null,c,d):gy(a,!0,null,c,d);return C.b(Wm,b)?Number.NaN:C.b(ht,b)?Number.NEGATIVE_INFINITY:C.b(Fo,b)?Number.POSITIVE_INFINITY:$w(a,E([["Invalid token: ##",r.a(b)].join("")]))}var wy=new V(null,new m(null,2,[Nl,null,X,null],null),null);function xy(a,b,c){a===by&&(a=0>c,Cx(b,a?c:a))}function yy(a,b,c,d){var e=zy;zy=!0;try{var f=fy?fy(b,!1,by,")",c,d):gy(b,!1,by,")",c,d);xy(f,b,a);return f===cy?cy:null}finally{zy=e}}if("undefined"===typeof Ay)var Ay={};
function By(a,b,c,d){var e=n(Mw(a))?Gw(a):-1;a:for(var f=Ay,g=null;;)if(f===Ay){f=e;g=a;var k=c,p=d,q=fy?fy(g,!1,by,")",k,p):gy(g,!1,by,")",k,p);xy(q,g,f);if(C.b(q,cy))f=cy;else{var t=g,v=q;n(w.b(wy,v))&&$w(t,E(["Feature name ",v," is reserved"]));t=g;v=k;q=q instanceof O?C.b(Am,q)||Zd(w.b(v,uj),q):$w(t,E(["Feature should be a keyword: ",q]));n(q)?(k=fy?fy(g,!1,by,")",k,p):gy(g,!1,by,")",k,p),xy(k,g,f),k===cy&&(0>f?$w(g,E(["read-cond requires an even number of forms"])):$w(g,E(["read-cond starting on line ",
f," requires an even number of forms"]))),f=k):(f=yy(f,g,k,p),f=n(f)?f:Ay)}if(f===cy){c=cy;break a}g=null}else if(g!==cy)g=yy(e,a,c,d);else{c=f;break a}return c===cy?a:n(b)?null!=c&&(c.h&16777216||l===c.wd)?(b=ge(c),ia(ma,d,0,0).apply(null,b),a):$w(a,E(["Spliced form list in read-cond-splicing must implement ISequential"])):c}
function Cy(a,b,c,d){if($a(function(){if(n(c)){var a=go.a(c),b=new V(null,new m(null,2,[Eo,null,wp,null],null),null);return b.a?b.a(a):b(a)}return c}()))throw $i("Conditional read not allowed",new m(null,1,[no,vv],null));var e=a.aa(null);if(n(e))if(e=(b=C.b(e,"@"))?a.aa(null):e,b&&(dy||$w(a,E(["cond-splice not in list"]))),e=ww(e)?Dx(a):e,n(e)){if(ff(e,"("))throw $i("read-cond body must be a list",new m(null,1,[no,vv],null));e=zy;zy=function(){var a=zy;return n(a)?a:C.b(Eo,go.a(c))}();try{return n(zy)?
uw(hy(a,0,c,d),b):By(a,b,c,d)}finally{zy=e}}else return rx(a);else return rx(a)}var Dy=null;function Ey(a){return Sc.a([r.a(-1===a?"rest":["p",r.a(a)].join("")),"__",r.a(Ef.b(Aw,ed)),"#"].join(""))}
function Fy(a,b,c,d){if(n(Dy))throw $i("Nested #()s are not allowed",new m(null,1,[no,Nq],null));b=Dy;Dy=Gh();try{Fw(a,"(");var e=ry?ry(a,!0,null,c,d):gy(a,!0,null,c,d);var f=kc(Dy),g=f?function(){var a=Kb(y(f)),b=function(){for(var b=1,c=oc(H);;){if(b>a)return qc(c);var d=b+1;c=Xe.b(c,function(){var a=w.b(Dy,b);return n(a)?a:Ey(b)}());b=d}}();return n(Dy.a?Dy.a(-1):Dy(-1))?Ad.g(b,oj,E([Dy.a?Dy.a(-1):Dy(-1)])):b}():H;return vb(vb(vb(Wc,e),g),rr)}finally{Dy=b}}
function Gy(a){if(n(Dy)){var b=Dy.a?Dy.a(a):Dy(a);if(n(b))return b;b=Ey(a);Dy=Dd.c(Dy,a,b);return b}throw $i("Arg literal not in #()",new m(null,1,[no,Nq],null));}function Hy(a,b,c,d){if(null==Dy)return oy(a,b);b=a.Oa(null);if(ww(b)||Nx(b)||null==b)return Gy(1);if(C.b(b,"\x26"))return a.aa(null),Gy(-1);a=ry?ry(a,!0,null,c,d):gy(a,!0,null,c,d);if(Yd(a))return Gy(a);throw $i("Arg literal must be %, %\x26 or %integer",new m(null,1,[no,Nq],null));}var Iy=null;
function Jy(a,b,c,d){b=a.Oa(null);if(n(b)){if(C.b("@",b))return a.aa(null),b=qy(Qq),b.A?b.A(a,"@",c,d):b(a,"@",c,d);b=qy(Ns);return b.A?b.A(a,"~",c,d):b(a,"~",c,d)}return null}function Ky(a){return Wd(a)&&C.b(y(a),Qq)}function Ly(a){return Wd(a)&&C.b(y(a),Ns)}function My(a){a=x(a);for(var b=oc(H);;)if(a){var c=y(a);b=Xe.b(b,n(Ly(c))?vb(function(){var a=yd(c);return vb(Wc,a)}(),wk):n(Ky(c))?yd(c):vb(function(){var a=Ny.a?Ny.a(c):Ny(c);return vb(Wc,a)}(),wk));a=B(a)}else return x(qc(b))}
function Oy(a){a=x(a);for(var b=oc(H);;)if(a){var c=y(a);a=B(a);b=Xe.b(Xe.b(b,Kb(c)),Lb(c))}else return x(qc(b))}function Py(a){if($a(Iy))throw $i("Gensym literal not in syntax-quote",new m(null,1,[no,Nq],null));var b=w.b(Iy,a);if(n(b))return b;b=Sc.a([r.a(ze(Le(a),D(Le(a))-1)),"__",r.a(Ef.b(Aw,ed)),"__auto__"].join(""));Iy=Dd.c(Iy,a,b);return b}
function Qy(a,b){return function(){var b=null!=a?a.h&262144||l===a.Ad?!0:!1:!1;return b?x(Fd.g(Kd(a),kr,E([Kp,Ts,Nn,wn,Io]))):b}()?vb(function(){var c=Kd(a);c=Ny.a?Ny.a(c):Ny(c);c=vb(Wc,c);return vb(c,b)}(),gp):b}function Ry(a,b){var c=vd(zn,My(b));c=vb(Wc,c);c=vb(c,st);return n(a)?vb(vb(vb(Wc,c),a),rm):c}function Sy(a){throw $i("resolve-symbol is not implemented",new m(null,1,[Bp,a],null));}
function Ny(a){if(Zd(new V(null,new m(null,23,[oj,null,Jj,null,Uj,null,dm,null,wm,null,Jm,null,xo,null,$o,null,ep,null,rp,null,xp,null,Rq,null,Uq,null,dr,null,rr,null,vr,null,It,null,Yt,null,au,null,eu,null,Eu,null,wv,null,Yv,null],null),null),a))var b=vb(vb(Wc,a),eu);else if(a instanceof u)b=vb(function(){var b=n(function(){var b=$a(Ie(a));return b?(b=Le(a),ja(b,"#")):b}())?Py(a):function(){var b=""+r.a(a);return n(ja(b,"."))?(b=Sc.a(ze(b,D(b)-1)),Sc.a([r.a(Sy.a?Sy.a(b):Sy(b)),"."].join(""))):Sy.a?
Sy.a(a):Sy(a)}();return vb(Wc,b)}(),eu);else if(n(Ly(a)))b=yd(a);else{if(n(Ky(a)))throw $i("unquote-splice not in list",new m(null,1,[no,Nq],null));if(Od(a))if(null!=a&&(a.h&67108864||l===a.ae))b=a;else if(L(a))b=Ry(16<=D(a)?gm:Al,Oy(a));else if(Sd(a))b=vb(function(){var b=Ry(null,a);return vb(Wc,b)}(),bt);else if(Pd(a))b=Ry(iv,a);else if(Wd(a)||Be(a))b=function(){var b=x(a);return b?Ry(null,b):N(lv)}();else throw $i("Unknown Collection type",new m(null,1,[no,Jt],null));else b=n(function(){var b=
a instanceof O;if(b||(b="number"===typeof a)||(b="string"===typeof a)||(b=null==a))return b;b=a instanceof Boolean||!0===a||!1===a;return n(b)?b:a instanceof RegExp}())?a:vb(vb(Wc,a),eu)}return Qy(a,b)}function Ty(a,b,c,d){b=Iy;Iy=jf;try{return Ny(ry?ry(a,!0,null,c,d):gy(a,!0,null,c,d))}finally{Iy=b}}
function Uy(a,b,c,d){var e=Px(a,al,Dw(a));b=C.b(e,":")?null.name:C.b(":",y(e))?function(){var a=null==e?null:e.substring(1);a=null==a?null:Kx(a);a=null==a?null:Cw(a);a=null==a?null:Sc.a(a);if(null==a)a=null;else{var b=w.b(null,a);n(b)?a=b:(a=hj(a),a=n(a)?Sc.a(a.name):null)}return a}():function(){var a=null==e?null:Kx(e);return null==a?null:Cw(a)}();return n(b)?"{"===Dx(a)?(c=ey(al,"}",a,c,d),!qf(D(c))&&dx(a,null,null,c),d=Bw(""+r.a(b),Zh(2,c)),c=Zh(2,Vc(c)),C.b(D(Rh(d)),D(d))||Bx(a,al,d),Th(d,c)):
wx(a,e):xx(a,e)}function Yx(a){switch(a){case '"':return my;case ":":return py;case ";":return Lx;case "'":return qy(eu);case "@":return qy(Xr);case "^":return sy;case "`":return Ty;case "~":return Jy;case "(":return hy;case ")":return Tx;case "[":return iy;case "]":return Tx;case "{":return jy;case "}":return Tx;case "\\":return Zx;case "%":return Hy;case "#":return Qx;default:return null}}
function Rx(a){switch(a){case "^":return sy;case "'":return qy(au);case "(":return Fy;case "{":return ty;case "\x3c":return Mx("Unreadable form");case "\x3d":return Mx("read-eval not supported");case '"':return Ux;case "!":return Lx;case "_":return uy;case "?":return Cy;case ":":return Uy;case "#":return vy;default:return null}}
function Sx(a,b,c,d){b=ry?ry(a,!0,null,c,d):gy(a,!0,null,c,d);b instanceof u||yx(a,b);if(n(zy)){a=ry?ry(a,!0,null,c,d):gy(a,!0,null,c,d);if(!(b instanceof u))throw Error("Assert failed: (symbol? tag)");return new bj(b,a)}var e=jf.a?jf.a(b):jf(b);e=n(e)?e:jf.a?jf.a(b):jf(b);return n(e)?(b=ry?ry(a,!0,null,c,d):gy(a,!0,null,c,d),e.a?e.a(b):e(b)):n(Vy)?(e=Vy,a=ry?ry(a,!0,null,c,d):gy(a,!0,null,c,d),e.b?e.b(b,a):e(b,a)):zx(a,b)}var Vy=null,zy=!1;
function gy(a){switch(arguments.length){case 5:return ry(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4]);case 6:return fy(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5]);default:throw Error(["Invalid arity: ",r.a(arguments.length)].join(""));}}function ry(a,b,c,d,e){return fy(a,b,c,null,d,e)}
function fy(a,b,c,d,e,f){try{a:for(;;)if(0==f.length){var g=a.aa(null);if(!ww(g)){if(null==g){var k=b?Cx(a,null):c;break a}if(g===d){k=cy;break a}if(xw(g)||("+"===g||"-"===g)&&xw(a.Oa(null))){k=ky(a,g);break a}var p=Yx(g);if(null!=p){var q=p.A?p.A(a,g,e,f):p(a,g,e,f);if(q!==a){k=q;break a}}else{k=oy(a,g);break a}}}else{var t=f[0];Array.prototype.splice.call(f,0,1);k=t;break a}return k}catch(v){if(v instanceof Error){b=v;if(b instanceof Zi){c=b instanceof Zi?b.data:null;if(C.b(Kl,no.a(c)))throw b;
throw aj(b.message,Jh.g(E([new m(null,1,[no,Kl],null),c,n(Mw(a))?new m(null,3,[kr,a.oc(),Kp,a.nc(),wn,a.Uc],null):null])),b);}throw aj(b.message,Jh.g(E([new m(null,1,[no,Kl],null),n(Mw(a))?new m(null,3,[kr,a.oc(),Kp,a.nc(),wn,a.Uc],null):null])),b);}throw v;}}var Wy=function Wy(a){switch(arguments.length){case 1:return Wy.a(arguments[0]);case 2:return Wy.b(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",r.a(arguments.length)].join(""));}};Wy.a=function(a){return Wy.b(jf,a)};
Wy.b=function(a,b){if(n(n(b)?""!==b:b)){var c=Nw(b,1);var d=null!=a&&(a.h&64||l===a.G)?P(Fh,a):a,e=w.c(d,zu,mv);c=fy(c,C.b(e,mv),e,null,d,ge(H))}else c=null;return c};Wy.H=2;var Xy=function Xy(a){if(null!=a&&null!=a.Va)return a.Va(a);var c=Xy[ba(null==a?null:a)];if(null!=c)return c.a?c.a(a):c(a);c=Xy._;if(null!=c)return c.a?c.a(a):c(a);throw fb("Node.tag",a);},Yy=function Yy(a){if(null!=a&&null!=a.Ta)return a.Ta(a);var c=Yy[ba(null==a?null:a)];if(null!=c)return c.a?c.a(a):c(a);c=Yy._;if(null!=c)return c.a?c.a(a):c(a);throw fb("Node.printable-only?",a);},Zy=function Zy(a){if(null!=a&&null!=a.Ua)return a.Ua(a);var c=Zy[ba(null==a?null:a)];if(null!=c)return c.a?c.a(a):c(a);
c=Zy._;if(null!=c)return c.a?c.a(a):c(a);throw fb("Node.sexpr",a);},$y=function $y(a){if(null!=a&&null!=a.Sa)return a.Sa(a);var c=$y[ba(null==a?null:a)];if(null!=c)return c.a?c.a(a):c(a);c=$y._;if(null!=c)return c.a?c.a(a):c(a);throw fb("Node.length",a);},az=function az(a){if(null!=a&&null!=a.Y)return a.Y(a);var c=az[ba(null==a?null:a)];if(null!=c)return c.a?c.a(a):c(a);c=az._;if(null!=c)return c.a?c.a(a):c(a);throw fb("Node.string",a);};Xy.object=function(){return cm};Yy.object=function(){return!1};
Zy.object=function(a){return a};$y.object=function(a){return D(az(a))};az.object=function(a){return xi(E([a]))};function bz(a){return Gf.b(Zy,Sf(Yy,a))}function cz(a){return ke(oe,Gf.b($y,a))}function dz(a){return ke(r,Gf.b(az,a))}
var ez=function ez(a){if(null!=a&&null!=a.Kb)return!0;var c=ez[ba(null==a?null:a)];if(null!=c)return c.a?c.a(a):c(a);c=ez._;if(null!=c)return c.a?c.a(a):c(a);throw fb("InnerNode.inner?",a);},fz=function fz(a){if(null!=a&&null!=a.Jb)return a.children;var c=fz[ba(null==a?null:a)];if(null!=c)return c.a?c.a(a):c(a);c=fz._;if(null!=c)return c.a?c.a(a):c(a);throw fb("InnerNode.children",a);},gz=function gz(a,b){if(null!=a&&null!=a.vb)return a.vb(a,b);var d=gz[ba(null==a?null:a)];if(null!=d)return d.b?d.b(a,
b):d(a,b);d=gz._;if(null!=d)return d.b?d.b(a,b):d(a,b);throw fb("InnerNode.replace-children",a);};ez.object=function(){return!1};fz.object=function(){throw Error("UnsupportedOperationException");};gz.object=function(){throw Error("UnsupportedOperationException");};var hz=function hz(a){if(null!=a&&null!=a.Fa)return a.Fa(a);var c=hz[ba(null==a?null:a)];if(null!=c)return c.a?c.a(a):c(a);c=hz._;if(null!=c)return c.a?c.a(a):c(a);throw fb("NodeCoerceable.coerce",a);};function iz(a){for(var b=[],c=arguments.length,d=0;;)if(d<c)b.push(arguments[d]),d+=1;else break;return jz(arguments[0],arguments[1],2<b.length?new Uc(b.slice(2),0,null):null)}function jz(a,b,c){var d=Hw.a?Hw.a(a):Hw(a);a=Gw.a?Gw.a(a):Gw(a);throw Error([r.a(c),r.a(b)," [at line ",r.a(a),", column ",r.a(d),"]"].join(""));}function kz(a){return-1<["\r","\n"].indexOf(a)}function lz(a){return-1<["\t"," ",","].indexOf(a)}var mz=new Ga("");function nz(a,b){return oz(a,b,$a(b.a?b.a(null):b(null)))}
function oz(a,b,c){for(mz.clear();;){var d=Dw.a?Dw.a(a):Dw(a);if(n(d))if(n(b.a?b.a(d):b(d)))mz.append(d);else return Fw.b?Fw.b(a,d):Fw(a,d),mz.toString();else return n(c)?mz.toString():iz(a,"Unexpected EOF.")}}function pz(a,b){return oz(a,rf(b),b.a?b.a(null):b(null))}function qz(a){return[r.a(pz(a,function(a){return null==a||kz(a)})),r.a(Dw.a?Dw.a(a):Dw(a))].join("")}function rz(a){Dw.a?Dw.a(a):Dw(a);return null}function sz(a){Dw.a?Dw.a(a):Dw(a)}
function tz(a,b){return ei(Vh(me,Mf(function(){return b.a?b.a(a):b(a)})))}function uz(a){var b=Px(a,tr,Dw.a?Dw.a(a):Dw(a)),c=hi("^[:]?([^0-9/].*/)?([^0-9/][^/]*)$").exec(b);var d=null!=c&&c[0]===b?1===c.length?c[0]:c:null;b=d[0];c=d[1];d=d[2];return void 0!==c&&":/"===c.substring(c.length-2,c.length)||":"===d[d.length-1]||-1!==b.indexOf("::",1)?$w(a,E(["Invalid token: ",b])):null!=c&&0<c.length?Ke.b(c.substring(0,c.indexOf("/")),d):Ke.a(b.substring(1))};function vz(a){return['"',r.a(a),'"'].join("")}function wz(a,b,c,d){this.lines=a;this.s=b;this.f=c;this.j=d;this.h=2229667594;this.C=139264}h=wz.prototype;h.toString=function(){return this.Y(null)};h.R=function(a,b){return this.F(null,b,null)};h.F=function(a,b,c){switch(b instanceof O?b.$:null){case "lines":return this.lines;default:return w.c(this.f,b,c)}};
h.N=function(a,b,c){return ii(b,function(){return function(a){return ii(b,qi,""," ","",c,a)}}(this),"#rewrite-clj.node.stringz.StringNode{",", ","}",c,We.b(new R(null,1,5,S,[new R(null,2,5,S,[Un,this.lines],null)],null),this.f))};h.ca=function(){return new Fg(0,this,1,new R(null,1,5,S,[Un],null),n(this.f)?Dc(this.f):hf())};h.L=function(){return this.s};h.S=function(){return 1+D(this.f)};
h.M=function(){var a=this,b=this.j;if(null!=b)return b;var c=function(){return function(){return function(a){return 1538615006^cd(a)}}(b,a)(a)}();return this.j=c};h.D=function(a,b){return null!=b&&this.constructor===b.constructor&&C.b(this.lines,b.lines)&&C.b(this.f,b.f)};h.Va=function(){return B(this.lines)?gl:sq};h.Ta=function(){return!1};h.Ua=function(){return ow(Gf.b(tf.b(Wy,vz),this.lines))};h.Sa=function(){return 2+ke(oe,Gf.b(D,this.lines))};h.Y=function(){return vz(ow(this.lines))};
h.oa=function(a,b){return Zd(new V(null,new m(null,1,[Un,null],null),null),b)?Fd.b(Wb(Tf.b(jf,this),this.s),b):new wz(this.lines,this.s,gf(Fd.b(this.f,b)),null)};h.P=function(a,b,c){return n(He.b?He.b(Un,b):He(Un,b))?new wz(c,this.s,this.f,null):new wz(this.lines,this.s,Dd.c(this.f,b,c),null)};h.O=function(){return x(We.b(new R(null,1,5,S,[new R(null,2,5,S,[Un,this.lines],null)],null),this.f))};h.J=function(a,b){return new wz(this.lines,b,this.f,this.j)};
h.T=function(a,b){return Sd(b)?this.P(null,xb.b(b,0),xb.b(b,1)):mb(vb,this,b)};function xz(a){return"string"===typeof a?new wz(new R(null,1,5,S,[a],null),null,null,null):new wz(a,null,null,null)};function yz(a,b,c,d){this.xb=a;this.s=b;this.f=c;this.j=d;this.h=2229667594;this.C=139264}h=yz.prototype;h.toString=function(){return this.Y(null)};h.R=function(a,b){return this.F(null,b,null)};h.F=function(a,b,c){switch(b instanceof O?b.$:null){case "whitespace":return this.xb;default:return w.c(this.f,b,c)}};
h.N=function(a,b,c){return ii(b,function(){return function(a){return ii(b,qi,""," ","",c,a)}}(this),"#rewrite-clj.node.whitespace.WhitespaceNode{",", ","}",c,We.b(new R(null,1,5,S,[new R(null,2,5,S,[tl,this.xb],null)],null),this.f))};h.ca=function(){return new Fg(0,this,1,new R(null,1,5,S,[tl],null),n(this.f)?Dc(this.f):hf())};h.L=function(){return this.s};h.S=function(){return 1+D(this.f)};
h.M=function(){var a=this,b=this.j;if(null!=b)return b;var c=function(){return function(){return function(a){return 1595850179^cd(a)}}(b,a)(a)}();return this.j=c};h.D=function(a,b){return null!=b&&this.constructor===b.constructor&&C.b(this.xb,b.xb)&&C.b(this.f,b.f)};h.Va=function(){return tl};h.Ta=function(){return!0};h.Ua=function(){throw Error("Unsupported operation");};h.Sa=function(){return D(this.xb)};h.Y=function(){return this.xb};
h.oa=function(a,b){return Zd(new V(null,new m(null,1,[tl,null],null),null),b)?Fd.b(Wb(Tf.b(jf,this),this.s),b):new yz(this.xb,this.s,gf(Fd.b(this.f,b)),null)};h.P=function(a,b,c){return n(He.b?He.b(tl,b):He(tl,b))?new yz(c,this.s,this.f,null):new yz(this.xb,this.s,Dd.c(this.f,b,c),null)};h.O=function(){return x(We.b(new R(null,1,5,S,[new R(null,2,5,S,[tl,this.xb],null)],null),this.f))};h.J=function(a,b){return new yz(this.xb,b,this.f,this.j)};
h.T=function(a,b){return Sd(b)?this.P(null,xb.b(b,0),xb.b(b,1)):mb(vb,this,b)};function zz(a){return new yz(a,null,null,null)}function Az(a,b,c,d){this.jb=a;this.s=b;this.f=c;this.j=d;this.h=2229667594;this.C=139264}h=Az.prototype;h.toString=function(){return this.Y(null)};h.R=function(a,b){return this.F(null,b,null)};h.F=function(a,b,c){switch(b instanceof O?b.$:null){case "newlines":return this.jb;default:return w.c(this.f,b,c)}};
h.N=function(a,b,c){return ii(b,function(){return function(a){return ii(b,qi,""," ","",c,a)}}(this),"#rewrite-clj.node.whitespace.NewlineNode{",", ","}",c,We.b(new R(null,1,5,S,[new R(null,2,5,S,[ok,this.jb],null)],null),this.f))};h.ca=function(){return new Fg(0,this,1,new R(null,1,5,S,[ok],null),n(this.f)?Dc(this.f):hf())};h.L=function(){return this.s};h.S=function(){return 1+D(this.f)};
h.M=function(){var a=this,b=this.j;if(null!=b)return b;var c=function(){return function(){return function(a){return 979711303^cd(a)}}(b,a)(a)}();return this.j=c};h.D=function(a,b){return null!=b&&this.constructor===b.constructor&&C.b(this.jb,b.jb)&&C.b(this.f,b.f)};h.Va=function(){return Hu};h.Ta=function(){return!0};h.Ua=function(){throw Error("Unsupported operation");};h.Sa=function(){return D.a?D.a(this.jb):D(this.jb)};h.Y=function(){return me.a?me.a(this.jb):this.jb};
h.oa=function(a,b){return Zd(new V(null,new m(null,1,[ok,null],null),null),b)?Fd.b(Wb(Tf.b(jf,this),this.s),b):new Az(this.jb,this.s,gf(Fd.b(this.f,b)),null)};h.P=function(a,b,c){return n(He.b?He.b(ok,b):He(ok,b))?new Az(c,this.s,this.f,null):new Az(this.jb,this.s,Dd.c(this.f,b,c),null)};h.O=function(){return x(We.b(new R(null,1,5,S,[new R(null,2,5,S,[ok,this.jb],null)],null),this.f))};h.J=function(a,b){return new Az(this.jb,b,this.f,this.j)};
h.T=function(a,b){return Sd(b)?this.P(null,xb.b(b,0),xb.b(b,1)):mb(vb,this,b)};function Bz(a){return zz(a)}function Cz(a){return new Az(a,null,null,null)}function Dz(a){return zz(P(r,Lf(a," ")))}var Ez=function(a){return function(b){return Sh(Of.b(b,Kf(a)))}}(zz(" "));function Fz(a){return Zd(new V(null,new m(null,2,[tl,null,Hu,null],null),null),Xy(a))};function Gz(a,b,c,d,e,f){this.tag=a;this.prefix=b;this.children=c;this.s=d;this.f=e;this.j=f;this.h=2229667594;this.C=139264}h=Gz.prototype;h.toString=function(){return this.Y(null)};h.R=function(a,b){return this.F(null,b,null)};h.F=function(a,b,c){switch(b instanceof O?b.$:null){case "tag":return this.tag;case "prefix":return this.prefix;case "children":return this.children;default:return w.c(this.f,b,c)}};
h.N=function(a,b,c){return ii(b,function(){return function(a){return ii(b,qi,""," ","",c,a)}}(this),"#rewrite-clj.node.meta.MetaNode{",", ","}",c,We.b(new R(null,3,5,S,[new R(null,2,5,S,[Nt,this.tag],null),new R(null,2,5,S,[Jp,this.prefix],null),new R(null,2,5,S,[nk,this.children],null)],null),this.f))};h.ca=function(){return new Fg(0,this,3,new R(null,3,5,S,[Nt,Jp,nk],null),n(this.f)?Dc(this.f):hf())};h.L=function(){return this.s};h.S=function(){return 3+D(this.f)};
h.M=function(){var a=this,b=this.j;if(null!=b)return b;var c=function(){return function(){return function(a){return 1501447658^cd(a)}}(b,a)(a)}();return this.j=c};h.D=function(a,b){return null!=b&&this.constructor===b.constructor&&C.b(this.tag,b.tag)&&C.b(this.prefix,b.prefix)&&C.b(this.children,b.children)&&C.b(this.f,b.f)};h.Va=function(){return this.tag};h.Ta=function(){return!1};h.Ua=function(){var a=bz(this.children),b=J(a,0,null);a=J(a,1,null);return Jd(a,L(b)?b:Ed([b,!0]))};
h.Sa=function(){return D(this.prefix)+cz(this.children)};h.Y=function(){return[r.a(this.prefix),r.a(dz(this.children))].join("")};h.oa=function(a,b){return Zd(new V(null,new m(null,3,[nk,null,Jp,null,Nt,null],null),null),b)?Fd.b(Wb(Tf.b(jf,this),this.s),b):new Gz(this.tag,this.prefix,this.children,this.s,gf(Fd.b(this.f,b)),null)};h.Kb=function(){return!0};h.Jb=function(){return this.children};h.vb=function(a,b){return Dd.c(this,nk,b)};
h.P=function(a,b,c){return n(He.b?He.b(Nt,b):He(Nt,b))?new Gz(c,this.prefix,this.children,this.s,this.f,null):n(He.b?He.b(Jp,b):He(Jp,b))?new Gz(this.tag,c,this.children,this.s,this.f,null):n(He.b?He.b(nk,b):He(nk,b))?new Gz(this.tag,this.prefix,c,this.s,this.f,null):new Gz(this.tag,this.prefix,this.children,this.s,Dd.c(this.f,b,c),null)};
h.O=function(){return x(We.b(new R(null,3,5,S,[new R(null,2,5,S,[Nt,this.tag],null),new R(null,2,5,S,[Jp,this.prefix],null),new R(null,2,5,S,[nk,this.children],null)],null),this.f))};h.J=function(a,b){return new Gz(this.tag,this.prefix,this.children,b,this.f,this.j)};h.T=function(a,b){return Sd(b)?this.P(null,xb.b(b,0),xb.b(b,1)):mb(vb,this,b)};
function Hz(a){switch(arguments.length){case 1:return Iz(arguments[0]);case 2:return Jz(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",r.a(arguments.length)].join(""));}}function Iz(a){return new Gz(Ta,"^",a,null,null,null)}function Jz(a,b){return Iz(new R(null,3,5,S,[a,Dz(1),b],null))};function Kz(a,b,c,d,e){this.value=a;this.sb=b;this.s=c;this.f=d;this.j=e;this.h=2229667594;this.C=139264}h=Kz.prototype;h.toString=function(){return this.Y(null)};h.R=function(a,b){return this.F(null,b,null)};h.F=function(a,b,c){switch(b instanceof O?b.$:null){case "value":return this.value;case "string-value":return this.sb;default:return w.c(this.f,b,c)}};
h.N=function(a,b,c){return ii(b,function(){return function(a){return ii(b,qi,""," ","",c,a)}}(this),"#rewrite-clj.node.token.TokenNode{",", ","}",c,We.b(new R(null,2,5,S,[new R(null,2,5,S,[jn,this.value],null),new R(null,2,5,S,[qq,this.sb],null)],null),this.f))};h.ca=function(){return new Fg(0,this,2,new R(null,2,5,S,[jn,qq],null),n(this.f)?Dc(this.f):hf())};h.L=function(){return this.s};h.S=function(){return 2+D(this.f)};
h.M=function(){var a=this,b=this.j;if(null!=b)return b;var c=function(){return function(){return function(a){return 1106307029^cd(a)}}(b,a)(a)}();return this.j=c};h.D=function(a,b){return null!=b&&this.constructor===b.constructor&&C.b(this.value,b.value)&&C.b(this.sb,b.sb)&&C.b(this.f,b.f)};h.Va=function(){return sq};h.Ta=function(){return!1};h.Ua=function(){return this.value};h.Sa=function(){return this.sb.length};h.Y=function(){return this.sb};
h.oa=function(a,b){return Zd(new V(null,new m(null,2,[jn,null,qq,null],null),null),b)?Fd.b(Wb(Tf.b(jf,this),this.s),b):new Kz(this.value,this.sb,this.s,gf(Fd.b(this.f,b)),null)};h.P=function(a,b,c){return n(He.b?He.b(jn,b):He(jn,b))?new Kz(c,this.sb,this.s,this.f,null):n(He.b?He.b(qq,b):He(qq,b))?new Kz(this.value,c,this.s,this.f,null):new Kz(this.value,this.sb,this.s,Dd.c(this.f,b,c),null)};
h.O=function(){return x(We.b(new R(null,2,5,S,[new R(null,2,5,S,[jn,this.value],null),new R(null,2,5,S,[qq,this.sb],null)],null),this.f))};h.J=function(a,b){return new Kz(this.value,this.sb,b,this.f,this.j)};h.T=function(a,b){return Sd(b)?this.P(null,xb.b(b,0),xb.b(b,1)):mb(vb,this,b)};function Lz(a,b){return new Kz(a,b,null,null,null)}
function Mz(a){switch(arguments.length){case 1:return Nz(arguments[0]);case 2:return Lz(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",r.a(arguments.length)].join(""));}}function Nz(a){return Oz(a,xi(E([a])))}function Oz(a,b){return Lz(a,b)};function Pz(a){return["[",r.a(a),"]"].join("")}function Qz(a){return["(",r.a(a),")"].join("")}function Rz(a){return["#{",r.a(a),"}"].join("")}function Sz(a){return["{",r.a(a),"}"].join("")}function Tz(a,b,c,d,e,f,g,k){this.tag=a;this.$a=b;this.eb=c;this.Ya=d;this.children=e;this.s=f;this.f=g;this.j=k;this.h=2229667594;this.C=139264}h=Tz.prototype;h.toString=function(){return this.Y(null)};h.R=function(a,b){return this.F(null,b,null)};
h.F=function(a,b,c){switch(b instanceof O?b.$:null){case "tag":return this.tag;case "wrap-fn":return this.$a;case "wrap-length":return this.eb;case "seq-fn":return this.Ya;case "children":return this.children;default:return w.c(this.f,b,c)}};
h.N=function(a,b,c){return ii(b,function(){return function(a){return ii(b,qi,""," ","",c,a)}}(this),"#rewrite-clj.node.seq.SeqNode{",", ","}",c,We.b(new R(null,5,5,S,[new R(null,2,5,S,[Nt,this.tag],null),new R(null,2,5,S,[Ls,this.$a],null),new R(null,2,5,S,[Ht,this.eb],null),new R(null,2,5,S,[Aq,this.Ya],null),new R(null,2,5,S,[nk,this.children],null)],null),this.f))};h.ca=function(){return new Fg(0,this,5,new R(null,5,5,S,[Nt,Ls,Ht,Aq,nk],null),n(this.f)?Dc(this.f):hf())};h.L=function(){return this.s};
h.S=function(){return 5+D(this.f)};h.M=function(){var a=this,b=this.j;if(null!=b)return b;var c=function(){return function(){return function(a){return 580297420^cd(a)}}(b,a)(a)}();return this.j=c};h.D=function(a,b){return null!=b&&this.constructor===b.constructor&&C.b(this.tag,b.tag)&&C.b(this.$a,b.$a)&&C.b(this.eb,b.eb)&&C.b(this.Ya,b.Ya)&&C.b(this.children,b.children)&&C.b(this.f,b.f)};h.Va=function(){return this.tag};h.Ta=function(){return!1};
h.Ua=function(){var a=bz(this.children);return this.Ya.a?this.Ya.a(a):this.Ya(a)};h.Sa=function(){return this.eb+cz(this.children)};h.Y=function(){var a=dz(this.children);return this.$a.a?this.$a.a(a):this.$a(a)};h.oa=function(a,b){return Zd(new V(null,new m(null,5,[nk,null,Aq,null,Ls,null,Ht,null,Nt,null],null),null),b)?Fd.b(Wb(Tf.b(jf,this),this.s),b):new Tz(this.tag,this.$a,this.eb,this.Ya,this.children,this.s,gf(Fd.b(this.f,b)),null)};h.Kb=function(){return!0};h.Jb=function(){return this.children};
h.vb=function(a,b){return Dd.c(this,nk,b)};
h.P=function(a,b,c){return n(He.b?He.b(Nt,b):He(Nt,b))?new Tz(c,this.$a,this.eb,this.Ya,this.children,this.s,this.f,null):n(He.b?He.b(Ls,b):He(Ls,b))?new Tz(this.tag,c,this.eb,this.Ya,this.children,this.s,this.f,null):n(He.b?He.b(Ht,b):He(Ht,b))?new Tz(this.tag,this.$a,c,this.Ya,this.children,this.s,this.f,null):n(He.b?He.b(Aq,b):He(Aq,b))?new Tz(this.tag,this.$a,this.eb,c,this.children,this.s,this.f,null):n(He.b?He.b(nk,b):He(nk,b))?new Tz(this.tag,this.$a,this.eb,this.Ya,c,this.s,this.f,null):new Tz(this.tag,
this.$a,this.eb,this.Ya,this.children,this.s,Dd.c(this.f,b,c),null)};h.O=function(){return x(We.b(new R(null,5,5,S,[new R(null,2,5,S,[Nt,this.tag],null),new R(null,2,5,S,[Ls,this.$a],null),new R(null,2,5,S,[Ht,this.eb],null),new R(null,2,5,S,[Aq,this.Ya],null),new R(null,2,5,S,[nk,this.children],null)],null),this.f))};h.J=function(a,b){return new Tz(this.tag,this.$a,this.eb,this.Ya,this.children,b,this.f,this.j)};h.T=function(a,b){return Sd(b)?this.P(null,xb.b(b,0),xb.b(b,1)):mb(vb,this,b)};
function Uz(a,b,c,d,e){return new Tz(a,b,c,d,e,null,null,null)}function Vz(a){return Uz(pr,Qz,2,function(a){return P(N,a)},a)}function Wz(a){return Uz(To,Pz,2,qg,a)}function Xz(a){return Uz(gu,Rz,3,Rh,a)}function Yz(a){return Uz(kv,Sz,2,function(a){return P(Fh,a)},a)};function Zz(a,b,c){if(Be(c))return c=P(N,Gf.b(a,c)),b.a?b.a(c):b(c);if(Wd(c))return c=ei(Gf.b(a,c)),b.a?b.a(c):b(c);if(Rd(c))return c=mb(function(b,c){return Ad.b(b,a.a?a.a(c):a(c))},c,c),b.a?b.a(c):b(c);Od(c)&&(c=Tf.b(Bd(c),Gf.b(a,c)));return b.a?b.a(c):b(c)}var $z=function $z(a,b){return Zz(uf($z,a),me,a.a?a.a(b):a(b))};function aA(a,b){var c=qg(We.b(a,n(null)?vb(vb(Wc,null),oj):null));c=vb(vb(Wc,b),c);return vb(c,rr)}
function bA(a){var b=function(){return function f(a){return new Me(null,function(){for(;;){var b=x(a);if(b){if(Td(b)){var c=vc(b),e=D(c),q=Qe(e);a:for(var t=0;;)if(t<e){var v=xb.b(c,t);v=C.b(v,0)?"rest__":["p",r.a(v),"__"].join("");v=Le(Di(v));v=Sc.a([r.a(v),"#"].join(""));q.add(v);t+=1}else{c=!0;break a}return c?Se(q.Ga(),f(wc(b))):Se(q.Ga(),null)}q=y(b);q=C.b(q,0)?"rest__":["p",r.a(q),"__"].join("");q=Le(Di(q));return vd(Sc.a([r.a(q),"#"].join("")),f(Vc(b)))}return null}},null,null)}(Yh(Number.MAX_VALUE))}(),
c=Cf(0);a=$z(function(a,b,c){return function(b){a:{if(b instanceof u){var d=Le(b);if(C.b(d.indexOf("%"),0)){d=d.substring(1);if(C.b(d,"\x26"))d=0;else if(C.b(d,""))d=1;else if(n(fi(/\d+/,d)))d=parseInt(d);else throw Error("arg literal must be %, %\x26 or %integer.");Ef.c(c,pe,d);d=qd(a,d);break a}}d=null}return n(d)?d:b}}(b,!1,c),a);return aA(Hf.b(Tb(c),Vc(b)),a)}function cA(a,b,c,d){this.children=a;this.s=b;this.f=c;this.j=d;this.h=2229667594;this.C=139264}h=cA.prototype;h.toString=function(){return this.Y(null)};
h.R=function(a,b){return this.F(null,b,null)};h.F=function(a,b,c){switch(b instanceof O?b.$:null){case "children":return this.children;default:return w.c(this.f,b,c)}};h.N=function(a,b,c){return ii(b,function(){return function(a){return ii(b,qi,""," ","",c,a)}}(this),"#rewrite-clj.node.fn.FnNode{",", ","}",c,We.b(new R(null,1,5,S,[new R(null,2,5,S,[nk,this.children],null)],null),this.f))};h.ca=function(){return new Fg(0,this,1,new R(null,1,5,S,[nk],null),n(this.f)?Dc(this.f):hf())};h.L=function(){return this.s};
h.S=function(){return 1+D(this.f)};h.M=function(){var a=this,b=this.j;if(null!=b)return b;var c=function(){return function(){return function(a){return-1740346885^cd(a)}}(b,a)(a)}();return this.j=c};h.D=function(a,b){return null!=b&&this.constructor===b.constructor&&C.b(this.children,b.children)&&C.b(this.f,b.f)};h.Va=function(){return Tk};h.Ta=function(){return!1};h.Ua=function(){return bA(bz(this.children))};h.Sa=function(){return 3+cz(this.children)};
h.Y=function(){return["#(",r.a(dz(this.children)),")"].join("")};h.oa=function(a,b){return Zd(new V(null,new m(null,1,[nk,null],null),null),b)?Fd.b(Wb(Tf.b(jf,this),this.s),b):new cA(this.children,this.s,gf(Fd.b(this.f,b)),null)};h.Kb=function(){return!0};h.Jb=function(){return this.children};h.vb=function(a,b){return Dd.c(this,nk,b)};h.P=function(a,b,c){return n(He.b?He.b(nk,b):He(nk,b))?new cA(c,this.s,this.f,null):new cA(this.children,this.s,Dd.c(this.f,b,c),null)};
h.O=function(){return x(We.b(new R(null,1,5,S,[new R(null,2,5,S,[nk,this.children],null)],null),this.f))};h.J=function(a,b){return new cA(this.children,b,this.f,this.j)};h.T=function(a,b){return Sd(b)?this.P(null,xb.b(b,0),xb.b(b,1)):mb(vb,this,b)};function dA(a){return new cA(a,null,null,null)};function eA(a,b,c,d,e,f,g,k,p){this.tag=a;this.prefix=b;this.Za=c;this.Ka=d;this.bb=e;this.children=f;this.s=g;this.f=k;this.j=p;this.h=2229667594;this.C=139264}h=eA.prototype;h.toString=function(){return this.Y(null)};h.R=function(a,b){return this.F(null,b,null)};
h.F=function(a,b,c){switch(b instanceof O?b.$:null){case "tag":return this.tag;case "prefix":return this.prefix;case "suffix":return this.Za;case "sexpr-fn":return this.Ka;case "sexpr-count":return this.bb;case "children":return this.children;default:return w.c(this.f,b,c)}};
h.N=function(a,b,c){return ii(b,function(){return function(a){return ii(b,qi,""," ","",c,a)}}(this),"#rewrite-clj.node.reader-macro.ReaderNode{",", ","}",c,We.b(new R(null,6,5,S,[new R(null,2,5,S,[Nt,this.tag],null),new R(null,2,5,S,[Jp,this.prefix],null),new R(null,2,5,S,[Oj,this.Za],null),new R(null,2,5,S,[mu,this.Ka],null),new R(null,2,5,S,[Bo,this.bb],null),new R(null,2,5,S,[nk,this.children],null)],null),this.f))};
h.ca=function(){return new Fg(0,this,6,new R(null,6,5,S,[Nt,Jp,Oj,mu,Bo,nk],null),n(this.f)?Dc(this.f):hf())};h.L=function(){return this.s};h.S=function(){return 6+D(this.f)};h.M=function(){var a=this,b=this.j;if(null!=b)return b;var c=function(){return function(){return function(a){return 1051800113^cd(a)}}(b,a)(a)}();return this.j=c};
h.D=function(a,b){return null!=b&&this.constructor===b.constructor&&C.b(this.tag,b.tag)&&C.b(this.prefix,b.prefix)&&C.b(this.Za,b.Za)&&C.b(this.Ka,b.Ka)&&C.b(this.bb,b.bb)&&C.b(this.children,b.children)&&C.b(this.f,b.f)};h.Va=function(){return this.tag};h.Ta=function(){return $a(this.Ka)};h.Ua=function(){if(n(this.Ka)){var a=bz(this.children);return this.Ka.a?this.Ka.a(a):this.Ka(a)}throw Error("Unsupported operation");};h.Sa=function(){return cz(this.children)+1+D(this.prefix)+D(this.Za)};
h.Y=function(){return["#",r.a(this.prefix),r.a(dz(this.children)),r.a(this.Za)].join("")};h.oa=function(a,b){return Zd(new V(null,new m(null,6,[Oj,null,nk,null,Bo,null,Jp,null,Nt,null,mu,null],null),null),b)?Fd.b(Wb(Tf.b(jf,this),this.s),b):new eA(this.tag,this.prefix,this.Za,this.Ka,this.bb,this.children,this.s,gf(Fd.b(this.f,b)),null)};h.Kb=function(){return!0};h.Jb=function(){return this.children};h.vb=function(a,b){return Dd.c(this,nk,b)};
h.P=function(a,b,c){return n(He.b?He.b(Nt,b):He(Nt,b))?new eA(c,this.prefix,this.Za,this.Ka,this.bb,this.children,this.s,this.f,null):n(He.b?He.b(Jp,b):He(Jp,b))?new eA(this.tag,c,this.Za,this.Ka,this.bb,this.children,this.s,this.f,null):n(He.b?He.b(Oj,b):He(Oj,b))?new eA(this.tag,this.prefix,c,this.Ka,this.bb,this.children,this.s,this.f,null):n(He.b?He.b(mu,b):He(mu,b))?new eA(this.tag,this.prefix,this.Za,c,this.bb,this.children,this.s,this.f,null):n(He.b?He.b(Bo,b):He(Bo,b))?new eA(this.tag,this.prefix,
this.Za,this.Ka,c,this.children,this.s,this.f,null):n(He.b?He.b(nk,b):He(nk,b))?new eA(this.tag,this.prefix,this.Za,this.Ka,this.bb,c,this.s,this.f,null):new eA(this.tag,this.prefix,this.Za,this.Ka,this.bb,this.children,this.s,Dd.c(this.f,b,c),null)};
h.O=function(){return x(We.b(new R(null,6,5,S,[new R(null,2,5,S,[Nt,this.tag],null),new R(null,2,5,S,[Jp,this.prefix],null),new R(null,2,5,S,[Oj,this.Za],null),new R(null,2,5,S,[mu,this.Ka],null),new R(null,2,5,S,[Bo,this.bb],null),new R(null,2,5,S,[nk,this.children],null)],null),this.f))};h.J=function(a,b){return new eA(this.tag,this.prefix,this.Za,this.Ka,this.bb,this.children,b,this.f,this.j)};h.T=function(a,b){return Sd(b)?this.P(null,xb.b(b,0),xb.b(b,1)):mb(vb,this,b)};
function fA(a,b,c,d){this.children=a;this.s=b;this.f=c;this.j=d;this.h=2229667594;this.C=139264}h=fA.prototype;h.toString=function(){return this.Y(null)};h.R=function(a,b){return this.F(null,b,null)};h.F=function(a,b,c){switch(b instanceof O?b.$:null){case "children":return this.children;default:return w.c(this.f,b,c)}};
h.N=function(a,b,c){return ii(b,function(){return function(a){return ii(b,qi,""," ","",c,a)}}(this),"#rewrite-clj.node.reader-macro.ReaderMacroNode{",", ","}",c,We.b(new R(null,1,5,S,[new R(null,2,5,S,[nk,this.children],null)],null),this.f))};h.ca=function(){return new Fg(0,this,1,new R(null,1,5,S,[nk],null),n(this.f)?Dc(this.f):hf())};h.L=function(){return this.s};h.S=function(){return 1+D(this.f)};
h.M=function(){var a=this,b=this.j;if(null!=b)return b;var c=function(){return function(){return function(a){return 856986356^cd(a)}}(b,a)(a)}();return this.j=c};h.D=function(a,b){return null!=b&&this.constructor===b.constructor&&C.b(this.children,b.children)&&C.b(this.f,b.f)};h.Va=function(){return $l};h.Ta=function(){return!1};h.Ua=function(){var a=this.Y(null);a=vb(Wc,a);return vb(a,Qt)};h.Sa=function(){return cz(this.children)+1};h.Y=function(){return["#",r.a(dz(this.children))].join("")};
h.oa=function(a,b){return Zd(new V(null,new m(null,1,[nk,null],null),null),b)?Fd.b(Wb(Tf.b(jf,this),this.s),b):new fA(this.children,this.s,gf(Fd.b(this.f,b)),null)};h.Kb=function(){return!0};h.Jb=function(){return this.children};h.vb=function(a,b){return Dd.c(this,nk,b)};h.P=function(a,b,c){return n(He.b?He.b(nk,b):He(nk,b))?new fA(c,this.s,this.f,null):new fA(this.children,this.s,Dd.c(this.f,b,c),null)};
h.O=function(){return x(We.b(new R(null,1,5,S,[new R(null,2,5,S,[nk,this.children],null)],null),this.f))};h.J=function(a,b){return new fA(this.children,b,this.f,this.j)};h.T=function(a,b){return Sd(b)?this.P(null,xb.b(b,0),xb.b(b,1)):mb(vb,this,b)};function gA(a){return new fA(a,null,null,null)}function hA(a,b,c,d){this.children=a;this.s=b;this.f=c;this.j=d;this.h=2229667594;this.C=139264}h=hA.prototype;h.toString=function(){return this.Y(null)};h.R=function(a,b){return this.F(null,b,null)};
h.F=function(a,b,c){switch(b instanceof O?b.$:null){case "children":return this.children;default:return w.c(this.f,b,c)}};h.N=function(a,b,c){return ii(b,function(){return function(a){return ii(b,qi,""," ","",c,a)}}(this),"#rewrite-clj.node.reader-macro.DerefNode{",", ","}",c,We.b(new R(null,1,5,S,[new R(null,2,5,S,[nk,this.children],null)],null),this.f))};h.ca=function(){return new Fg(0,this,1,new R(null,1,5,S,[nk],null),n(this.f)?Dc(this.f):hf())};h.L=function(){return this.s};
h.S=function(){return 1+D(this.f)};h.M=function(){var a=this,b=this.j;if(null!=b)return b;var c=function(){return function(){return function(a){return-1560233006^cd(a)}}(b,a)(a)}();return this.j=c};h.D=function(a,b){return null!=b&&this.constructor===b.constructor&&C.b(this.children,b.children)&&C.b(this.f,b.f)};h.Va=function(){return fs};h.Ta=function(){return!1};h.Ua=function(){var a=bz(this.children);return vd(bv,a)};h.Sa=function(){return cz(this.children)+1};h.Y=function(){return["@",r.a(dz(this.children))].join("")};
h.oa=function(a,b){return Zd(new V(null,new m(null,1,[nk,null],null),null),b)?Fd.b(Wb(Tf.b(jf,this),this.s),b):new hA(this.children,this.s,gf(Fd.b(this.f,b)),null)};h.Kb=function(){return!0};h.Jb=function(){return this.children};h.vb=function(a,b){return Dd.c(this,nk,b)};h.P=function(a,b,c){return n(He.b?He.b(nk,b):He(nk,b))?new hA(c,this.s,this.f,null):new hA(this.children,this.s,Dd.c(this.f,b,c),null)};
h.O=function(){return x(We.b(new R(null,1,5,S,[new R(null,2,5,S,[nk,this.children],null)],null),this.f))};h.J=function(a,b){return new hA(this.children,b,this.f,this.j)};h.T=function(a,b){return Sd(b)?this.P(null,xb.b(b,0),xb.b(b,1)):mb(vb,this,b)};function iA(a,b,c,d){return new eA(a,b,"",c,1,d,null,null,null)}function jA(a){for(;;){if(Qd(a))return iA(qr,"'",function(){return function(a){return vd(au,a)}}(a),a);a=new R(null,1,5,S,[a],null)}}
function kA(a){for(;;){if(Qd(a))return iA(mw,"\x3d",function(){return function(a){a=vd(eu,a);a=vb(Wc,a);return vb(a,Pl)}}(a),a);a=new R(null,1,5,S,[a],null)}}function lA(a){switch(arguments.length){case 1:return gA(arguments[0]);case 2:var b=arguments[1];return gA(new R(null,3,5,S,[arguments[0],Dz(1),b],null));default:throw Error(["Invalid arity: ",r.a(arguments.length)].join(""));}}function mA(a){return gA(a)}
function nA(a){return Qd(a)?new hA(a,null,null,null):new hA(new R(null,1,5,S,[a],null),null,null,null)};function oA(a,b,c,d,e){this.k=a;this.ib=b;this.s=c;this.f=d;this.j=e;this.h=2229667594;this.C=139264}h=oA.prototype;h.toString=function(){return this.Y(null)};h.R=function(a,b){return this.F(null,b,null)};h.F=function(a,b,c){switch(b instanceof O?b.$:null){case "k":return this.k;case "namespaced?":return this.ib;default:return w.c(this.f,b,c)}};
h.N=function(a,b,c){return ii(b,function(){return function(a){return ii(b,qi,""," ","",c,a)}}(this),"#rewrite-clj.node.keyword.KeywordNode{",", ","}",c,We.b(new R(null,2,5,S,[new R(null,2,5,S,[Ap,this.k],null),new R(null,2,5,S,[hr,this.ib],null)],null),this.f))};h.ca=function(){return new Fg(0,this,2,new R(null,2,5,S,[Ap,hr],null),n(this.f)?Dc(this.f):hf())};h.L=function(){return this.s};h.S=function(){return 2+D(this.f)};
h.M=function(){var a=this,b=this.j;if(null!=b)return b;var c=function(){return function(){return function(a){return-1681863292^cd(a)}}(b,a)(a)}();return this.j=c};h.D=function(a,b){return null!=b&&this.constructor===b.constructor&&C.b(this.k,b.k)&&C.b(this.ib,b.ib)&&C.b(this.f,b.f)};h.Va=function(){return sq};h.Ta=function(){return!1};h.Ua=function(){var a=this.ib;a=n(a)?$a(Ie(this.k)):a;if(n(a))throw Error("Namespaced keywords not supported !");return this.k};
h.Sa=function(){var a=D(Le(this.k))+1;if(n(this.ib))return a+1;var b=Ie(this.k);return n(b)?1+a+D(b):a};h.Y=function(){var a=xi(E([this.k]));return n(this.ib)?[":",r.a(a)].join(""):a};h.oa=function(a,b){return Zd(new V(null,new m(null,2,[Ap,null,hr,null],null),null),b)?Fd.b(Wb(Tf.b(jf,this),this.s),b):new oA(this.k,this.ib,this.s,gf(Fd.b(this.f,b)),null)};
h.P=function(a,b,c){return n(He.b?He.b(Ap,b):He(Ap,b))?new oA(c,this.ib,this.s,this.f,null):n(He.b?He.b(hr,b):He(hr,b))?new oA(this.k,c,this.s,this.f,null):new oA(this.k,this.ib,this.s,Dd.c(this.f,b,c),null)};h.O=function(){return x(We.b(new R(null,2,5,S,[new R(null,2,5,S,[Ap,this.k],null),new R(null,2,5,S,[hr,this.ib],null)],null),this.f))};h.J=function(a,b){return new oA(this.k,this.ib,b,this.f,this.j)};h.T=function(a,b){return Sd(b)?this.P(null,xb.b(b,0),xb.b(b,1)):mb(vb,this,b)};
function pA(a){for(var b=[],c=arguments.length,d=0;;)if(d<c)b.push(arguments[d]),d+=1;else break;c=arguments[0];b=J(1<b.length?new Uc(b.slice(1),0,null):null,0,null);return new oA(c,b,null,null,null)};function qA(a,b,c,d){this.K=a;this.s=b;this.f=c;this.j=d;this.h=2229667594;this.C=139264}h=qA.prototype;h.toString=function(){return this.Y(null)};h.R=function(a,b){return this.F(null,b,null)};h.F=function(a,b,c){switch(b instanceof O?b.$:null){case "s":return this.K;default:return w.c(this.f,b,c)}};
h.N=function(a,b,c){return ii(b,function(){return function(a){return ii(b,qi,""," ","",c,a)}}(this),"#rewrite-clj.node.comment.CommentNode{",", ","}",c,We.b(new R(null,1,5,S,[new R(null,2,5,S,[jp,this.K],null)],null),this.f))};h.ca=function(){return new Fg(0,this,1,new R(null,1,5,S,[jp],null),n(this.f)?Dc(this.f):hf())};h.L=function(){return this.s};h.S=function(){return 1+D(this.f)};
h.M=function(){var a=this,b=this.j;if(null!=b)return b;var c=function(){return function(){return function(a){return 495469178^cd(a)}}(b,a)(a)}();return this.j=c};h.D=function(a,b){return null!=b&&this.constructor===b.constructor&&C.b(this.K,b.K)&&C.b(this.f,b.f)};h.Va=function(){return is};h.Ta=function(){return!0};h.Ua=function(){throw Error("Unsupported operation");};h.Sa=function(){return 1+D(this.K)};h.Y=function(){return[";",r.a(this.K)].join("")};
h.oa=function(a,b){return Zd(new V(null,new m(null,1,[jp,null],null),null),b)?Fd.b(Wb(Tf.b(jf,this),this.s),b):new qA(this.K,this.s,gf(Fd.b(this.f,b)),null)};h.P=function(a,b,c){return n(He.b?He.b(jp,b):He(jp,b))?new qA(c,this.s,this.f,null):new qA(this.K,this.s,Dd.c(this.f,b,c),null)};h.O=function(){return x(We.b(new R(null,1,5,S,[new R(null,2,5,S,[jp,this.K],null)],null),this.f))};h.J=function(a,b){return new qA(this.K,b,this.f,this.j)};
h.T=function(a,b){return Sd(b)?this.P(null,xb.b(b,0),xb.b(b,1)):mb(vb,this,b)};function rA(a){return new qA(a,null,null,null)}function sA(a){return C.b(Xy(a),is)};function tA(a,b,c,d,e,f,g){this.tag=a;this.prefix=b;this.kb=c;this.children=d;this.s=e;this.f=f;this.j=g;this.h=2229667594;this.C=139264}h=tA.prototype;h.toString=function(){return this.Y(null)};h.R=function(a,b){return this.F(null,b,null)};h.F=function(a,b,c){switch(b instanceof O?b.$:null){case "tag":return this.tag;case "prefix":return this.prefix;case "sym":return this.kb;case "children":return this.children;default:return w.c(this.f,b,c)}};
h.N=function(a,b,c){return ii(b,function(){return function(a){return ii(b,qi,""," ","",c,a)}}(this),"#rewrite-clj.node.quote.QuoteNode{",", ","}",c,We.b(new R(null,4,5,S,[new R(null,2,5,S,[Nt,this.tag],null),new R(null,2,5,S,[Jp,this.prefix],null),new R(null,2,5,S,[Bp,this.kb],null),new R(null,2,5,S,[nk,this.children],null)],null),this.f))};h.ca=function(){return new Fg(0,this,4,new R(null,4,5,S,[Nt,Jp,Bp,nk],null),n(this.f)?Dc(this.f):hf())};h.L=function(){return this.s};
h.S=function(){return 4+D(this.f)};h.M=function(){var a=this,b=this.j;if(null!=b)return b;var c=function(){return function(){return function(a){return 1712251858^cd(a)}}(b,a)(a)}();return this.j=c};h.D=function(a,b){return null!=b&&this.constructor===b.constructor&&C.b(this.tag,b.tag)&&C.b(this.prefix,b.prefix)&&C.b(this.kb,b.kb)&&C.b(this.children,b.children)&&C.b(this.f,b.f)};h.Va=function(){return this.tag};h.Ta=function(){return!1};
h.Ua=function(){var a=this.kb;var b=y(bz(this.children));b=vb(Wc,b);return vb(b,a)};h.Sa=function(){return D(this.prefix)+cz(this.children)};h.Y=function(){return[r.a(this.prefix),r.a(dz(this.children))].join("")};h.oa=function(a,b){return Zd(new V(null,new m(null,4,[nk,null,Bp,null,Jp,null,Nt,null],null),null),b)?Fd.b(Wb(Tf.b(jf,this),this.s),b):new tA(this.tag,this.prefix,this.kb,this.children,this.s,gf(Fd.b(this.f,b)),null)};h.Kb=function(){return!0};h.Jb=function(){return this.children};
h.vb=function(a,b){return Dd.c(this,nk,b)};
h.P=function(a,b,c){return n(He.b?He.b(Nt,b):He(Nt,b))?new tA(c,this.prefix,this.kb,this.children,this.s,this.f,null):n(He.b?He.b(Jp,b):He(Jp,b))?new tA(this.tag,c,this.kb,this.children,this.s,this.f,null):n(He.b?He.b(Bp,b):He(Bp,b))?new tA(this.tag,this.prefix,c,this.children,this.s,this.f,null):n(He.b?He.b(nk,b):He(nk,b))?new tA(this.tag,this.prefix,this.kb,c,this.s,this.f,null):new tA(this.tag,this.prefix,this.kb,this.children,this.s,Dd.c(this.f,b,c),null)};
h.O=function(){return x(We.b(new R(null,4,5,S,[new R(null,2,5,S,[Nt,this.tag],null),new R(null,2,5,S,[Jp,this.prefix],null),new R(null,2,5,S,[Bp,this.kb],null),new R(null,2,5,S,[nk,this.children],null)],null),this.f))};h.J=function(a,b){return new tA(this.tag,this.prefix,this.kb,this.children,b,this.f,this.j)};h.T=function(a,b){return Sd(b)?this.P(null,xb.b(b,0),xb.b(b,1)):mb(vb,this,b)};function uA(a){for(;;){if(Qd(a))return new tA(sr,"'",eu,a,null,null,null);a=new R(null,1,5,S,[a],null)}}
function vA(a){for(;;){if(Qd(a))return new tA(uq,"`",eu,a,null,null,null);a=new R(null,1,5,S,[a],null)}}function wA(a){for(;;){if(Qd(a))return new tA(zm,"~",Lp,a,null,null,null);a=new R(null,1,5,S,[a],null)}}function xA(a){for(;;){if(Qd(a))return new tA(hl,"~@",Tn,a,null,null,null);a=new R(null,1,5,S,[a],null)}};function yA(a,b,c,d){this.children=a;this.s=b;this.f=c;this.j=d;this.h=2229667594;this.C=139264}h=yA.prototype;h.toString=function(){return this.Y(null)};h.R=function(a,b){return this.F(null,b,null)};h.F=function(a,b,c){switch(b instanceof O?b.$:null){case "children":return this.children;default:return w.c(this.f,b,c)}};
h.N=function(a,b,c){return ii(b,function(){return function(a){return ii(b,qi,""," ","",c,a)}}(this),"#rewrite-clj.node.uneval.UnevalNode{",", ","}",c,We.b(new R(null,1,5,S,[new R(null,2,5,S,[nk,this.children],null)],null),this.f))};h.ca=function(){return new Fg(0,this,1,new R(null,1,5,S,[nk],null),n(this.f)?Dc(this.f):hf())};h.L=function(){return this.s};h.S=function(){return 1+D(this.f)};
h.M=function(){var a=this,b=this.j;if(null!=b)return b;var c=function(){return function(){return function(a){return-1883175395^cd(a)}}(b,a)(a)}();return this.j=c};h.D=function(a,b){return null!=b&&this.constructor===b.constructor&&C.b(this.children,b.children)&&C.b(this.f,b.f)};h.Va=function(){return Xn};h.Ta=function(){return!0};h.Ua=function(){throw Error("Unsupported operation for unevalnode");};h.Sa=function(){return 2+cz(this.children)};h.Y=function(){return["#_",r.a(dz(this.children))].join("")};
h.oa=function(a,b){return Zd(new V(null,new m(null,1,[nk,null],null),null),b)?Fd.b(Wb(Tf.b(jf,this),this.s),b):new yA(this.children,this.s,gf(Fd.b(this.f,b)),null)};h.Kb=function(){return!0};h.Jb=function(){return this.children};h.vb=function(a,b){return Dd.c(this,nk,b)};h.P=function(a,b,c){return n(He.b?He.b(nk,b):He(nk,b))?new yA(c,this.s,this.f,null):new yA(this.children,this.s,Dd.c(this.f,b,c),null)};
h.O=function(){return x(We.b(new R(null,1,5,S,[new R(null,2,5,S,[nk,this.children],null)],null),this.f))};h.J=function(a,b){return new yA(this.children,b,this.f,this.j)};h.T=function(a,b){return Sd(b)?this.P(null,xb.b(b,0),xb.b(b,1)):mb(vb,this,b)};function zA(a){for(;;){if(Qd(a))return new yA(a,null,null,null);a=new R(null,1,5,S,[a],null)}};function AA(a,b,c,d){this.children=a;this.s=b;this.f=c;this.j=d;this.h=2229667594;this.C=139264}h=AA.prototype;h.toString=function(){return this.Y(null)};h.R=function(a,b){return this.F(null,b,null)};h.F=function(a,b,c){switch(b instanceof O?b.$:null){case "children":return this.children;default:return w.c(this.f,b,c)}};
h.N=function(a,b,c){return ii(b,function(){return function(a){return ii(b,qi,""," ","",c,a)}}(this),"#rewrite-clj.node.forms.FormsNode{",", ","}",c,We.b(new R(null,1,5,S,[new R(null,2,5,S,[nk,this.children],null)],null),this.f))};h.ca=function(){return new Fg(0,this,1,new R(null,1,5,S,[nk],null),n(this.f)?Dc(this.f):hf())};h.L=function(){return this.s};h.S=function(){return 1+D(this.f)};
h.M=function(){var a=this,b=this.j;if(null!=b)return b;var c=function(){return function(){return function(a){return 116885345^cd(a)}}(b,a)(a)}();return this.j=c};h.D=function(a,b){return null!=b&&this.constructor===b.constructor&&C.b(this.children,b.children)&&C.b(this.f,b.f)};h.Va=function(){return Av};h.Ta=function(){return!1};h.Ua=function(){var a=bz(this.children);return B(a)?vd(xo,a):y(a)};h.Sa=function(){return cz(this.children)};h.Y=function(){return dz(this.children)};
h.oa=function(a,b){return Zd(new V(null,new m(null,1,[nk,null],null),null),b)?Fd.b(Wb(Tf.b(jf,this),this.s),b):new AA(this.children,this.s,gf(Fd.b(this.f,b)),null)};h.Kb=function(){return!0};h.Jb=function(){return this.children};h.vb=function(a,b){return Dd.c(this,nk,b)};h.P=function(a,b,c){return n(He.b?He.b(nk,b):He(nk,b))?new AA(c,this.s,this.f,null):new AA(this.children,this.s,Dd.c(this.f,b,c),null)};
h.O=function(){return x(We.b(new R(null,1,5,S,[new R(null,2,5,S,[nk,this.children],null)],null),this.f))};h.J=function(a,b){return new AA(this.children,b,this.f,this.j)};h.T=function(a,b){return Sd(b)?this.P(null,xb.b(b,0),xb.b(b,1)):mb(vb,this,b)};function BA(a){return new AA(a,null,null,null)};function CA(a,b){if(null!=b&&(b.h&262144||l===b.Ad)){var c=Kd(b);return Nd(c)?a:Jz(hz(c),a)}return a}hz.object=function(a){return CA(Nz(a),a)};hz.number=function(a){return CA(Nz(a),a)};hz.string=function(a){return CA(xz(a),a)};function DA(a,b){var c=qg(Ez(Gf.b(hz,b)));c=a.a?a.a(c):a(c);return CA(c,b)}R.prototype.Fa=function(){return DA(Wz,this)};Ae.prototype.Fa=function(){return DA(Vz,this)};V.prototype.Fa=function(){return DA(Xz,this)};
var EA=function(a,b){return function(c){return qg(Sh(Qf(function(a,b){return function(c){var d=J(c,0,null);c=J(c,1,null);return new R(null,4,5,S,[hz(d),b,hz(c),a],null)}}(a,b),E([c]))))}}(zz(", "),zz(" "));jh.prototype.Fa=function(){return CA(Yz(EA(this)),this)};yz.prototype.Fa=function(){return this};Kz.prototype.Fa=function(){return this};Gz.prototype.Fa=function(){return this};hA.prototype.Fa=function(){return this};wz.prototype.Fa=function(){return this};oA.prototype.Fa=function(){return this};
Az.prototype.Fa=function(){return this};fA.prototype.Fa=function(){return this};AA.prototype.Fa=function(){return this};qA.prototype.Fa=function(){return this};Tz.prototype.Fa=function(){return this};tA.prototype.Fa=function(){return this};eA.prototype.Fa=function(){return this};cA.prototype.Fa=function(){return this};function FA(a){Dw.a?Dw.a(a):Dw(a);var b=Ew.a?Ew.a(a):Ew(a);if(n(b)){if(":"===b)return a=uz(a),pA.b?pA.b(a,!0):pA(a,!0);Fw.b?Fw.b(a,":"):Fw(a,":");a=uz(a);return pA.a?pA.a(a):pA(a)}return iz(a,"unexpected EOF while reading keyword.")};function GA(a,b){return(new Ga(a)).append(b).toString()}function HA(){return!1}function IA(a){return"'"===a||":"===a}function JA(a,b){return pz(a,function(a){var c;if(c=$a(b.a?b.a(a):b(a)))c=(c=-1<["\r","\n","\t"," ",","].indexOf(a))?c:-1<['"',":",";","'","@","^","`","~","(",")","[","]","{","}","\\",null].indexOf(a);return c})}
function KA(a){var b=Dw.a?Dw.a(a):Dw(a);if("\\"===b){var c=Dw.a?Dw.a(a):Dw(a);c=GA(c,"\\"!==c?JA(a,HA):"")}else c=JA(a,HA);b=GA(b,c);c=Wy.a?Wy.a(b):Wy(b);c instanceof u?(a=JA(a,IA),Nd(a)?a=Oz?Lz(c,b):Mz(c,b):(a=GA(b,a),b=Wy.a?Wy.a(a):Wy(a),a=Oz?Lz(b,a):Mz(b,a))):a=Oz?Lz(c,b):Mz(c,b);return a};function LA(a){if(kz(Ew.a?Ew.a(a):Ew(a)))return a=nz(a,kz),Cz.a?Cz.a(a):new Az(a,null,null,null);a=nz(a,lz);return Bz.a?Bz.a(a):zz(a)};function MA(a,b){var c=b.toString();b.set("");return Ad.b(a,c)}function NA(a){rz(a);for(var b=new Ga,c=!1,d=H;;){var e=Dw.a?Dw.a(a):Dw(a);if(n(e))if(c||'"'!==e)"\n"===e?d=MA(d,b):(b.append(e),c=!c&&"\\"===e);else return MA(d,b);else return iz(a,"Unexpected EOF while reading string.")}}function OA(a){a=NA(a);return xz.a?xz.a(a):xz(a)};var PA=null;function QA(a,b){rz(a);return tz(a,function(a){var c=PA;PA=b;try{return RA.a?RA.a(a):RA(a)}finally{PA=c}})}function SA(a){for(var b=[],c=arguments.length,d=0;;)if(d<c)b.push(arguments[d]),d+=1;else break;return TA(arguments[0],arguments[1],arguments[2],3<b.length?new Uc(b.slice(3),0,null):null)}
function TA(a,b,c,d){d=J(d,0,null);n(d)&&rz(a);a:{d=RA;for(var e=rf(Yy),f=0,g=H;;)if(f<c){var k=d.a?d.a(a):d(a);if(n(k))f=n(e.a?e.a(k):e(k))?f+1:f,g=Ad.b(g,k);else{a=jz(a,"%s node expects %d value%s.",E([b,c,C.b(c,1)?"":"s"]));break a}}else{a=g;break a}}return a}function UA(a){rz(a);a=SA(a,Ta,2);return Iz?Iz(a):Hz(a)}function VA(a){return n(PA)?iz(a,"Unexpected EOF."):null}function WA(a){a=QA(a,")");return Vz.a?Vz.a(a):Vz(a)}function XA(a){a=QA(a,"]");return Wz.a?Wz.a(a):Wz(a)}
function YA(a){a=QA(a,"}");return Yz.a?Yz.a(a):Yz(a)}function ZA(a){sz(a);var b=function(){return vd(function(){switch(Ew.a?Ew.a(a):Ew(a)){case "(":var b=Sc.a("?");return Nz?Nz(b):Mz(b);case "@":return sz(a),b=Sc.a("?@"),Nz?Nz(b):Mz(b);default:return Fw.b?Fw.b(a,"?"):Fw(a,"?"),y(SA(a,$l,1))}}(),SA(a,$l,1))}();return mA?gA(b):lA(b)}
function $A(a){rz(a);var b=a.Oa(null);if(C.b(null,b))return iz(a,"Unexpected EOF.");if(C.b("{",b))return a=QA(a,"}"),Xz.a?Xz.a(a):Xz(a);if(C.b("(",b))return a=QA(a,")"),dA.a?dA.a(a):new cA(a,null,null,null);if(C.b('"',b))return a=NA(a),b=ow(a),a=hi(b),b=['#"',r.a(b),'"'].join(""),Oz?Lz(a,b):Mz(a,b);if(C.b("^",b))return a=TA(a,Ta,2,E([!0])),Iz?Iz(a):Hz(a);if(C.b("'",b))return a=TA(a,qr,1,E([!0])),jA.a?jA.a(a):jA(a);if(C.b("\x3d",b))return a=TA(a,mw,1,E([!0])),kA.a?kA.a(a):kA(a);if(C.b("_",b))return a=
TA(a,Xn,1,E([!0])),zA.a?zA.a(a):zA(a);if(C.b("?",b))return ZA(a);a=SA(a,$l,2);return mA?gA(a):lA(a)}function aB(a){return jz(a,"Unmatched delimiter: %s",E([a.Oa(null)]))}function bB(a){a=TA(a,fs,1,E([!0]));return nA.a?nA.a(a):nA(a)}function cB(a){a=TA(a,sr,1,E([!0]));return uA.a?uA.a(a):uA(a)}function dB(a){a=TA(a,uq,1,E([!0]));return vA.a?vA.a(a):vA(a)}function eB(a){rz(a);var b=a.Oa(null);if(C.b(b,"@"))return a=TA(a,zm,1,E([!0])),xA.a?xA.a(a):xA(a);a=SA(a,zm,1);return wA.a?wA.a(a):wA(a)}
function fB(a){rz(a);a=qz(a);return rA.a?rA.a(a):new qA(a,null,null,null)}
function RA(a){var b=a.Oa(null);var c=null==b?VA:b===PA?rz:-1<["\r","\n","\t"," ",","].indexOf(b)?LA:"^"===b?UA:"#"===b?$A:"("===b?WA:"["===b?XA:"{"===b?YA:"}"===b?aB:"]"===b?aB:")"===b?aB:"~"===b?eB:"'"===b?cB:"`"===b?dB:";"===b?fB:"@"===b?bB:'"'===b?OA:":"===b?FA:KA;b=Gw.a?Gw.a(a):Gw(a);var d=Hw.a?Hw.a(a):Hw(a);c=c.a?c.a(a):c(a);if(n(c)){var e=Gw.a?Gw.a(a):Gw(a);a=Hw.a?Hw.a(a):Hw(a);a=C.b(0,a)?d+c.Y(null).length:a;b=C.b(0,d)?c:c.J(null,new m(null,4,[Pv,b,Ir,d,Fk,e,Mt,a],null))}else b=null;return b}
;function gB(a){var b=ei(Vh(me,Mf(function(){return RA(a)})));return Jd(BA.a?BA.a(b):new AA(b,null,null,null),Kd(y(b)))}function hB(a){return RA(Pw?Pw(a):Ow(a))}function iB(a){return gB(Pw?Pw(a):Ow(a))};function jB(a,b){var c=df(Uh,a,b);return vd(c,Sf(function(a){return function(b){return a===b}}(c),b))}function kB(a,b){return D(a)<D(b)?mb(Ad,b,a):mb(Ad,a,b)}var lB=function lB(a){switch(arguments.length){case 1:return lB.a(arguments[0]);case 2:return lB.b(arguments[0],arguments[1]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return lB.g(arguments[0],arguments[1],new Uc(c.slice(2),0,null))}};lB.a=function(a){return a};
lB.b=function(a,b){for(;;)if(D(b)<D(a)){var c=a;a=b;b=c}else return mb(function(a,b){return function(a,c){return Zd(b,c)?a:Md.b(a,c)}}(a,b),a,a)};lB.g=function(a,b,c){a=jB(function(a){return-D(a)},Ad.g(c,b,E([a])));return mb(lB,y(a),Vc(a))};lB.I=function(a){var b=y(a),c=B(a);a=y(c);c=B(c);return lB.g(b,a,c)};lB.H=2;
var mB=function mB(a){switch(arguments.length){case 1:return mB.a(arguments[0]);case 2:return mB.b(arguments[0],arguments[1]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return mB.g(arguments[0],arguments[1],new Uc(c.slice(2),0,null))}};mB.a=function(a){return a};mB.b=function(a,b){return D(a)<D(b)?mb(function(a,d){return Zd(b,d)?Md.b(a,d):a},a,a):mb(Md,a,b)};mB.g=function(a,b,c){return mb(mB,a,Ad.b(c,b))};
mB.I=function(a){var b=y(a),c=B(a);a=y(c);c=B(c);return mB.g(b,a,c)};mB.H=2;var Y=null,nB=null,oB=null,pB=null,qB=null,rB=null,sB=null,tB=null,uB=null,vB=null,wB=null,xB=null,yB=null,zB=null,AB=null,BB=null,CB=null,DB=null,EB=null,FB=null,GB=null,HB=null,IB=null,JB=null,KB=null,LB=null,MB=null,NB=null,OB=null,PB=null,QB=null,RB=null,SB=null,TB=null,UB=null,VB=null,WB=null,XB=null,YB=null,ZB=null,$B=null,aC=null,bC=null,cC=null,dC=null,eC=null,fC=null,gC=null,hC=null,iC=null;function jC(a){var b="#"!==a;return b&&(b="'"!==a)?(b=":"!==a)?kC.a?kC.a(a):kC(a):b:b}function lC(a){return"@"===a||"`"===a||"~"===a}function mC(a,b,c,d){if($a(c))return hx(a,b);if(n(n(d)?lC(c):d))return ix(a,b,c);d=new Ga;for(Fw(a,c);;){if(ww(c)||jC(c)||null==c)return""+r.a(d);if(lC(c))return ix(a,b,c);d.append(Dw(a));c=Ew(a)}}
function nC(a,b,c){b=Dw(a);if(n(b)){var d=oC.a?oC.a(b):oC(b);if(n(d))return d.c?d.c(a,b,c):d(a,b,c);Fw(a,b);c=pC.c?pC.c(a,b,c):pC(a,0,c);return n(c)?c:$w(a,E(["No dispatch macro for ",b,"."]))}return jx(a)}function qC(a,b){return $w(a,E(["Unmatched delimiter ",b,"."]))}function rC(a,b,c){b=1+b;D(a)!==b&&ex(a);for(var d=1,e=0;;){if(d===b)return String.fromCharCode(e);var f=Vx(qd(a,d),c);if(-1===f)return lx(qd(a,d),a);e=f+e*c;d+=1}}
function sC(a,b,c,d,e){for(var f=1,g=Vx(b,c);;){if(-1===g)return mx(a,b);if(f!==d){var k=Ew(a);var p=ww(k);p||(p=kC.a?kC.a(k):kC(k),p=n(p)?p:null==k);if(n(p))return n(e)?nx(a,f,d):String.fromCharCode(g);p=Vx(k,c);Dw(a);if(-1===p)return mx(a,k);g=p+g*c;f+=1}else return String.fromCharCode(g)}}
function tC(a){var b=Dw(a);if(null!=b){b=jC(b)||lC(b)||ww(b)?""+r.a(b):mC(a,jv,b,!1);var c=D(b);if(1===c)return qd(b,0);if("newline"===b)return"\n";if("space"===b)return" ";if("tab"===b)return"\t";if("backspace"===b)return"\b";if("formfeed"===b)return"\f";if("return"===b)return"\r";if(n(0==b.lastIndexOf("u",0)))return b=rC(b,4,16),c=b.charCodeAt(),0<c&&0>c?ox(a,b):b;if(n(0==b.lastIndexOf("o",0))){--c;if(3<c)return px(a,b);b=rC(b,c,8);return 255<(b|0)?qx(a):b}return $w(a,E(["Unsupported character: ",
b,"."]))}return rx(a)}function uC(a){return n(Mw(a))?new R(null,2,5,S,[Gw(a),(Hw(a)|0)-1|0],null):null}function vC(a,b,c,d){var e=uC(c),f=J(e,0,null);e=J(e,1,null);b=sw(b);for(var g=oc(H);;){var k=Dx(c);n(k)||cx(c,a,f,e,D(g));if(C.b(b,sw(k)))return qc(g);var p=kC.a?kC.a(k):kC(k);n(p)?k=p.c?p.c(c,k,d):p(c,k,d):(Fw(c,k),k=wC?wC(c,!0,null,d):xC(c,!0,null,d));g=k!==c?Xe.b(g,k):g}}function yC(a,b,c){a=vC(pr,")",a,c);return Nd(a)?Wc:P(N,a)}function zC(a,b,c){return vC(To,"]",a,c)}
function AC(a,b,c){var d=uC(a);b=J(d,0,null);d=J(d,1,null);c=vC(kv,"}",a,c);var e=D(c),f=Zh(2,c),g=Rh(f);!qf(e)&&dx(a,b,d,c);C.b(D(g),D(f))||Bx(a,kv,f);return e<=2*Og?Qg(ge(c)):lh(ge(c))}
function BC(a,b){for(var c=function(){var a=new Ga;a.append(b);return a}(),d=Dw(a);;){if(n(function(){var a=ww(d);if(a)return a;a=kC.a?kC.a(d):kC(d);return n(a)?a:null==d}())){var e=""+r.a(c);Fw(a,d);var f=Jx(e);return n(f)?f:$w(a,E(["Invalid number: ",e,"."]))}e=function(){var a=c;a.append(d);return a}();f=Dw(a);c=e;d=f}}
function CC(a){var b=Dw(a);switch(b){case "t":return"\t";case "r":return"\r";case "n":return"\n";case "\\":return"\\";case '"':return'"';case "b":return"\b";case "f":return"\f";case "u":return b=Dw(a),-1===parseInt(b|0,16)?fx(a,b):sC(a,b,16,4,!0);default:return xw(b)?(b=sC(a,b,8,3,!1),223<(b|0)?qx(a):b):sx(a,b)}}
function DC(a){for(var b=new Ga,c=Dw(a);;){var d=c;if(C.b(null,d))return kx(a,Po,E(['"',b]));if(C.b("\\",d)){d=function(){var c=b;c.append(CC(a));return c}();var e=Dw(a)}else{if(C.b('"',d))return""+r.a(b);d=function(){var a=b;a.append(c);return a}();e=Dw(a)}b=d;c=e}}
function EC(a,b){var c=mC(a,Qm,b,!0);if(n(c))switch(c){case "nil":return null;case "true":return!0;case "false":return!1;case "/":return qs;default:var d=Kx(c);d=n(d)?Sc.b(d.a?d.a(0):d(0),d.a?d.a(1):d(1)):null;return n(d)?d:gx(a,Qm,c)}else return null}function FC(a){var b=Dw(a);if(ww(b))return tx(a);b=mC(a,tr,b,!0);var c=Kx(b);if(n(n(c)?-1===b.indexOf("::"):c)){var d=c.a?c.a(0):c(0);c=c.a?c.a(1):c(1);return":"===qd(b,0)?gx(a,tr,b):Ke.b(d,c)}return gx(a,tr,b)}
function GC(a,b,c){b=zw(wC?wC(a,!0,null,c):xC(a,!0,null,c));L(b)||ux(a,b);c=wC?wC(a,!0,null,c):xC(a,!0,null,c);return null!=c&&(c.h&131072||l===c.zc)?Jd(c,Jh.g(E([Kd(c),b]))):vx(a,c)}function HC(a,b,c){b=vC(gu,"}",a,c);c=Rh(b);C.b(D(b),D(c))||Bx(a,gu,b);return c}function IC(a){wC?wC(a,!0,null,!0):xC(a,!0,null,!0);return a}
function JC(a,b,c){b=Dw(a);b=mC(a,al,b,!0);var d=null==b?null:Kx(b);d=null==d?null:Cw(d);return n(d)?"{"===Dx(a)?(c=vC(al,"}",a,c),!qf(D(c))&&dx(a,null,null,c),b=Bw(""+r.a(d),Zh(2,c)),c=Zh(2,Vc(c)),C.b(D(Rh(b)),D(b))||Bx(a,al,b),Th(b,c)):wx(a,b):xx(a,b)}function KC(a,b,c){b=wC?wC(a,!0,null,c):xC(a,!0,null,c);return C.b(Wm,b)?Number.NaN:C.b(ht,b)?Number.NEGATIVE_INFINITY:C.b(Fo,b)?Number.POSITIVE_INFINITY:$w(a,E([["Invalid token: ##",r.a(b)].join("")]))}
function kC(a){switch(a){case '"':return DC;case ":":return FC;case ";":return Lx;case "^":return GC;case "(":return yC;case ")":return qC;case "[":return zC;case "]":return qC;case "{":return AC;case "}":return qC;case "\\":return tC;case "#":return nC;default:return null}}function oC(a){switch(a){case "^":return GC;case "{":return HC;case "\x3c":return Mx("Unreadable form");case "!":return Lx;case "_":return IC;case ":":return JC;case "#":return KC;default:return null}}
function pC(a,b,c){b=wC?wC(a,!0,null,c):xC(a,!0,null,c);var d=wC?wC(a,!0,null,c):xC(a,!0,null,c);b instanceof u||yx(a,"Reader tag must be a symbol");var e=w.b(Ln.a(c),b);e=n(e)?e:jf.a?jf.a(b):jf(b);if(n(e))return e.a?e.a(d):e(d);c=Am.a(c);return n(c)?c.b?c.b(b,d):c(b,d):zx(a,b)}
function xC(a){switch(arguments.length){case 1:return LC(jf,arguments[0]);case 2:return LC(arguments[0],arguments[1]);case 4:return wC(arguments[0],arguments[1],arguments[2],arguments[3]);default:throw Error(["Invalid arity: ",r.a(arguments.length)].join(""));}}function LC(a,b){var c=null!=a&&(a.h&64||l===a.G)?P(Fh,a):a,d=w.b(c,zu),e=!Zd(c,zu);return wC(b,e,d,c)}
function wC(a,b,c,d){try{for(;;){var e=Dw(a);if(!ww(e)){if(null==e)return n(b)?Cx(a,null):c;if(xw(e)||("+"===e||"-"===e)&&xw(a.Oa(null)))return BC(a,e);var f=kC(e);if(n(f)){var g=f.c?f.c(a,e,d):f(a,e,d);if(g!==a)return g}else return EC(a,e)}}}catch(k){if(k instanceof Error){b=k;if(b instanceof Zi){c=b instanceof Zi?b.data:null;if(C.b(Kl,no.a(c)))throw b;throw aj(b.message,Jh.g(E([new m(null,1,[no,Kl],null),c,n(Mw(a))?new m(null,3,[kr,Gw(a),Kp,Hw(a),wn,Iw(a)],null):null])),b);}throw aj(b.message,Jh.g(E([new m(null,
1,[no,Kl],null),n(Mw(a))?new m(null,3,[kr,Gw(a),Kp,Hw(a),wn,Iw(a)],null):null])),b);}throw k;}};var MC=function(a,b){return function(c,d){return w.b(n(d)?b:a,c)}}(new R(null,13,5,S,[null,31,28,31,30,31,30,31,31,30,31,30,31],null),new R(null,13,5,S,[null,31,29,31,30,31,30,31,31,30,31,30,31],null)),NC=/(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;function OC(a){a=parseInt(a,10);return $a(isNaN(a))?a:null}
function PC(a,b,c,d){if(!(a<=b&&b<=c))throw Error([r.a(d)," Failed:  ",r.a(a),"\x3c\x3d",r.a(b),"\x3c\x3d",r.a(c)].join(""));return b}
function QC(a){var b=fi(NC,a);J(b,0,null);var c=J(b,1,null),d=J(b,2,null),e=J(b,3,null),f=J(b,4,null),g=J(b,5,null),k=J(b,6,null),p=J(b,7,null),q=J(b,8,null),t=J(b,9,null),v=J(b,10,null);if($a(b))throw Error(["Unrecognized date/time syntax: ",r.a(a)].join(""));var A=OC(c),z=function(){var a=OC(d);return n(a)?a:1}();a=function(){var a=OC(e);return n(a)?a:1}();b=function(){var a=OC(f);return n(a)?a:0}();c=function(){var a=OC(g);return n(a)?a:0}();var G=function(){var a=OC(k);return n(a)?a:0}(),F=function(){a:if(C.b(3,
D(p)))var a=p;else if(3<D(p))a=ze(p,3);else for(a=new Ga(p);;)if(3>a.Ob.length)a=a.append("0");else{a=a.toString();break a}a=OC(a);return n(a)?a:0}();q=(C.b(q,"-")?-1:1)*(60*function(){var a=OC(t);return n(a)?a:0}()+function(){var a=OC(v);return n(a)?a:0}());return new R(null,8,5,S,[A,PC(1,z,12,"timestamp month field must be in range 1..12"),PC(1,a,function(){var a=0===(A%4+4)%4;n(a)&&(a=$a(0===(A%100+100)%100),a=n(a)?a:0===(A%400+400)%400);return MC.b?MC.b(z,a):MC(z,a)}(),"timestamp day field must be in range 1..last day in month"),
PC(0,b,23,"timestamp hour field must be in range 0..23"),PC(0,c,59,"timestamp minute field must be in range 0..59"),PC(0,G,C.b(c,59)?60:59,"timestamp second field must be in range 0..60"),PC(0,F,999,"timestamp millisecond field must be in range 0..999"),q],null)}
var RC=Cf(null),SC=Cf(Jh.g(E([new m(null,4,[lo,function(a){if("string"===typeof a){var b=QC(a);if(n(b)){a=J(b,0,null);var c=J(b,1,null),d=J(b,2,null),e=J(b,3,null),f=J(b,4,null),g=J(b,5,null),k=J(b,6,null);b=J(b,7,null);b=new Date(Date.UTC(a,c-1,d,e,f,g,k)-6E4*b)}else throw Error(["Unrecognized date/time syntax: ",r.a(a)].join(""));return b}throw Error("Instance literal expects a string for its timestamp.");},qj,function(a){if("string"===typeof a)return Xi(a);throw Error("UUID literal expects a string as its representation.");
},Qo,function(a){if(Sd(a))return Tf.b(Bg,a);throw Error("Queue literal expects a vector for its elements.");},Kn,function(a){if(Sd(a)){var b=[];a=x(a);for(var c=null,d=0,e=0;;)if(e<d){var f=c.W(null,e);b.push(f);e+=1}else if(a=x(a))c=a,Td(c)?(a=vc(c),e=wc(c),c=a,d=D(a),a=e):(a=y(c),b.push(a),a=B(c),c=null,d=0),e=0;else break;return b}if(L(a)){b={};a=x(a);c=null;for(e=d=0;;)if(e<d){var g=c.W(null,e);f=J(g,0,null);g=J(g,1,null);var k=b;f=Le(f);k[f]=g;e+=1}else if(a=x(a))Td(a)?(d=vc(a),a=wc(a),c=d,d=
D(d)):(d=y(a),c=J(d,0,null),d=J(d,1,null),e=b,c=Le(c),e[c]=d,a=B(a),c=null,d=0),e=0;else break;return b}throw Error("JS literal expects a vector or map containing only string or unqualified keyword keys");}],null),jf])));function TC(a){var b=new m(null,3,[Ln,Tb(SC),Am,Tb(RC),zu,null],null);return n(n(a)?ff(a,""):a)?LC(b,Nw(a,1)):null};function UC(a){return xi(E([a]))}function VC(a){return xi(E([a]))}function WC(a){return L(a)?P(We,x(a)):x(a)}function XC(a,b){return Od(b)?Uf(a,B(b)):null}function YC(a,b){return Od(a)?xe(a,b):null}function ZC(a,b){if(Od(b))for(var c=b,d=0;;)if(n(c)){var e=y(c);e=a.a?a.a(e):a(e);if(n(e))return d;c=B(c);d+=1}else return null;else return null}function $C(a){return Od(a)?D(a):0}function aD(a,b){return Od(b)?Uf(a,b):H}function bD(){return new R(null,2,5,S,["root",H],null)}function cD(a){return y(a)}
function dD(a){return yd(a)}function eD(a){return qd(a,2)}function fD(a){return qd(a,3)}function gD(a){return Be(a)||Wd(a)}function hD(a){return Od(a)?zd(a):a}function iD(a){return n(a)?Ya(a):null}function jD(){return null}function kD(a){return Tb(a)}function lD(a){return Uf(me,a)}var mD=function mD(a){switch(arguments.length){case 2:return mD.b(arguments[0],arguments[1]);case 1:return mD.a(arguments[0]);default:throw Error(["Invalid arity: ",r.a(arguments.length)].join(""));}};
mD.b=function(a,b){var c=rw(nw(xi(E([a])),/^\#object\[/),/ /,3);return new R(null,3,5,S,[TC(y(c)),yd(c),b],null)};mD.a=function(a){a=rw(nw(nw(xi(E([a])),/^\#object\[/),/\]$/),/ /,3);return new R(null,3,5,S,[TC(y(a)),yd(a),TC(qd(a,2))],null)};mD.H=2;function nD(){return null}function oD(){return null}function pD(a){return a instanceof O||"string"===typeof a||"number"===typeof a}
function qD(a){function b(a){return a instanceof u?Sc.b(null,Le(a)):Ke.b(null,Le(a))}for(var c=null,d=H;;){var e=y(a),f=x(e),g=y(f),k=(f=B(f))&&(g instanceof O||g instanceof u)?Ie(g):null;if($a(g))return n(c)?new R(null,2,5,S,[c,d],null):null;if(n(k))if(n(c))if(C.b(c,k))a=B(a),d=Ad.b(d,vd(b(g),f));else return null;else c=k,a=B(a),d=Ad.b(d,vd(b(g),f));else if(C.b(D(e),1))a=B(a),d=Ad.b(d,e);else return null}}
function rD(a){var b=Y,c=nB,d=oB,e=pB,f=qB,g=rB,k=sB,p=tB,q=uB,t=vB,v=wB,A=xB,z=yB,G=zB,F=AB,I=BB,M=CB,Q=DB,U=EB,ea=FB,T=GB,K=HB,ua=IB,ca=KB,Ha=JB,fa=LB,Ua=MB,Nb=NB,db=OB,Sa=PB,zb=QB,ab=RB,ub=SB,qb=TB,jb=UB,Ea=WB,Oa=VB,Xb=YB,gc=XB,se=ZB,ae=$B,Zc=aC,ah=bC,Vf=cC,Nm=dC,Yf=eC,xl=fC,yl=gC,Dn=hC,dw=iC;Y=UC;nB=VC;oB=sf(!1);pB=me;qB=WC;rB=XC;tB=sB=cD;uB=dD;vB=eD;wB=fD;xB=YC;yB=$C;AB=zB=aD;BB=sf(!1);CB=Gd;DB=bD;EB=gD;FB=Sd;GB=L;HB=Pd;IB=Od;KB=sf(!1);JB=sf(!1);LB=sf(null);MB=hD;NB=iD;OB=jD;PB=kD;QB=Rd;RB=sf(!1);
SB=mD;TB=lD;UB=sf(!1);WB=sf(!1);VB=nD;YB=Ge;XB=Fi;ZB=pD;$B=oD;aC=sf(!1);bC=sf(Lu);cC=Qc;dC=Xa;eC=sf(!1);fC=sf(!1);gC=qD;hC=sf(!1);iC=ZC;try{return a.w?a.w():a()}finally{iC=dw,hC=Dn,gC=yl,fC=xl,eC=Yf,dC=Nm,cC=Vf,bC=ah,aC=Zc,$B=ae,ZB=se,XB=gc,YB=Xb,VB=Oa,WB=Ea,UB=jb,TB=qb,SB=ub,RB=ab,QB=zb,PB=Sa,OB=db,NB=Nb,MB=Ua,LB=fa,JB=Ha,KB=ca,IB=ua,HB=K,GB=T,FB=ea,EB=U,DB=Q,CB=M,BB=I,AB=F,zB=G,yB=z,xB=A,wB=v,vB=t,uB=q,tB=p,sB=k,rB=g,qB=f,pB=e,oB=d,nB=c,Y=b}};function sD(a,b){return C.b(a,b)?new R(null,3,5,S,[null,null,a],null):new R(null,3,5,S,[a,b,null],null)}function tD(a){return x(a)?mb(function(a,c){var b=J(c,0,null),e=J(c,1,null);return Dd.c(a,b,e)},qg(Lf(P(pe,Lg(a)),null)),a):null}
function uD(a,b,c){var d=w.b(a,c),e=w.b(b,c),f=vD.b?vD.b(d,e):vD(d,e),g=J(f,0,null),k=J(f,1,null);f=J(f,2,null);a=Zd(a,c);b=Zd(b,c);d=a&&b&&(null!=f||null==d&&null==e);return new R(null,3,5,S,[!a||null==g&&d?null:Ed([c,g]),!b||null==k&&d?null:Ed([c,k]),d?Ed([c,f]):null],null)}
var wD=function wD(a){switch(arguments.length){case 2:return wD.b(arguments[0],arguments[1]);case 3:return wD.c(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",r.a(arguments.length)].join(""));}};wD.b=function(a,b){return wD.c(a,b,kB(Lg(a),Lg(b)))};wD.c=function(a,b,c){return mb(function(a,b){return ei(Gf.c(Jh,a,b))},new R(null,3,5,S,[null,null,null],null),Gf.b(vf(uD,a,b),c))};wD.H=3;
function xD(a,b){return qg(Gf.b(tD,wD.c(Sd(a)?a:qg(a),Sd(b)?b:qg(b),Yh(function(){var c=D(a),d=D(b);return c>d?c:d}()))))}function yD(a,b){return new R(null,3,5,S,[gf(mB.b(a,b)),gf(mB.b(b,a)),gf(lB.b(a,b))],null)}
var zD=function zD(a){if(null!=a&&null!=a.me)return a.me(a);var c=zD[ba(null==a?null:a)];if(null!=c)return c.a?c.a(a):c(a);c=zD._;if(null!=c)return c.a?c.a(a):c(a);throw fb("EqualityPartition.equality-partition",a);},AD=function AD(a,b){if(null!=a&&null!=a.le)return a.le(a,b);var d=AD[ba(null==a?null:a)];if(null!=d)return d.b?d.b(a,b):d(a,b);d=AD._;if(null!=d)return d.b?d.b(a,b):d(a,b);throw fb("Diff.diff-similar",a);};zD["null"]=function(){return wu};zD.string=function(){return wu};zD.number=function(){return wu};
zD.array=function(){return Hm};zD["function"]=function(){return wu};zD["boolean"]=function(){return wu};zD._=function(a){return(null!=a?a.h&1024||l===a.Zd||(a.h?0:cb(Hb,a)):cb(Hb,a))?kv:(null!=a?a.h&4096||l===a.ee||(a.h?0:cb(Mb,a)):cb(Mb,a))?gu:(null!=a?a.h&16777216||l===a.wd||(a.h?0:cb(fc,a)):cb(fc,a))?Hm:wu};AD["null"]=function(a,b){return sD(a,b)};AD.string=function(a,b){return sD(a,b)};AD.number=function(a,b){return sD(a,b)};AD.array=function(a,b){return xD(a,b)};
AD["function"]=function(a,b){return sD(a,b)};AD["boolean"]=function(a,b){return sD(a,b)};AD._=function(a,b){var c=function(){var b=zD(a);b=b instanceof O?b.$:null;switch(b){case "atom":return sD;case "set":return yD;case "sequential":return xD;case "map":return wD;default:throw Error(["No matching clause: ",r.a(b)].join(""));}}();return c.b?c.b(a,b):c(a,b)};function vD(a,b){return C.b(a,b)?new R(null,3,5,S,[null,null,a],null):C.b(zD(a),zD(b))?AD(a,b):sD(a,b)};var BD,CD,DD,ED,FD,GD,HD,ID,JD=function JD(a,b){if(null!=a&&null!=a.Cb)return a.Cb(a,b);var d=JD[ba(null==a?null:a)];if(null!=d)return d.b?d.b(a,b):d(a,b);d=JD._;if(null!=d)return d.b?d.b(a,b):d(a,b);throw fb("Spec.conform*",a);},KD=function KD(a,b,c,d,e){if(null!=a&&null!=a.Db)return a.Db(a,b,c,d,e);var g=KD[ba(null==a?null:a)];if(null!=g)return g.V?g.V(a,b,c,d,e):g(a,b,c,d,e);g=KD._;if(null!=g)return g.V?g.V(a,b,c,d,e):g(a,b,c,d,e);throw fb("Spec.explain*",a);},LD=function LD(a,b){if(null!=a&&null!=
a.Eb)return a.Eb(a,b);var d=LD[ba(null==a?null:a)];if(null!=d)return d.b?d.b(a,b):d(a,b);d=LD._;if(null!=d)return d.b?d.b(a,b):d(a,b);throw fb("Spec.with-gen*",a);};if("undefined"===typeof MD)var MD=Cf(jf);function ND(a){if(Je(a)){var b=Tb(MD);a=w.b(b,a);if(Je(a))a:for(;;)if(Je(a))a=w.b(b,a);else{b=a;break a}else b=a;return b}return a}function OD(a){if(Je(a)){var b=ND(a);if(n(b))return b;throw Error(["Unable to resolve spec: ",r.a(a)].join(""));}return a}
function PD(a){return null!=a&&l===a.Rb?a:null}function QD(a){var b=ho.a(a);return n(b)?a:b}function RD(a,b){return Je(a)?a:n(QD(a))?Dd.c(a,kk,b):null!=a&&(a.h&131072||l===a.zc)?Jd(a,Dd.c(Kd(a),kk,b)):null}function SD(a){return Je(a)?a:n(QD(a))?kk.a(a):null!=a&&(a.h&131072||l===a.zc)?kk.a(Kd(a)):null}function TD(a){var b=function(){var b=(b=Je(a))?ND(a):b;if(n(b))return b;b=PD(a);if(n(b))return b;b=QD(a);return n(b)?b:null}();return n(QD(b))?RD(UD.b?UD.b(b,null):UD(b,null),SD(b)):b}
function VD(a){var b=TD(a);if(n(b))return b;if(Je(a))throw Error(["Unable to resolve spec: ",r.a(a)].join(""));return null}var WD=function WD(a){switch(arguments.length){case 1:return WD.a(arguments[0]);case 2:return WD.b(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",r.a(arguments.length)].join(""));}};
WD.a=function(a){if(null!=a&&null!=a.mb)return a.mb(a);var b=WD[ba(null==a?null:a)];if(null!=b)return b.a?b.a(a):b(a);b=WD._;if(null!=b)return b.a?b.a(a):b(a);throw fb("Specize.specize*",a);};WD.b=function(a,b){if(null!=a&&null!=a.nb)return a.nb(a,b);var c=WD[ba(null==a?null:a)];if(null!=c)return c.b?c.b(a,b):c(a,b);c=WD._;if(null!=c)return c.b?c.b(a,b):c(a,b);throw fb("Specize.specize*",a);};WD.H=2;O.prototype.mb=function(){return WD.a(OD(this))};O.prototype.nb=function(){return WD.a(OD(this))};
u.prototype.mb=function(){return WD.a(OD(this))};u.prototype.nb=function(){return WD.a(OD(this))};WD._=function(){function a(a,b){return XD?XD(b,a,null,null):YD(b,a,null,null)}function b(a){return XD?XD(bk,a,null,null):YD(bk,a,null,null)}var c=null;c=function(c,e){switch(arguments.length){case 1:return b.call(this,c);case 2:return a.call(this,c,e)}throw Error("Invalid arity: "+(arguments.length-1));};c.a=b;c.b=a;return c}();
var ZD=function ZD(a){switch(arguments.length){case 1:return ZD.a(arguments[0]);case 2:return ZD.b(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",r.a(arguments.length)].join(""));}};ZD.a=function(a){var b=PD(a);return n(b)?b:WD.a(a)};ZD.b=function(a,b){var c=PD(a);return n(c)?c:WD.b(a,b)};ZD.H=2;function $D(a){return He(xq,a)}function aE(a,b){var c=ND(a);return n(QD(c))?Dd.c(c,kn,b):LD(ZD.a(c),b)}
function bE(a){var b=H,c=SD(Kk);c=n(c)?new R(null,1,5,S,[c],null):H;var d=H;b=KD(ZD.a(Kk),b,c,d,a);return n(b)?Nd(b)?null:new m(null,3,[hp,b,Cn,Kk,gk,a],null):null}function Z(a,b,c){var d=PD(c);n(d)||(d=QD(c),d=n(d)?d:w.b(Tb(MD),c));b=n(d)?c:XD?XD(b,c,null,null):YD(b,c,null,null);Ef.A(MD,Dd,a,RD(b,a))}
function cE(a,b,c,d){if(n(a)){var e=VD(a);if(n(e))return JD(ZD.a(e),b);if(Gd(a)||(null!=a?a.h&1||l===a.cf||(a.h?0:cb(ob,a)):cb(ob,a)))return n(d)?a.a?a.a(b):a(b):n(a.a?a.a(b):a(b))?b:xq;throw Error([r.a(xi(E([c])))," is not a fn, expected predicate fn"].join(""));}return b}function dE(a,b){var c=ZD.a(a);return $a($D(JD(c,b)))}function eE(a,b){return $a($D(cE(a,b,bk,null)))}
function fE(a,b,c,d,e,f){b=TD(b);n(PD(b))?(a=SD(b),d=n(a)?Ad.b(d,a):d,c=KD(b,c,d,e,f)):c=new R(null,1,5,S,[new m(null,5,[rj,c,pl,a,Bi,f,Dm,d,Tv,e],null)],null);return c}
var gE=function gE(a){var c=null!=a&&(a.h&64||l===a.G)?P(Fh,a):a,d=w.b(c,cw),e=w.b(c,yj),f=w.b(c,zj),g=w.b(c,ik),k=w.b(c,xk),p=w.b(c,Ek),q=w.b(c,kl),t=w.b(c,en),v=w.b(c,Eq),A=w.b(c,vs),z=w.b(c,Ps),G=w.b(c,mt),F=Th(We.b(A,q),We.b(t,z)),I=function(a){return function(c){var d=a.a?a.a(c):a(c);return n(d)?d:c}}(F,a,c,c,d,e,f,g,k,p,q,t,v,A,z,G),M=Yi();"undefined"===typeof BD&&(BD=function(a,c,d,e,f,g,k,p,q,t,v,z,A,F,G,I,M,jb,Ea){this.Qa=a;this.Me=c;this.Xe=d;this.Pe=e;this.Wa=f;this.Ld=g;this.Wc=k;this.nd=
p;this.Ne=q;this.We=t;this.Qe=v;this.Ue=z;this.id=A;this.Ve=F;this.Oe=G;this.ze=I;this.xe=M;this.Md=jb;this.Ce=Ea;this.h=393216;this.C=0},BD.prototype.J=function(){return function(a,c){return new BD(this.Qa,this.Me,this.Xe,this.Pe,this.Wa,this.Ld,this.Wc,this.nd,this.Ne,this.We,this.Qe,this.Ue,this.id,this.Ve,this.Oe,this.ze,this.xe,this.Md,c)}}(F,I,M,a,c,c,d,e,f,g,k,p,q,t,v,A,z,G),BD.prototype.L=function(){return function(){return this.Ce}}(F,I,M,a,c,c,d,e,f,g,k,p,q,t,v,A,z,G),BD.prototype.mb=function(){return function(){return this}}(F,
I,M,a,c,c,d,e,f,g,k,p,q,t,v,A,z,G),BD.prototype.nb=function(){return function(){return this}}(F,I,M,a,c,c,d,e,f,g,k,p,q,t,v,A,z,G),BD.prototype.Rb=l,BD.prototype.Cb=function(){return function(a,c){if(n(this.Wc.a?this.Wc.a(c):this.Wc(c))){var d=Tb(MD),e=x(c),f=y(e);B(e);J(f,0,null);J(f,1,null);for(f=e=c;;){var g=f,k=x(g);f=y(k);var p=B(k);k=f;f=J(k,0,null);k=J(k,1,null);if(n(g)){g=this.Qa.a?this.Qa.a(f):this.Qa(f);g=w.b(d,g);if(n(g)){var q=k;g=JD(ZD.a(g),q);if(n($D(g)))return xq;e=g===k?e:Dd.c(e,f,
g)}f=p}else return e}}else return xq}}(F,I,M,a,c,c,d,e,f,g,k,p,q,t,v,A,z,G),BD.prototype.Db=function(a,c,d,e,f,g,k,p,q,t,v,z,A,F,G,I,M,jb){return function(K,Q,U,ca,ua){var T=this,Ea=this;if(L(ua)){var fa=Tb(MD);return df(We,function(){var K=x(Af(me,Gf.c(function(){return function(a,c){return n(a.a?a.a(ua):a(ua))?null:c}}(fa,Ea,a,c,d,e,f,g,k,p,q,t,v,z,A,F,G,I,M,jb),T.Ld,T.Md)));return K?Gf.b(function(){return function(a){return new m(null,5,[rj,Q,pl,a,Bi,ua,Dm,U,Tv,ca],null)}}(K,K,fa,Ea,a,c,d,e,f,
g,k,p,q,t,v,z,A,F,G,I,M,jb),K):null}(),Gf.b(function(a){return function(c){var d=J(c,0,null);c=J(c,1,null);var e=!Zd(a,T.Qa.a?T.Qa.a(d):T.Qa(d));e||(e=T.Qa.a?T.Qa.a(d):T.Qa(d),e=$a($D(cE(e,c,d,null))));return n(e)?null:fE(T.Qa.a?T.Qa.a(d):T.Qa(d),T.Qa.a?T.Qa.a(d):T.Qa(d),Ad.b(Q,d),U,Ad.b(ca,d),c)}}(fa,Ea,a,c,d,e,f,g,k,p,q,t,v,z,A,F,G,I,M,jb),x(ua)))}return new R(null,1,5,S,[new m(null,5,[rj,Q,pl,Bn,Bi,ua,Dm,U,Tv,ca],null)],null)}}(F,I,M,a,c,c,d,e,f,g,k,p,q,t,v,A,z,G),BD.prototype.Eb=function(){return function(a,
c){var d=Dd.c(this.nd,ik,c);return gE.a?gE.a(d):gE(d)}}(F,I,M,a,c,c,d,e,f,g,k,p,q,t,v,A,z,G),BD.Tb=function(){return function(){return new R(null,19,5,S,[ll,Hl,jm,lm,gn,Gn,Mn,Yn,oo,Wp,Ia.yf,pt,xu,Ru,hv,Ia.mf,Ov,gw,Ia.qf],null)}}(F,I,M,a,c,c,d,e,f,g,k,p,q,t,v,A,z,G),BD.tb=!0,BD.fb="cljs.spec.alpha/t_cljs$spec$alpha13102",BD.Bb=function(){return function(a,c){return lc(c,"cljs.spec.alpha/t_cljs$spec$alpha13102")}}(F,I,M,a,c,c,d,e,f,g,k,p,q,t,v,A,z,G));return new BD(I,d,e,f,g,k,p,c,q,t,a,v,M,A,z,c,F,
G,jf)};function YD(a){switch(arguments.length){case 4:return XD(arguments[0],arguments[1],arguments[2],arguments[3]);case 5:return hE(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4]);default:throw Error(["Invalid arity: ",r.a(arguments.length)].join(""));}}function XD(a,b,c,d){return hE(a,b,c,d,null)}
function hE(a,b,c,d,e){if(n(PD(b)))return n(c)?aE(b,c):b;if(n(QD(b)))return UD.b?UD.b(b,c):UD(b,c);if(Je(b))return a=VD(b),n(c)?aE(a,c):a;"undefined"===typeof CD&&(CD=function(a,b,c,d,e,t){this.form=a;this.Xa=b;this.Wa=c;this.Tc=d;this.Rd=e;this.De=t;this.h=393216;this.C=0},CD.prototype.J=function(a,b){return new CD(this.form,this.Xa,this.Wa,this.Tc,this.Rd,b)},CD.prototype.L=function(){return this.De},CD.prototype.mb=function(){return this},CD.prototype.nb=function(){return this},CD.prototype.Rb=
l,CD.prototype.Cb=function(a,b){var c=this.Xa.a?this.Xa.a(b):this.Xa(b);return n(this.Tc)?c:n(c)?b:xq},CD.prototype.Db=function(a,b,c,d,e){return n($D(cE(this.Xa,e,this.form,this.Tc)))?new R(null,1,5,S,[new m(null,5,[rj,b,pl,this.form,Bi,e,Dm,c,Tv,d],null)],null):null},CD.prototype.Eb=function(a,b){return hE(this.form,this.Xa,b,this.Tc,this.Rd)},CD.Tb=function(){return new R(null,6,5,S,[jj,zo,gn,Vn,Lj,Ia.rf],null)},CD.tb=!0,CD.fb="cljs.spec.alpha/t_cljs$spec$alpha13152",CD.Bb=function(a,b){return lc(b,
"cljs.spec.alpha/t_cljs$spec$alpha13152")});return new CD(a,b,c,d,e,jf)}function iE(a,b){return jE(a,b,null)}
function jE(a,b,c){var d=new Ei(function(){return Tf.b(H,Gf.c(ZD,b,a))},null),e=D(b);"undefined"===typeof DD&&(DD=function(a,b,c,d,e,t){this.forms=a;this.Ma=b;this.Wa=c;this.$c=d;this.o=e;this.Ee=t;this.h=393216;this.C=0},DD.prototype.J=function(){return function(a,b){return new DD(this.forms,this.Ma,this.Wa,this.$c,this.o,b)}}(d,e),DD.prototype.L=function(){return function(){return this.Ee}}(d,e),DD.prototype.mb=function(){return function(){return this}}(d,e),DD.prototype.nb=function(){return function(){return this}}(d,
e),DD.prototype.Rb=l,DD.prototype.Cb=function(){return function(a,b){var c=Tb(this.$c);if(Sd(b)&&C.b(D(b),this.o))for(var d=b,e=0;;){if(C.b(e,this.o))return d;var f=b.a?b.a(e):b(e),g=JD(c.a?c.a(e):c(e),f);if(n($D(g)))return xq;d=g===f?d:Dd.c(d,e,g);e+=1}else return xq}}(d,e),DD.prototype.Db=function(a,b){return function(c,d,e,f,g){var k=this;return Sd(g)?ff(D(g),D(k.Ma))?new R(null,1,5,S,[new m(null,5,[rj,d,pl,nf(x(We.g(vb(Wc,el),function(){var a=nf(x(We.b(vb(Wc,am),vb(Wc,mp))));return vb(Wc,a)}(),
E([function(){var a=D(k.Ma);return vb(Wc,a)}()])))),Bi,g,Dm,e,Tv,f],null)],null):P(We,Gf.A(function(){return function(a,b,c){var k=g.a?g.a(a):g(a);return n(eE(c,k))?null:fE(b,c,Ad.b(d,a),e,Ad.b(f,a),k)}}(this,a,b),Yh(D(k.Ma)),k.forms,k.Ma)):new R(null,1,5,S,[new m(null,5,[rj,d,pl,Hk,Bi,g,Dm,e,Tv,f],null)],null)}}(d,e),DD.prototype.Eb=function(){return function(a,b){return jE(this.forms,this.Ma,b)}}(d,e),DD.Tb=function(){return function(){return new R(null,6,5,S,[Dl,yq,gn,Mu,ls,Ia.sf],null)}}(d,e),
DD.tb=!0,DD.fb="cljs.spec.alpha/t_cljs$spec$alpha13180",DD.Bb=function(){return function(a,b){return lc(b,"cljs.spec.alpha/t_cljs$spec$alpha13180")}}(d,e));return new DD(a,b,c,d,e,jf)}function kE(a){a.vd=l;a.lc=function(){return function(){return xb.b(a,0)}}(a);a.mc=function(){return function(){return xb.b(a,1)}}(a);return a}
var lE=function lE(a,b,c,d){var f=Yi(),g=Th(a,c),k=new Ei(function(){return function(){return Tf.b(H,Gf.c(ZD,c,b))}}(f,g),null),p=function(){var b=D(c);switch(b){case 2:return function(b,c,d,f){return function(b){var c=Tb(f),d=JD(c.a?c.a(0):c(0),b);return n($D(d))?(b=JD(c.a?c.a(1):c(1),b),n($D(b))?xq:kE(new R(null,2,5,S,[a.a?a.a(1):a(1),b],null))):kE(new R(null,2,5,S,[a.a?a.a(0):a(0),d],null))}}(b,f,g,k);case 3:return function(b,c,d,f){return function(b){var c=Tb(f),d=JD(c.a?c.a(0):c(0),b);return n($D(d))?
(d=JD(c.a?c.a(1):c(1),b),n($D(d))?(b=JD(c.a?c.a(2):c(2),b),n($D(b))?xq:kE(new R(null,2,5,S,[a.a?a.a(2):a(2),b],null))):kE(new R(null,2,5,S,[a.a?a.a(1):a(1),d],null))):kE(new R(null,2,5,S,[a.a?a.a(0):a(0),d],null))}}(b,f,g,k);default:return function(b,c,d,f){return function(b){for(var c=Tb(f),d=0;;)if(d<D(c)){var g=c.a?c.a(d):c(d);g=JD(g,b);if(n($D(g)))d+=1;else return kE(new R(null,2,5,S,[a.a?a.a(d):a(d),g],null))}else return xq}}(b,f,g,k)}}();"undefined"===typeof ED&&(ED=function(a,b,c,d,f,g,k,p,
M){this.keys=a;this.forms=b;this.Ma=c;this.Wa=d;this.id=f;this.ye=g;this.$c=k;this.Nc=p;this.Fe=M;this.h=393216;this.C=0},ED.prototype.J=function(){return function(a,b){return new ED(this.keys,this.forms,this.Ma,this.Wa,this.id,this.ye,this.$c,this.Nc,b)}}(f,g,k,p),ED.prototype.L=function(){return function(){return this.Fe}}(f,g,k,p),ED.prototype.mb=function(){return function(){return this}}(f,g,k,p),ED.prototype.nb=function(){return function(){return this}}(f,g,k,p),ED.prototype.Rb=l,ED.prototype.Cb=
function(){return function(a,b){return this.Nc.a?this.Nc.a(b):this.Nc(b)}}(f,g,k,p),ED.prototype.Db=function(a,b,c,d){return function(f,g,k,p,q){return n(eE(this,q))?null:P(We,Gf.A(function(){return function(a,b,c){return n(eE(c,q))?null:fE(b,c,Ad.b(g,a),k,p,q)}}(this,a,b,c,d),this.keys,this.forms,this.Ma))}}(f,g,k,p),ED.prototype.Eb=function(){return function(a,b){return lE.A?lE.A(this.keys,this.forms,this.Ma,b):lE(this.keys,this.forms,this.Ma,b)}}(f,g,k,p),ED.Tb=function(){return function(){return new R(null,
9,5,S,[Dt,Dl,yq,gn,xu,tq,Mu,$u,Ia.tf],null)}}(f,g,k,p),ED.tb=!0,ED.fb="cljs.spec.alpha/t_cljs$spec$alpha13190",ED.Bb=function(){return function(a,b){return lc(b,"cljs.spec.alpha/t_cljs$spec$alpha13190")}}(f,g,k,p));return new ED(a,b,c,d,f,g,k,p,jf)};function mE(a,b,c){var d=x(b);y(d);B(d);d=x(c);y(d);B(d);for(d=c;;){c=a;b=x(b);a=y(b);b=B(b);var e=x(d);d=y(e);e=B(e);var f=d;d=e;if(n(a)){c=cE(a,c,f,null);if(n($D(c)))return xq;a=c}else return c}}
function nE(a,b,c,d,e,f){var g=x(a);y(g);B(g);g=x(b);y(g);B(g);for(g=b;;){b=f;a=x(a);f=y(a);a=B(a);var k=x(g);g=y(k);var p=B(k);k=g;if(n(k)){g=cE(k,b,f,null);if(n($D(g)))return fE(f,k,c,d,e,b);b=a;k=p;f=g;a=b;g=k}else return null}}
function oE(a,b,c,d,e,f,g,k,p,q){b=n(b)?b:Od;c=n(c)?c:su;return $a(eE(b,a))?fE(c,b,k,p,q,a):n(n(e)?ff(e,Ue(e,a)):e)?new R(null,1,5,S,[new m(null,5,[rj,k,pl,nf(x(We.g(vb(Wc,el),vb(Wc,e),E([function(){var a=nf(x(We.b(vb(Wc,am),vb(Wc,mp))));return vb(Wc,a)}()])))),Bi,a,Dm,p,Tv,q],null)],null):n(function(){var b=n(f)?f:g;return n(b)?!((n(f)?f:0)<=Ue(n(g)?g+1:f,a)&&Ue(n(g)?g+1:f,a)<=(n(g)?g:9007199254740991)):b}())?new R(null,1,5,S,[new m(null,5,[rj,k,pl,nf(x(We.g(vb(Wc,yr),vb(Wc,n(f)?f:0),E([function(){var a=
nf(x(We.b(vb(Wc,am),vb(Wc,mp))));return vb(Wc,a)}(),vb(Wc,n(g)?g:9007199254740991)])))),Bi,a,Dm,p,Tv,q],null)],null):n(n(d)?!Nd(a)&&$a(P($d,a)):d)?new R(null,1,5,S,[new m(null,5,[rj,k,pl,Ft,Bi,a,Dm,p,Tv,q],null)],null):null}
var pE=function pE(a,b,c){"undefined"===typeof FD&&(FD=function(a,b,c,k){this.forms=a;this.Ma=b;this.Wa=c;this.Ge=k;this.h=393216;this.C=0},FD.prototype.J=function(a,b){return new FD(this.forms,this.Ma,this.Wa,b)},FD.prototype.L=function(){return this.Ge},FD.prototype.mb=function(){return this},FD.prototype.nb=function(){return this},FD.prototype.Rb=l,FD.prototype.Cb=function(a,b){var c=Gf.c(function(){return function(a,c){return cE(a,b,c,null)}}(this),this.Ma,this.forms);return n(pf($D,c))?xq:P(Jh,
c)},FD.prototype.Db=function(a,b,c,k,p){return P(We,Gf.c(function(){return function(a,e){return fE(a,e,b,c,k,p)}}(this),this.forms,this.Ma))},FD.prototype.Eb=function(a,b){return pE.c?pE.c(this.forms,this.Ma,b):pE(this.forms,this.Ma,b)},FD.Tb=function(){return new R(null,4,5,S,[Dl,yq,gn,Ia.uf],null)},FD.tb=!0,FD.fb="cljs.spec.alpha/t_cljs$spec$alpha13262",FD.Bb=function(a,b){return lc(b,"cljs.spec.alpha/t_cljs$spec$alpha13262")});return new FD(a,b,c,jf)};
function qE(a,b,c,d){var e=null!=c&&(c.h&64||l===c.G)?P(Fh,c):c,f=w.b(e,Ot),g=w.b(e,um),k=w.c(e,Jk,20),p=w.b(e,No),q=w.b(e,Hn),t=w.b(e,Zv),v=w.b(e,Ip),A=w.b(e,Tt),z=w.b(e,Bk),G=w.b(e,ks),F=w.b(e,Ur),I=w.b(e,$r),M=w.b(e,pv),Q=new Ei(function(){return function(){return ZD.a(b)}}(z,c,e,e,f,g,k,p,q,t,v,A,z,G,F,I,M),null),U=function(a,b){return function(a){return dE(Tb(b),a)}}(z,Q,c,e,e,f,g,k,p,q,t,v,A,z,G,F,I,M),ea=function(){return n(A)?A:function(){return function(a){return a}}(A,z,Q,U,c,e,e,f,g,k,
p,q,t,v,A,z,G,F,I,M)}(),T=function(){return function(a,b,c,d){return Ad.b(a,d)}}(z,Q,U,ea,c,e,e,f,g,k,p,q,t,v,A,z,G,F,I,M),K=function(a,b,c,d,e,f,g,k,p,q,t,v,z,A,F,G,I,M,K,Q,U){return function(T){return Sd(T)&&($a(a)||Sd(a))?new R(null,3,5,S,[me,function(){return function(a,b,c,d){return c===d?a:Dd.c(a,b,d)}}(a,b,c,d,e,f,g,k,p,q,t,v,z,A,F,G,I,M,K,Q,U),me],null):n(function(){var b=L(T);return b?(b=n(Q)?$a(a):Q,n(b)?b:L(a)):b}())?new R(null,3,5,S,[n(z)?Bd:me,function(a,b,c,d,e,f,g,k,p,q,t,v,z){return function(a,
b,c,d){return c===d&&$a(z)?a:Dd.c(a,qd(n(z)?d:c,0),qd(d,1))}}(a,b,c,d,e,f,g,k,p,q,t,v,z,A,F,G,I,M,K,Q,U),me],null):Be(a)||Wd(a)||$a(a)&&(Be(T)||Wd(T))?new R(null,3,5,S,[Bd,e,De],null):new R(null,3,5,S,[function(a){return function(b){return Bd(n(a)?a:b)}}(a,b,c,d,e,f,g,k,p,q,t,v,z,A,F,G,I,M,K,Q,U),e,me],null)}}(z,Q,U,ea,T,c,e,e,f,g,k,p,q,t,v,A,z,G,F,I,M);"undefined"===typeof GD&&(GD=function(a,b,c,d,e,f,g,k,p,q,t,v,z,A,F,G,I,M,K,Q,U,T,ea,Yf,xl){this.form=a;this.Id=b;this.Oc=c;this.Wa=d;this.Re=e;this.ue=
f;this.Xa=g;this.Ae=k;this.Sc=p;this.oe=q;this.Fd=t;this.Td=v;this.Mc=z;this.re=A;this.Dd=F;this.wc=G;this.Xc=I;this.te=M;this.count=K;this.Jd=Q;this.Kd=U;this.kind=T;this.gd=ea;this.ne=Yf;this.He=xl;this.h=393216;this.C=0},GD.prototype.J=function(){return function(a,b){return new GD(this.form,this.Id,this.Oc,this.Wa,this.Re,this.ue,this.Xa,this.Ae,this.Sc,this.oe,this.Fd,this.Td,this.Mc,this.re,this.Dd,this.wc,this.Xc,this.te,this.count,this.Jd,this.Kd,this.kind,this.gd,this.ne,b)}}(z,Q,U,ea,T,K,
c,e,e,f,g,k,p,q,t,v,A,z,G,F,I,M),GD.prototype.L=function(){return function(){return this.He}}(z,Q,U,ea,T,K,c,e,e,f,g,k,p,q,t,v,A,z,G,F,I,M),GD.prototype.mb=function(){return function(){return this}}(z,Q,U,ea,T,K,c,e,e,f,g,k,p,q,t,v,A,z,G,F,I,M),GD.prototype.nb=function(){return function(){return this}}(z,Q,U,ea,T,K,c,e,e,f,g,k,p,q,t,v,A,z,G,F,I,M),GD.prototype.Rb=l,GD.prototype.Cb=function(){return function(a,b){var c=Tb(this.wc);if($a(this.Sc.a?this.Sc.a(b):this.Sc(b)))return xq;if(n(this.gd)){var d=
this.Mc.a?this.Mc.a(b):this.Mc(b),e=J(d,0,null),f=J(d,1,null);d=J(d,2,null);var g=e.a?e.a(b):e(b);e=0;var k=x(b),p=x(k);y(p);for(B(p);;){var q=k;p=x(q);k=y(p);p=B(p);if(q){q=JD(c,k);if(n($D(q)))return xq;g=f.A?f.A(g,e,k,q):f(g,e,k,q);e+=1;k=p}else return d.a?d.a(g):d(g)}}else if(od(b))for(f=re(D(b)/101),f=1>f?1:f,e=0;;){if(e>=D(b))return b;if(n(dE(c,qd(b,e))))e+=f;else return xq}else for(e=0,f=x(b),d=x(f),y(d),B(d);;){g=x(f);d=y(g);g=B(g);k=d;p=g;q=f;if(null==q||C.b(e,101))return b;if(n(dE(c,k)))f=
p,e+=1;else return xq}}}(z,Q,U,ea,T,K,c,e,e,f,g,k,p,q,t,v,A,z,G,F,I,M),GD.prototype.Db=function(a,b,c,d,e,f,g,k,p,q,t,v,z,A,F,G,I,M,K,Q,U,T){return function(Ea,ua,ca,fa,Dn){var ea=this,Ha=this,Ua=oE(Dn,ea.kind,ea.Fd,ea.Dd,ea.count,ea.Jd,ea.Id,ua,ca,fa);return n(Ua)?Ua:P(We,function(){var Ea=Af(me,Gf.c(function(){return function(a,b){var c=ea.Xc.b?ea.Xc.b(a,b):ea.Xc(a,b);return n(ea.Oc.a?ea.Oc.a(b):ea.Oc(b))?null:fE(ea.form,ea.Xa,ua,ca,Ad.b(fa,c),b)}}(Ua,Ha,a,b,c,d,e,f,g,k,p,q,t,v,z,A,F,G,I,M,K,Q,
U,T),Yh(Number.MAX_VALUE),Dn)),Oa=n(ea.gd)?me:uf(Hf,20);return Oa.a?Oa.a(Ea):Oa(Ea)}())}}(z,Q,U,ea,T,K,c,e,e,f,g,k,p,q,t,v,A,z,G,F,I,M),GD.prototype.Eb=function(){return function(a,b){return qE(this.form,this.Xa,this.Kd,b)}}(z,Q,U,ea,T,K,c,e,e,f,g,k,p,q,t,v,A,z,G,F,I,M),GD.Tb=function(){return function(){return new R(null,25,5,S,[jj,lj,Cl,gn,Ia.zf,pn,zo,Ia.nf,lp,oq,Dq,Jq,Yq,Sr,Js,At,St,Xt,Ou,Vu,Xu,Zu,nv,$v,Ia.vf],null)}}(z,Q,U,ea,T,K,c,e,e,f,g,k,p,q,t,v,A,z,G,F,I,M),GD.tb=!0,GD.fb="cljs.spec.alpha/t_cljs$spec$alpha13274",
GD.Bb=function(){return function(a,b){return lc(b,"cljs.spec.alpha/t_cljs$spec$alpha13274")}}(z,Q,U,ea,T,K,c,e,e,f,g,k,p,q,t,v,A,z,G,F,I,M));return new GD(a,f,U,d,c,k,b,e,p,q,g,T,K,t,v,Q,ea,z,G,F,e,I,M,z,jf)}function rE(a){return new m(null,2,[ho,Il,ak,a],null)}function sE(a){a=null!=a&&(a.h&64||l===a.G)?P(Fh,a):a;a=w.b(a,ho);return C.b(Il,a)}
var tE=function tE(a){var c=null!=a&&(a.h&64||l===a.G)?P(Fh,a):a,d=w.b(c,Kv);a=x(d);var e=y(a);a=B(a);var f=w.b(c,Xl),g=x(f),k=y(g);g=B(g);var p=w.b(c,Av),q=x(p);y(q);q=B(q);var t=w.b(c,ak);c=w.b(c,bl);return of(me,d)?n(sE(e))?(d=ak.a(e),d=Ad.b(t,n(f)?Ed([k,d]):d),a?(a=new m(null,4,[Kv,a,Xl,g,Av,q,ak,d],null),tE.a?tE.a(a):tE(a)):rE(d)):new m(null,6,[ho,ew,Kv,d,ak,t,Xl,f,Av,p,bl,c],null):null};
function uE(a,b,c,d,e){return n(a)?(d=new m(null,5,[ho,ol,Vj,b,Bl,d,Av,e,Jr,Yi()],null),n(sE(a))?Dd.g(d,So,b,E([ak,Ad.b(c,ak.a(a))])):Dd.g(d,So,a,E([ak,c]))):null}
function vE(a,b,c,d){return n(n(b)?b:c)?(a=Rf(function(a){a=y(a);return d.a?d.a(a):d(a)},Gf.A(rg,a,function(){var a=x(b);return a?a:Kf(null)}(),function(){var a=x(c);return a?a:Kf(null)}())),new R(null,3,5,S,[x(Gf.b(y,a)),n(b)?x(Gf.b(yd,a)):null,n(c)?x(Gf.b(function(){return function(a){return qd(a,2)}}(a),a)):null],null)):new R(null,3,5,S,[x(Rf(d,a)),b,c],null)}
function wE(a,b,c){var d=vE(a,b,c,me);b=J(d,0,null);c=x(b);a=y(c);c=B(c);var e=J(d,1,null),f=J(e,0,null);d=J(d,2,null);return n(b)?(b=new m(null,4,[ho,qv,Kv,b,Xl,e,Av,d],null),null==c?n(f)?n(sE(a))?rE(kE(new R(null,2,5,S,[f,ak.a(a)],null))):b:a:b):null}function xE(a,b){return n(n(a)?b:a)?wE(E([a,b]),null,null):n(a)?a:b}function yE(a,b){var c=C.b(b,Gv);if(c)return c;c=ho.a(OD(a));var d=new V(null,new m(null,2,[ol,null,ew,null],null),null);c=d.a?d.a(c):d(c);c=n(c)?Nd(b):c;return n(c)?c:null}
var zE=function zE(a){a=OD(a);var c=null!=a&&(a.h&64||l===a.G)?P(Fh,a):a,d=w.b(c,ho);a=w.b(c,Kv);var e=w.b(c,So),f=w.b(c,Vj);c=w.b(c,Av);if(C.b(Il,d))return!0;if(C.b(null,d))return null;if(C.b(Hr,d)){d=zE.a?zE.a(e):zE(e);if(n(d)){d=yE(e,AE.a?AE.a(e):AE(e));if(n(d))return d;a=mE(AE.a?AE.a(e):AE(e),a,B(c));return $a($D(a))}return d}if(C.b(ol,d))return(d=e===f)?d:zE.a?zE.a(e):zE(e);if(C.b(ew,d))return of(zE,a);if(C.b(qv,d))return pf(zE,a);throw Error(["No matching clause: ",r.a(d)].join(""));},AE=function AE(a){a=
OD(a);var c=null!=a&&(a.h&64||l===a.G)?P(Fh,a):a;a=w.b(c,Kv);var d=x(a),e=y(d);B(d);var f=w.b(c,Xl),g=J(f,0,null),k=w.b(c,ho);d=w.b(c,So);var p=w.b(c,ak);c=w.b(c,Av);if(C.b(Il,k))return p;if(C.b(null,k))return null;if(C.b(Hr,k))return e=AE.a?AE.a(d):AE(d),n(yE(d,e))?Gv:mE(e,a,c);if(C.b(ol,k))return BE.c?BE.c(d,p,g):BE(d,p,g);if(C.b(ew,k))return BE.c?BE.c(e,p,g):BE(e,p,g);if(C.b(qv,k))return e=vE(a,f,c,zE),a=J(e,0,null),a=J(a,0,null),e=J(e,1,null),e=J(e,0,null),a=null==a?Gv:AE.a?AE.a(a):AE(a),n(e)?
kE(new R(null,2,5,S,[e,a],null)):a;throw Error(["No matching clause: ",r.a(k)].join(""));};
function BE(a,b,c){var d=OD(a);a=null!=d&&(d.h&64||l===d.G)?P(Fh,d):d;var e=w.b(a,ho),f=w.b(a,Kv),g=w.b(a,Bl);d=function(a,d,e,f,g,A){return function(){var a=AE(e);if(Nd(a))return b;a=n(c)?Ed([c,a]):a;var d=n(A)?Tf:Ad;return d.b?d.b(b,a):d(b,a)}}(d,a,a,e,f,g);if(C.b(null,e))return b;if(C.b(qv,e)||C.b(Il,e)||C.b(Hr,e))return a=AE(a),C.b(a,Gv)?b:Ad.b(b,n(c)?Ed([c,a]):a);if(C.b(ol,e)||C.b(ew,e))return d();throw Error(["No matching clause: ",r.a(e)].join(""));}
var CE=function CE(a,b){var d=OD(a),e=null!=d&&(d.h&64||l===d.G)?P(Fh,d):d,f=w.b(e,Kv),g=x(f),k=y(g),p=B(g),q=w.b(e,Xl),t=x(q),v=y(t),A=B(t),z=w.b(e,ho),G=w.b(e,So),F=w.b(e,Vj),I=w.b(e,ak),M=w.b(e,Bl),Q=w.b(e,Av);if(n(e)){if(C.b(Il,z))return null;if(C.b(null,z))return f=cE(e,b,e,null),n($D(f))?null:rE(f);if(C.b(Hr,z))return d=CE.b?CE.b(G,b):CE(G,b),n(d)?C.b(Il,ho.a(d))?(f=mE(AE(d),f,B(Q)),n($D(f))?null:rE(f)):new m(null,4,[ho,Hr,So,d,Kv,f,Av,Q],null):null;if(C.b(ew,z))return xE(tE(new m(null,4,[Kv,
vd(CE.b?CE.b(k,b):CE(k,b),p),Xl,q,Av,Q,ak,I],null)),n(zE(k))?function(){var a=tE(new m(null,4,[Kv,p,Xl,A,Av,B(Q),ak,BE(k,I,v)],null));return CE.b?CE.b(a,b):CE(a,b)}():null);if(C.b(qv,z))return wE(Gf.b(function(){return function(a){return CE.b?CE.b(a,b):CE(a,b)}}(z,d,e,e,f,g,k,p,k,p,f,q,t,v,A,v,A,q,z,G,F,I,M,Q),f),q,Q);if(C.b(ol,z))return xE(uE(CE.b?CE.b(G,b):CE(G,b),F,I,M,Q),n(zE(G))?function(){var a=uE(F,F,BE(G,I,null),M,Q);return CE.b?CE.b(a,b):CE(a,b)}():null);throw Error(["No matching clause: ",
r.a(z)].join(""));}return null},DE=function DE(a){a=OD(a);var c=null!=a&&(a.h&64||l===a.G)?P(Fh,a):a,d=w.b(c,ho);w.b(c,Kv);var e=w.b(c,Xl);a=w.b(c,Av);var f=w.b(c,Bl),g=w.b(c,So),k=w.b(c,bl),p=w.b(c,ym);if(n(c)){if(C.b(Il,d))return null;if(C.b(null,d))return c;if(C.b(Hr,d))return c=DE.a?DE.a(g):DE(g),vd(bw,vd(c,a));if(C.b(ew,d))return n(k)?a=vb(vb(Wc,k),Sj):(c=x(e),a=vd(qm,Qf(rg,E([c?c:Kf(tm),a])))),a;if(C.b(qv,d))return n(p)?vb(vb(Wc,p),jw):vd(Uk,Qf(rg,E([e,a])));if(C.b(ol,d))return c=n(f)?Sj:nj,
vb(vb(Wc,a),c);throw Error(["No matching clause: ",r.a(d)].join(""));}return null},EE=function EE(a,b,c,d,e,f){var k=J(f,0,null),p=OD(b),q=null!=p&&(p.h&64||l===p.G)?P(Fh,p):p,t=w.b(q,ho),v=w.b(q,Kv),A=w.b(q,Xl),z=w.b(q,Av),G=w.b(q,Bl),F=w.b(q,So),I=w.b(q,Vj);b=function(){var a=SD(q);return n(a)?Ad.b(d,a):d}();var M=function(a,b,c,d,f,k,p,q,t,v,z,A,F,G){return function(a,b){return new R(null,1,5,S,[new m(null,6,[rj,a,vq,"Insufficient input",pl,b,Bi,Wc,Dm,G,Tv,e],null)],null)}}(f,k,f,p,q,q,t,v,A,z,
G,F,I,b);if(n(q)){if(C.b(Il,t))return null;if(C.b(null,t))return Nd(f)?M(c,a):fE(a,q,c,b,e,k);if(C.b(Hr,t)){if(Nd(f))return n(zE(F))?nE(z,v,c,b,e,AE(F)):M(c,DE(F));M=CE(F,k);if(n(M))return nE(z,v,c,b,e,AE(M));M=DE(F);return EE.Z?EE.Z(M,F,c,b,e,f):EE(M,F,c,b,e,f)}if(C.b(ew,t))return a=Gf.A(rg,v,function(){var a=x(A);return a?a:Kf(null)}(),function(){var a=x(z);return a?a:Kf(null)}()),v=C.b(1,D(a))?y(a):y(Sf(function(){return function(a){a=J(a,0,null);return zE(a)}}(a,t,f,k,f,p,q,q,t,v,A,z,G,F,I,b,
M),a)),F=J(v,0,null),k=J(v,1,null),v=J(v,2,null),k=n(k)?Ad.b(c,k):c,v=n(v)?v:DE(F),Nd(f)&&$a(F)?M(k,v):EE.Z?EE.Z(v,F,k,b,e,f):EE(v,F,k,b,e,f);if(C.b(qv,t))return Nd(f)?M(c,DE(q)):P(We,Gf.A(function(a,b,d,f,k,p,q,t,v,z,A,F,G,I,M){return function(a,b,d){b=n(b)?b:DE(d);a=n(a)?Ad.b(c,a):c;return EE.Z?EE.Z(b,d,a,M,e,f):EE(b,d,a,M,e,f)}}(t,f,k,f,p,q,q,t,v,A,z,G,F,I,b,M),function(){var a=x(A);return a?a:Kf(null)}(),function(){var a=x(z);return a?a:Kf(null)}(),v));if(C.b(ol,t))return M=F===I?z:DE(F),EE.Z?
EE.Z(M,F,c,b,e,f):EE(M,F,c,b,e,f);throw Error(["No matching clause: ",r.a(t)].join(""));}return null};function FE(a,b){for(;;){var c=b,d=x(c),e=y(d);d=B(d);if(Nd(c))return n(zE(a))?(c=AE(a),C.b(c,Gv)?null:c):xq;c=CE(a,e);if(n(c))e=d,a=c,b=e;else return xq}}
var UD=function UD(a,b){"undefined"===typeof HD&&(HD=function(a,b,f){this.tc=a;this.Wa=b;this.Ie=f;this.h=393216;this.C=0},HD.prototype.J=function(a,b){return new HD(this.tc,this.Wa,b)},HD.prototype.L=function(){return this.Ie},HD.prototype.mb=function(){return this},HD.prototype.nb=function(){return this},HD.prototype.Rb=l,HD.prototype.Cb=function(a,b){return null==b||Od(b)?FE(this.tc,x(b)):xq},HD.prototype.Db=function(a,b,f,g,k){if(null==k||Od(k))a:{a=this.tc;var d=x(k);k=x(d);y(k);B(k);k=a;var e=
d;for(d=0;;){var t=x(e),v=y(t);t=B(t);if(Nd(e)){b=n(zE(k))?null:EE(DE(k),k,b,f,g,null);break a}v=CE(k,v);if(n(v))e=t,d+=1,k=v;else{if(n(sE(k))){b=C.b(ho.a(k),ew)?EE(DE(k),k,b,f,Ad.b(g,d),x(e)):new R(null,1,5,S,[new m(null,6,[rj,b,vq,"Extra input",pl,DE(a),Bi,e,Dm,f,Tv,Ad.b(g,d)],null)],null);break a}a=EE(DE(k),k,b,f,Ad.b(g,d),x(e));b=n(a)?a:new R(null,1,5,S,[new m(null,6,[rj,b,vq,"Extra input",pl,DE(k),Bi,e,Dm,f,Tv,Ad.b(g,d)],null)],null);break a}}}else b=new R(null,1,5,S,[new m(null,5,[rj,b,pl,DE(this.tc),
Bi,k,Dm,f,Tv,g],null)],null);return b},HD.prototype.Eb=function(a,b){return UD.b?UD.b(this.tc,b):UD(this.tc,b)},HD.Tb=function(){return new R(null,3,5,S,[mq,gn,Ia.wf],null)},HD.tb=!0,HD.fb="cljs.spec.alpha/t_cljs$spec$alpha13512",HD.Bb=function(a,b){return lc(b,"cljs.spec.alpha/t_cljs$spec$alpha13512")});return new HD(a,b,jf)};
Z(zp,N(Sv,N(rr,new R(null,1,5,S,[Ia.Cd],null),N(Vo,N(pp,Es,Ia.Cd),N(pp,po,Ia.Cd))),N(rr,new R(null,1,5,S,[Ia.pe],null),N(pp,N(Is,new R(null,1,5,S,[new R(null,2,5,S,[zs,An],null)],null),new m(null,2,[Es,zs,po,An],null)),Ia.pe))),hE(N(Sv,N(Is,new R(null,1,5,S,[mp],null),N(Vo,N(pp,Es,mp),N(pp,po,mp))),N(Is,new R(null,1,5,S,[mp],null),N(pp,N(Is,new R(null,1,5,S,[new R(null,2,5,S,[zs,An],null)],null),new m(null,2,[Es,zs,po,An],null)),mp))),function(a){return Th(Gf.b(Es,a),Gf.b(po,a))},null,!0,function(a){return Gf.b(function(a){var b=
J(a,0,null);a=J(a,1,null);return new m(null,2,[Es,b,po,a],null)},a)}));
var GE=function GE(a,b,c){var e=ZD.b(b,a);"undefined"===typeof ID&&(ID=function(a,b,c,e,q){this.form=a;this.Xa=b;this.Wa=c;this.wc=e;this.Je=q;this.h=393216;this.C=0},ID.prototype.J=function(){return function(a,b){return new ID(this.form,this.Xa,this.Wa,this.wc,b)}}(e),ID.prototype.L=function(){return function(){return this.Je}}(e),ID.prototype.mb=function(){return function(){return this}}(e),ID.prototype.nb=function(){return function(){return this}}(e),ID.prototype.Rb=l,ID.prototype.Cb=function(){return function(a,
b){return null==b?null:JD(this.wc,b)}}(e),ID.prototype.Db=function(){return function(a,b,c,e,q){a=eE(this.wc,q);return n(n(a)?a:null==q)?null:Ad.b(fE(this.form,this.Xa,Ad.b(b,Dv),c,e,q),new m(null,5,[rj,Ad.b(b,Gv),pl,Zq,Bi,q,Dm,c,Tv,e],null))}}(e),ID.prototype.Eb=function(){return function(a,b){return GE.c?GE.c(this.form,this.Xa,b):GE(this.form,this.Xa,b)}}(e),ID.Tb=function(){return function(){return new R(null,5,5,S,[jj,zo,gn,At,Ia.xf],null)}}(e),ID.tb=!0,ID.fb="cljs.spec.alpha/t_cljs$spec$alpha13536",
ID.Bb=function(){return function(a,b){return lc(b,"cljs.spec.alpha/t_cljs$spec$alpha13536")}}(e));return new ID(a,b,c,e,jf)};if("undefined"===typeof HE)var HE=!1;if("undefined"===typeof IE)var IE=!1;function JE(){return!0}Z(Xv,new V(null,new m(null,8,[vm,null,nn,null,yn,null,Nr,null,Pr,null,Bt,null,iu,null,lw,null],null),null),new V(null,new m(null,8,[vm,null,nn,null,yn,null,Nr,null,Pr,null,Bt,null,iu,null,lw,null],null),null));Z(Wo,Xv,Xv);Z(op,Xv,Xv);Z($n,Xv,Xv);Z(Qk,Xv,Xv);Z(In,Xv,Xv);Z(jq,Xv,Xv);Z(Bj,Xv,Xv);Z(fv,Xv,Xv);Z(Wn,Xv,Xv);Z(so,Xv,Xv);Z(Fr,Xv,Xv);Z(Zl,Xv,Xv);Z(Lk,Xv,Xv);Z(Um,Xv,Xv);Z(av,Xv,Xv);Z(kq,Xv,Xv);Z(pj,Xv,Xv);Z(Xo,N(io,Xp),GE(Xp,function(a){return!0===a||!1===a},null));
Z(Cu,new V(null,new m(null,28,[Xj,null,qk,null,sk,null,Tk,null,fl,null,sl,null,Ll,null,Ml,null,Ol,null,Yl,null,nm,null,Cm,null,Fm,null,Lm,null,Mm,null,Rn,null,qo,null,Hp,null,Sp,null,Hq,null,Pq,null,Sq,null,lr,null,Dr,null,Wt,null,tu,null,xv,null,X,null],null),null),new V(null,new m(null,28,[Xj,null,qk,null,sk,null,Tk,null,fl,null,sl,null,Ll,null,Ml,null,Ol,null,Yl,null,nm,null,Cm,null,Fm,null,Lm,null,Mm,null,Rn,null,qo,null,Hp,null,Sp,null,Hq,null,Pq,null,Sq,null,lr,null,Dr,null,Wt,null,tu,null,
xv,null,X,null],null),null));Z(vn,new V(null,new m(null,4,[gr,null,bs,null,yt,null,Rv,null],null),null),new V(null,new m(null,4,[gr,null,bs,null,yt,null,Rv,null],null),null));Z(Vq,N(io,zq),GE(zq,Za,null));Z(fw,N(om,tk,$r,dk),qE(Ho,Ge,new m(null,5,[um,dk,No,function(a){return Qd(a)},$r,Qd,pv,!0,Zv,N(om,tk,$r,dk)],null),null));Z(wq,N(fn,Et,fw,Lt,N(io,tk)),lE(new R(null,2,5,S,[Et,Lt],null),new R(null,2,5,S,[fw,N(io,tk)],null),new R(null,2,5,S,[fw,GE(tk,Ge,null)],null),null));
Z(Xs,N(fn,Po,$m,Rl,zq,tr,tk),lE(new R(null,3,5,S,[Po,Rl,tr],null),new R(null,3,5,S,[$m,zq,tk],null),new R(null,3,5,S,[bb,Za,Ge],null),null));Z(Zn,N(om,Xs,$r,dk),qE(Xs,Xs,new m(null,5,[um,dk,No,function(a){return Qd(a)},$r,Qd,pv,!0,Zv,N(om,Xs,$r,dk)],null),null));
Z(Gr,N(io,N(om,N(fn,Rl,zq,Nv,N(om,zq,$r,dk)),$r,dk)),GE(N(om,N(fn,Rl,zq,Nv,N(om,zq,$r,dk)),$r,dk),qE(N(ul,Rl,Hv,Nv,N(Bu,Hv,$r,bm)),lE(new R(null,2,5,S,[Rl,Nv],null),new R(null,2,5,S,[zq,N(om,zq,$r,dk)],null),new R(null,2,5,S,[Za,qE(Hv,Za,new m(null,5,[um,dk,No,function(a){return Qd(a)},$r,Qd,pv,!0,Zv,N(om,zq,$r,dk)],null),null)],null),null),new m(null,5,[um,dk,No,function(a){return Qd(a)},$r,Qd,pv,!0,Zv,N(om,N(fn,Rl,zq,Nv,N(om,zq,$r,dk)),$r,dk)],null),null),null));
Z(Fs,N(io,N(om,N(om,zq,$r,dk),$r,dk)),GE(N(om,N(om,zq,$r,dk),$r,dk),qE(N(Bu,Hv,$r,bm),qE(Hv,Za,new m(null,5,[um,dk,No,function(a){return Qd(a)},$r,Qd,pv,!0,Zv,N(om,zq,$r,dk)],null),null),new m(null,5,[um,dk,No,function(a){return Qd(a)},$r,Qd,pv,!0,Zv,N(om,N(om,zq,$r,dk),$r,dk)],null),null),null));
Z(qt,N(om,N(fn,dn,Xs,pq,Zn),$r,dk),qE(N(ul,dn,Xs,pq,Zn),lE(new R(null,2,5,S,[dn,pq],null),new R(null,2,5,S,[Xs,Zn],null),new R(null,2,5,S,[Xs,Zn],null),null),new m(null,5,[um,dk,No,function(a){return Qd(a)},$r,Qd,pv,!0,Zv,N(om,N(fn,dn,Xs,pq,Zn),$r,dk)],null),null));Z(Pk,N(io,N(om,Xs,$r,dk)),GE(N(om,Xs,$r,dk),qE(Xs,Xs,new m(null,5,[um,dk,No,function(a){return Qd(a)},$r,Qd,pv,!0,Zv,N(om,Xs,$r,dk)],null),null),null));
Z(ck,N(io,N(om,N(io,Xv),$r,dk)),GE(N(om,N(io,Xv),$r,dk),qE(N(xt,Xv),GE(Xv,Xv,null),new m(null,5,[um,dk,No,function(a){return Qd(a)},$r,Qd,pv,!0,Zv,N(om,N(io,Xv),$r,dk)],null),null),null));Z(Ys,N(fn,cv,Xo,Po,$m),lE(new R(null,2,5,S,[cv,Po],null),new R(null,2,5,S,[Xo,$m],null),new R(null,2,5,S,[Xo,bb],null),null));Z(ao,new V(null,new m(null,2,[On,null,Ev,null],null),null),new V(null,new m(null,2,[On,null,Ev,null],null),null));
Z(Ul,N(io,N(es,$m,Cu)),GE(N(es,$m,Cu),qE(N(vo,jo,Cu),iE(new R(null,2,5,S,[$m,Cu],null),new R(null,2,5,S,[bb,Cu],null)),new m(null,7,[Bk,jf,um,Go,No,function(a){return L(a)},$r,L,Tt,function(a,b){return qd(b,0)},pv,!0,Zv,N(es,$m,Cu)],null),null),null));Z(Sm,Xo,Xo);Z(ps,Xo,Xo);Z(ur,zq,Za);Z(pk,Xo,Xo);Z(cu,Xo,Xo);Z(Or,Xo,Xo);Z(tj,N(io,$m),GE($m,bb,null));Z(Mr,Xo,Xo);Z(et,Xo,Xo);
Z(uv,N(lk,zj,new R(null,3,5,S,[$s,er,Ms],null)),pE(new R(null,2,5,S,[N(eq,zj,new R(null,3,5,S,[$s,er,Ms],null)),N(es,new V(null,new m(null,3,[rj,null,Ej,null,Rp,null],null),null),N(Lq,!0))],null),new R(null,2,5,S,[gE(mh([yj,zj,ik,xk,Ek,kl,en,Eq,vs,Ps,mt,cw],[null,new R(null,3,5,S,[$s,er,Ms],null),null,new R(null,1,5,S,[function(a){return L(a)}],null),function(a){return L(a)},new R(null,3,5,S,[Ej,rj,Rp],null),H,null,H,new R(null,3,5,S,[$s,er,Ms],null),new R(null,1,5,S,[N(Is,new R(null,1,5,S,[mp],null),
N(Go,mp))],null),null])),qE(N(vo,new V(null,new m(null,3,[rj,null,Ej,null,Rp,null],null),null),N(Sk,!0)),iE(new R(null,2,5,S,[new V(null,new m(null,3,[rj,null,Ej,null,Rp,null],null),null),N(Lq,!0)],null),new R(null,2,5,S,[new V(null,new m(null,3,[rj,null,Ej,null,Rp,null],null),null),sf(!0)],null)),new m(null,7,[Bk,jf,um,Go,No,function(a){return L(a)},$r,L,Tt,function(a,b){return qd(b,0)},pv,!0,Zv,N(es,new V(null,new m(null,3,[rj,null,Ej,null,Rp,null],null),null),N(Lq,!0))],null),null)],null),null));
Z(vj,Xo,Xo);Z(Fp,zq,Za);Z(Wk,Xo,Xo);Z(Wj,zq,Za);Z(Vt,zq,Za);Z(En,zq,Za);Z(jl,zq,Za);Z(cp,Xo,Xo);Z(ro,zq,Za);Z(Em,Xo,Xo);Z(mn,zq,Za);Z(fq,Vq,Vq);Z(Uv,Xo,Xo);Z(hw,Ys,Ys);Z(Gs,Xo,Xo);
Z(Xm,N(lk,zj,new R(null,3,5,S,[Wk,Vt,Wj],null)),pE(new R(null,2,5,S,[N(eq,zj,new R(null,3,5,S,[Wk,Vt,Wj],null)),N(es,new V(null,new m(null,3,[pm,null,Yp,null,nu,null],null),null),N(Lq,!0))],null),new R(null,2,5,S,[gE(mh([yj,zj,ik,xk,Ek,kl,en,Eq,vs,Ps,mt,cw],[null,new R(null,3,5,S,[Wk,Vt,Wj],null),null,new R(null,1,5,S,[function(a){return L(a)}],null),function(a){return L(a)},new R(null,3,5,S,[nu,pm,Yp],null),H,null,H,new R(null,3,5,S,[Wk,Vt,Wj],null),new R(null,1,5,S,[N(Is,new R(null,1,5,S,[mp],null),
N(Go,mp))],null),null])),qE(N(vo,new V(null,new m(null,3,[pm,null,Yp,null,nu,null],null),null),N(Sk,!0)),iE(new R(null,2,5,S,[new V(null,new m(null,3,[pm,null,Yp,null,nu,null],null),null),N(Lq,!0)],null),new R(null,2,5,S,[new V(null,new m(null,3,[pm,null,Yp,null,nu,null],null),null),sf(!0)],null)),new m(null,7,[Bk,jf,um,Go,No,function(a){return L(a)},$r,L,Tt,function(a,b){return qd(b,0)},pv,!0,Zv,N(es,new V(null,new m(null,3,[pm,null,Yp,null,nu,null],null),null),N(Lq,!0))],null),null)],null),null));
Z(Gp,N(lk,zj,new R(null,4,5,S,[En,ro,jl,Fp],null)),pE(new R(null,2,5,S,[N(eq,zj,new R(null,4,5,S,[En,ro,jl,Fp],null)),N(es,new V(null,new m(null,4,[Oq,null,Er,null,Yr,null,uu,null],null),null),N(Lq,!0))],null),new R(null,2,5,S,[gE(mh([yj,zj,ik,xk,Ek,kl,en,Eq,vs,Ps,mt,cw],[null,new R(null,4,5,S,[En,ro,jl,Fp],null),null,new R(null,1,5,S,[function(a){return L(a)}],null),function(a){return L(a)},new R(null,4,5,S,[Er,Oq,uu,Yr],null),H,null,H,new R(null,4,5,S,[En,ro,jl,Fp],null),new R(null,1,5,S,[N(Is,
new R(null,1,5,S,[mp],null),N(Go,mp))],null),null])),qE(N(vo,new V(null,new m(null,4,[Oq,null,Er,null,Yr,null,uu,null],null),null),N(Sk,!0)),iE(new R(null,2,5,S,[new V(null,new m(null,4,[Oq,null,Er,null,Yr,null,uu,null],null),null),N(Lq,!0)],null),new R(null,2,5,S,[new V(null,new m(null,4,[Oq,null,Er,null,Yr,null,uu,null],null),null),sf(!0)],null)),new m(null,7,[Bk,jf,um,Go,No,function(a){return L(a)},$r,L,Tt,function(a,b){return qd(b,0)},pv,!0,Zv,N(es,new V(null,new m(null,4,[Oq,null,Er,null,Yr,
null,uu,null],null),null),N(Lq,!0))],null),null)],null),null));Z(un,N(io,N(es,Lr,Xv)),GE(N(es,Lr,Xv),qE(N(vo,Oo,Xv),iE(new R(null,2,5,S,[Lr,Xv],null),new R(null,2,5,S,[JE,Xv],null)),new m(null,7,[Bk,jf,um,Go,No,function(a){return L(a)},$r,L,Tt,function(a,b){return qd(b,0)},pv,!0,Zv,N(es,Lr,Xv)],null),null),null));
Z(aw,N(io,N(es,Lr,Jv)),GE(N(es,Lr,Jv),qE(N(vo,Oo,Jv),iE(new R(null,2,5,S,[Lr,Jv],null),new R(null,2,5,S,[JE,Jv],null)),new m(null,7,[Bk,jf,um,Go,No,function(a){return L(a)},$r,L,Tt,function(a,b){return qd(b,0)},pv,!0,Zv,N(es,Lr,Jv)],null),null),null));Z(Pt,ck,ck);Z(Fv,N(io,qt),GE(qt,qt,null));Z(Bv,N(io,qt),GE(qt,qt,null));Z(cr,N(io,Pk),GE(Pk,Pk,null));Z(Au,ao,ao);Z(Tj,Gr,Gr);
Z(Tu,N(io,N(om,$m,$r,js)),GE(N(om,$m,$r,js),qE(jo,bb,new m(null,5,[um,js,No,function(a){return Pd(a)},$r,Pd,pv,!0,Zv,N(om,$m,$r,js)],null),null),null));Z(it,Xo,Xo);Z(Fj,Xo,Xo);Z(fu,Xo,Xo);Z(Vl,Cs,function(a){return!1===a});Z(er,N(om,zq,$r,dk),qE(Hv,Za,new m(null,5,[um,dk,No,function(a){return Qd(a)},$r,Qd,pv,!0,Zv,N(om,zq,$r,dk)],null),null));Z(Xq,Fs,Fs);
Z(Ms,N(io,N(om,zq,$r,dk)),GE(N(om,zq,$r,dk),qE(Hv,Za,new m(null,5,[um,dk,No,function(a){return Qd(a)},$r,Qd,pv,!0,Zv,N(om,zq,$r,dk)],null),null),null));Z(mm,Xo,Xo);Z(ov,Dp,Gd);Z(bp,Xo,Xo);Z(Qj,Xo,Xo);Z(Mj,zq,Za);Z(El,Xo,Xo);Z(Pp,Xo,Xo);Z(kw,Xo,Xo);Z(Fu,Xo,Xo);Z(Vp,Xo,Xo);Z(wr,Lr,JE);Z(co,Xo,Xo);Z(ou,Xo,Xo);Z(as,Xo,Xo);Z($s,Xo,Xo);
Z(yk,N(lk,zj,new R(null,1,5,S,[Fj],null)),pE(new R(null,2,5,S,[N(eq,zj,new R(null,1,5,S,[Fj],null)),N(es,new V(null,new m(null,1,[Cp,null],null),null),N(Lq,!0))],null),new R(null,2,5,S,[gE(mh([yj,zj,ik,xk,Ek,kl,en,Eq,vs,Ps,mt,cw],[null,new R(null,1,5,S,[Fj],null),null,new R(null,1,5,S,[function(a){return L(a)}],null),function(a){return L(a)},new R(null,1,5,S,[Cp],null),H,null,H,new R(null,1,5,S,[Fj],null),new R(null,1,5,S,[N(Is,new R(null,1,5,S,[mp],null),N(Go,mp))],null),null])),qE(N(vo,new V(null,
new m(null,1,[Cp,null],null),null),N(Sk,!0)),iE(new R(null,2,5,S,[new V(null,new m(null,1,[Cp,null],null),null),N(Lq,!0)],null),new R(null,2,5,S,[new V(null,new m(null,1,[Cp,null],null),null),sf(!0)],null)),new m(null,7,[Bk,jf,um,Go,No,function(a){return L(a)},$r,L,Tt,function(a,b){return qd(b,0)},pv,!0,Zv,N(es,new V(null,new m(null,1,[Cp,null],null),null),N(Lq,!0))],null),null)],null),null));
Z(Pu,N(lk,zj,new R(null,4,5,S,[Em,mn,Fj,co],null)),pE(new R(null,2,5,S,[N(eq,zj,new R(null,4,5,S,[Em,mn,Fj,co],null)),N(es,new V(null,new m(null,4,[W,null,Uo,null,Cp,null,Wq,null],null),null),N(Lq,!0))],null),new R(null,2,5,S,[gE(mh([yj,zj,ik,xk,Ek,kl,en,Eq,vs,Ps,mt,cw],[null,new R(null,4,5,S,[Em,mn,Fj,co],null),null,new R(null,1,5,S,[function(a){return L(a)}],null),function(a){return L(a)},new R(null,4,5,S,[Uo,W,Cp,Wq],null),H,null,H,new R(null,4,5,S,[Em,mn,Fj,co],null),new R(null,1,5,S,[N(Is,new R(null,
1,5,S,[mp],null),N(Go,mp))],null),null])),qE(N(vo,new V(null,new m(null,4,[W,null,Uo,null,Cp,null,Wq,null],null),null),N(Sk,!0)),iE(new R(null,2,5,S,[new V(null,new m(null,4,[W,null,Uo,null,Cp,null,Wq,null],null),null),N(Lq,!0)],null),new R(null,2,5,S,[new V(null,new m(null,4,[W,null,Uo,null,Cp,null,Wq,null],null),null),sf(!0)],null)),new m(null,7,[Bk,jf,um,Go,No,function(a){return L(a)},$r,L,Tt,function(a,b){return qd(b,0)},pv,!0,Zv,N(es,new V(null,new m(null,4,[W,null,Uo,null,Cp,null,Wq,null],null),
null),N(Lq,!0))],null),null)],null),null));
Z(zl,N(lk,zj,new R(null,1,5,S,[Fj],null)),pE(new R(null,2,5,S,[N(eq,zj,new R(null,1,5,S,[Fj],null)),N(es,new V(null,new m(null,1,[Cp,null],null),null),N(Lq,!0))],null),new R(null,2,5,S,[gE(mh([yj,zj,ik,xk,Ek,kl,en,Eq,vs,Ps,mt,cw],[null,new R(null,1,5,S,[Fj],null),null,new R(null,1,5,S,[function(a){return L(a)}],null),function(a){return L(a)},new R(null,1,5,S,[Cp],null),H,null,H,new R(null,1,5,S,[Fj],null),new R(null,1,5,S,[N(Is,new R(null,1,5,S,[mp],null),N(Go,mp))],null),null])),qE(N(vo,new V(null,
new m(null,1,[Cp,null],null),null),N(Sk,!0)),iE(new R(null,2,5,S,[new V(null,new m(null,1,[Cp,null],null),null),N(Lq,!0)],null),new R(null,2,5,S,[new V(null,new m(null,1,[Cp,null],null),null),sf(!0)],null)),new m(null,7,[Bk,jf,um,Go,No,function(a){return L(a)},$r,L,Tt,function(a,b){return qd(b,0)},pv,!0,Zv,N(es,new V(null,new m(null,1,[Cp,null],null),null),N(Lq,!0))],null),null)],null),null));Z(to,Xo,Xo);
Z(Vv,N(lk,zj,new R(null,10,5,S,[et,vj,Wj,Vt,Wk,mn,Gs,Xm,Gp,it],null)),pE(new R(null,2,5,S,[N(eq,zj,new R(null,10,5,S,[et,vj,Wj,Vt,Wk,mn,Gs,Xm,Gp,it],null)),N(es,new V(null,new m(null,10,[Hj,null,Kj,null,W,null,Xk,null,ml,null,pm,null,Jn,null,Yp,null,or,null,nu,null],null),null),N(Lq,!0))],null),new R(null,2,5,S,[gE(mh([yj,zj,ik,xk,Ek,kl,en,Eq,vs,Ps,mt,cw],[null,new R(null,10,5,S,[et,vj,Wj,Vt,Wk,mn,Gs,Xm,Gp,it],null),null,new R(null,1,5,S,[function(a){return L(a)}],null),function(a){return L(a)},new R(null,
10,5,S,[Hj,Jn,Yp,pm,nu,W,Xk,or,ml,Kj],null),H,null,H,new R(null,10,5,S,[et,vj,Wj,Vt,Wk,mn,Gs,Xm,Gp,it],null),new R(null,1,5,S,[N(Is,new R(null,1,5,S,[mp],null),N(Go,mp))],null),null])),qE(N(vo,new V(null,new m(null,10,[Hj,null,Kj,null,W,null,Xk,null,ml,null,pm,null,Jn,null,Yp,null,or,null,nu,null],null),null),N(Sk,!0)),iE(new R(null,2,5,S,[new V(null,new m(null,10,[Hj,null,Kj,null,W,null,Xk,null,ml,null,pm,null,Jn,null,Yp,null,or,null,nu,null],null),null),N(Lq,!0)],null),new R(null,2,5,S,[new V(null,
new m(null,10,[Hj,null,Kj,null,W,null,Xk,null,ml,null,pm,null,Jn,null,Yp,null,or,null,nu,null],null),null),sf(!0)],null)),new m(null,7,[Bk,jf,um,Go,No,function(a){return L(a)},$r,L,Tt,function(a,b){return qd(b,0)},pv,!0,Zv,N(es,new V(null,new m(null,10,[Hj,null,Kj,null,W,null,Xk,null,ml,null,pm,null,Jn,null,Yp,null,or,null,nu,null],null),null),N(Lq,!0))],null),null)],null),null));
Z(Jv,N(lk,zj,new R(null,17,5,S,[Wo,op,$n,Qk,In,jq,Bj,fv,Wn,so,Fr,Zl,Um,av,Lk,kq,pj],null)),pE(new R(null,2,5,S,[N(eq,zj,new R(null,17,5,S,[Wo,op,$n,Qk,In,jq,Bj,fv,Wn,so,Fr,Zl,Um,av,Lk,kq,pj],null)),N(es,new V(null,new m(null,17,[Tk,null,Fl,null,Rl,null,xm,null,qn,null,Xn,null,Po,null,$p,null,sr,null,tr,null,Vr,null,Zr,null,fs,null,gs,null,is,null,Gu,null,X,null],null),null),N(Lq,!0))],null),new R(null,2,5,S,[gE(mh([yj,zj,ik,xk,Ek,kl,en,Eq,vs,Ps,mt,cw],[null,new R(null,17,5,S,[Wo,op,$n,Qk,In,jq,Bj,
fv,Wn,so,Fr,Zl,Um,av,Lk,kq,pj],null),null,new R(null,1,5,S,[function(a){return L(a)}],null),function(a){return L(a)},new R(null,17,5,S,[xm,gs,is,fs,Tk,Gu,Fl,tr,Zr,X,Rl,$p,sr,Po,Vr,Xn,qn],null),H,null,H,new R(null,17,5,S,[Wo,op,$n,Qk,In,jq,Bj,fv,Wn,so,Fr,Zl,Um,av,Lk,kq,pj],null),new R(null,1,5,S,[N(Is,new R(null,1,5,S,[mp],null),N(Go,mp))],null),null])),qE(N(vo,new V(null,new m(null,17,[Tk,null,Fl,null,Rl,null,xm,null,qn,null,Xn,null,Po,null,$p,null,sr,null,tr,null,Vr,null,Zr,null,fs,null,gs,null,
is,null,Gu,null,X,null],null),null),N(Sk,!0)),iE(new R(null,2,5,S,[new V(null,new m(null,17,[Tk,null,Fl,null,Rl,null,xm,null,qn,null,Xn,null,Po,null,$p,null,sr,null,tr,null,Vr,null,Zr,null,fs,null,gs,null,is,null,Gu,null,X,null],null),null),N(Lq,!0)],null),new R(null,2,5,S,[new V(null,new m(null,17,[Tk,null,Fl,null,Rl,null,xm,null,qn,null,Xn,null,Po,null,$p,null,sr,null,tr,null,Vr,null,Zr,null,fs,null,gs,null,is,null,Gu,null,X,null],null),null),sf(!0)],null)),new m(null,7,[Bk,jf,um,Go,No,function(a){return L(a)},
$r,L,Tt,function(a,b){return qd(b,0)},pv,!0,Zv,N(es,new V(null,new m(null,17,[Tk,null,Fl,null,Rl,null,xm,null,qn,null,Xn,null,Po,null,$p,null,sr,null,tr,null,Vr,null,Zr,null,fs,null,gs,null,is,null,Gu,null,X,null],null),null),N(Lq,!0))],null),null)],null),null));
Z(ij,N(lk,zj,new R(null,3,5,S,[pk,co,Uv],null)),pE(new R(null,2,5,S,[N(eq,zj,new R(null,3,5,S,[pk,co,Uv],null)),N(es,new V(null,new m(null,3,[hq,null,Iq,null,Wq,null],null),null),N(Lq,!0))],null),new R(null,2,5,S,[gE(mh([yj,zj,ik,xk,Ek,kl,en,Eq,vs,Ps,mt,cw],[null,new R(null,3,5,S,[pk,co,Uv],null),null,new R(null,1,5,S,[function(a){return L(a)}],null),function(a){return L(a)},new R(null,3,5,S,[hq,Wq,Iq],null),H,null,H,new R(null,3,5,S,[pk,co,Uv],null),new R(null,1,5,S,[N(Is,new R(null,1,5,S,[mp],null),
N(Go,mp))],null),null])),qE(N(vo,new V(null,new m(null,3,[hq,null,Iq,null,Wq,null],null),null),N(Sk,!0)),iE(new R(null,2,5,S,[new V(null,new m(null,3,[hq,null,Iq,null,Wq,null],null),null),N(Lq,!0)],null),new R(null,2,5,S,[new V(null,new m(null,3,[hq,null,Iq,null,Wq,null],null),null),sf(!0)],null)),new m(null,7,[Bk,jf,um,Go,No,function(a){return L(a)},$r,L,Tt,function(a,b){return qd(b,0)},pv,!0,Zv,N(es,new V(null,new m(null,3,[hq,null,Iq,null,Wq,null],null),null),N(Lq,!0))],null),null)],null),null));
Z(Ks,Xo,Xo);Z(ir,Xo,Xo);Z(gv,Xo,Xo);Z(Yj,Xo,Xo);Z(xr,Lr,JE);Z(Tr,Xo,Xo);
Z(ft,N(lk,zj,new R(null,1,5,S,[Fj],null)),pE(new R(null,2,5,S,[N(eq,zj,new R(null,1,5,S,[Fj],null)),N(es,new V(null,new m(null,1,[Cp,null],null),null),N(Lq,!0))],null),new R(null,2,5,S,[gE(mh([yj,zj,ik,xk,Ek,kl,en,Eq,vs,Ps,mt,cw],[null,new R(null,1,5,S,[Fj],null),null,new R(null,1,5,S,[function(a){return L(a)}],null),function(a){return L(a)},new R(null,1,5,S,[Cp],null),H,null,H,new R(null,1,5,S,[Fj],null),new R(null,1,5,S,[N(Is,new R(null,1,5,S,[mp],null),N(Go,mp))],null),null])),qE(N(vo,new V(null,
new m(null,1,[Cp,null],null),null),N(Sk,!0)),iE(new R(null,2,5,S,[new V(null,new m(null,1,[Cp,null],null),null),N(Lq,!0)],null),new R(null,2,5,S,[new V(null,new m(null,1,[Cp,null],null),null),sf(!0)],null)),new m(null,7,[Bk,jf,um,Go,No,function(a){return L(a)},$r,L,Tt,function(a,b){return qd(b,0)},pv,!0,Zv,N(es,new V(null,new m(null,1,[Cp,null],null),null),N(Lq,!0))],null),null)],null),null));Z(Im,Xo,Xo);Z(km,Xo,Xo);
Z(Uu,N(lk,zj,new R(null,8,5,S,[et,vj,Wj,Vt,Wk,mn,Tu,it],null)),pE(new R(null,2,5,S,[N(eq,zj,new R(null,8,5,S,[et,vj,Wj,Vt,Wk,mn,Tu,it],null)),N(es,new V(null,new m(null,8,[Hj,null,Kj,null,W,null,pm,null,Jn,null,Yp,null,Kq,null,nu,null],null),null),N(Lq,!0))],null),new R(null,2,5,S,[gE(mh([yj,zj,ik,xk,Ek,kl,en,Eq,vs,Ps,mt,cw],[null,new R(null,8,5,S,[et,vj,Wj,Vt,Wk,mn,Tu,it],null),null,new R(null,1,5,S,[function(a){return L(a)}],null),function(a){return L(a)},new R(null,8,5,S,[Hj,Jn,Yp,pm,nu,W,Kq,Kj],
null),H,null,H,new R(null,8,5,S,[et,vj,Wj,Vt,Wk,mn,Tu,it],null),new R(null,1,5,S,[N(Is,new R(null,1,5,S,[mp],null),N(Go,mp))],null),null])),qE(N(vo,new V(null,new m(null,8,[Hj,null,Kj,null,W,null,pm,null,Jn,null,Yp,null,Kq,null,nu,null],null),null),N(Sk,!0)),iE(new R(null,2,5,S,[new V(null,new m(null,8,[Hj,null,Kj,null,W,null,pm,null,Jn,null,Yp,null,Kq,null,nu,null],null),null),N(Lq,!0)],null),new R(null,2,5,S,[new V(null,new m(null,8,[Hj,null,Kj,null,W,null,pm,null,Jn,null,Yp,null,Kq,null,nu,null],
null),null),sf(!0)],null)),new m(null,7,[Bk,jf,um,Go,No,function(a){return L(a)},$r,L,Tt,function(a,b){return qd(b,0)},pv,!0,Zv,N(es,new V(null,new m(null,8,[Hj,null,Kj,null,W,null,pm,null,Jn,null,Yp,null,Kq,null,nu,null],null),null),N(Lq,!0))],null),null)],null),null));
Z(Np,N(lk,zj,new R(null,1,5,S,[Tu],null)),pE(new R(null,2,5,S,[N(eq,zj,new R(null,1,5,S,[Tu],null)),N(es,new V(null,new m(null,1,[Kq,null],null),null),N(Lq,!0))],null),new R(null,2,5,S,[gE(mh([yj,zj,ik,xk,Ek,kl,en,Eq,vs,Ps,mt,cw],[null,new R(null,1,5,S,[Tu],null),null,new R(null,1,5,S,[function(a){return L(a)}],null),function(a){return L(a)},new R(null,1,5,S,[Kq],null),H,null,H,new R(null,1,5,S,[Tu],null),new R(null,1,5,S,[N(Is,new R(null,1,5,S,[mp],null),N(Go,mp))],null),null])),qE(N(vo,new V(null,
new m(null,1,[Kq,null],null),null),N(Sk,!0)),iE(new R(null,2,5,S,[new V(null,new m(null,1,[Kq,null],null),null),N(Lq,!0)],null),new R(null,2,5,S,[new V(null,new m(null,1,[Kq,null],null),null),sf(!0)],null)),new m(null,7,[Bk,jf,um,Go,No,function(a){return L(a)},$r,L,Tt,function(a,b){return qd(b,0)},pv,!0,Zv,N(es,new V(null,new m(null,1,[Kq,null],null),null),N(Lq,!0))],null),null)],null),null));Z(fk,Xo,Xo);
Z(Zo,N(io,N(om,Cu,$r,js)),GE(N(om,Cu,$r,js),qE(Cu,Cu,new m(null,5,[um,js,No,function(a){return Pd(a)},$r,Pd,pv,!0,Zv,N(om,Cu,$r,js)],null),null),null));Z(Iu,N(io,N(om,Cu,$r,js)),GE(N(om,Cu,$r,js),qE(Cu,Cu,new m(null,5,[um,js,No,function(a){return Pd(a)},$r,Pd,pv,!0,Zv,N(om,Cu,$r,js)],null),null),null));Z(Do,N(io,N(om,Cu,$r,js)),GE(N(om,Cu,$r,js),qE(Cu,Cu,new m(null,5,[um,js,No,function(a){return Pd(a)},$r,Pd,pv,!0,Zv,N(om,Cu,$r,js)],null),null),null));Z($k,Ul,Ul);Z(rk,Lr,JE);
Z(Os,N(lk,zj,new R(null,1,5,S,[Fj],null)),pE(new R(null,2,5,S,[N(eq,zj,new R(null,1,5,S,[Fj],null)),N(es,new V(null,new m(null,1,[Cp,null],null),null),N(Lq,!0))],null),new R(null,2,5,S,[gE(mh([yj,zj,ik,xk,Ek,kl,en,Eq,vs,Ps,mt,cw],[null,new R(null,1,5,S,[Fj],null),null,new R(null,1,5,S,[function(a){return L(a)}],null),function(a){return L(a)},new R(null,1,5,S,[Cp],null),H,null,H,new R(null,1,5,S,[Fj],null),new R(null,1,5,S,[N(Is,new R(null,1,5,S,[mp],null),N(Go,mp))],null),null])),qE(N(vo,new V(null,
new m(null,1,[Cp,null],null),null),N(Sk,!0)),iE(new R(null,2,5,S,[new V(null,new m(null,1,[Cp,null],null),null),N(Lq,!0)],null),new R(null,2,5,S,[new V(null,new m(null,1,[Cp,null],null),null),sf(!0)],null)),new m(null,7,[Bk,jf,um,Go,No,function(a){return L(a)},$r,L,Tt,function(a,b){return qd(b,0)},pv,!0,Zv,N(es,new V(null,new m(null,1,[Cp,null],null),null),N(Lq,!0))],null),null)],null),null));Z(wo,vn,vn);
Z(du,N(lk,zj,new R(null,1,5,S,[Fj],null)),pE(new R(null,2,5,S,[N(eq,zj,new R(null,1,5,S,[Fj],null)),N(es,new V(null,new m(null,1,[Cp,null],null),null),N(Lq,!0))],null),new R(null,2,5,S,[gE(mh([yj,zj,ik,xk,Ek,kl,en,Eq,vs,Ps,mt,cw],[null,new R(null,1,5,S,[Fj],null),null,new R(null,1,5,S,[function(a){return L(a)}],null),function(a){return L(a)},new R(null,1,5,S,[Cp],null),H,null,H,new R(null,1,5,S,[Fj],null),new R(null,1,5,S,[N(Is,new R(null,1,5,S,[mp],null),N(Go,mp))],null),null])),qE(N(vo,new V(null,
new m(null,1,[Cp,null],null),null),N(Sk,!0)),iE(new R(null,2,5,S,[new V(null,new m(null,1,[Cp,null],null),null),N(Lq,!0)],null),new R(null,2,5,S,[new V(null,new m(null,1,[Cp,null],null),null),sf(!0)],null)),new m(null,7,[Bk,jf,um,Go,No,function(a){return L(a)},$r,L,Tt,function(a,b){return qd(b,0)},pv,!0,Zv,N(es,new V(null,new m(null,1,[Cp,null],null),null),N(Lq,!0))],null),null)],null),null));Z(mn,zq,Za);
Z(on,N(lk,zj,new R(null,9,5,S,[ur,ps,Wj,Vt,Ws,Wk,mn,fq,fu],null)),pE(new R(null,2,5,S,[N(eq,zj,new R(null,9,5,S,[ur,ps,Wj,Vt,Ws,Wk,mn,fq,fu],null)),N(es,new V(null,new m(null,9,[Rj,null,hk,null,Dk,null,W,null,pm,null,Pm,null,Vm,null,Yp,null,nu,null],null),null),N(Lq,!0))],null),new R(null,2,5,S,[gE(mh([yj,zj,ik,xk,Ek,kl,en,Eq,vs,Ps,mt,cw],[null,new R(null,9,5,S,[ur,ps,Wj,Vt,Ws,Wk,mn,fq,fu],null),null,new R(null,1,5,S,[function(a){return L(a)}],null),function(a){return L(a)},new R(null,9,5,S,[Vm,Dk,
Yp,pm,Rj,nu,W,hk,Pm],null),H,null,H,new R(null,9,5,S,[ur,ps,Wj,Vt,Ws,Wk,mn,fq,fu],null),new R(null,1,5,S,[N(Is,new R(null,1,5,S,[mp],null),N(Go,mp))],null),null])),qE(N(vo,new V(null,new m(null,9,[Rj,null,hk,null,Dk,null,W,null,pm,null,Pm,null,Vm,null,Yp,null,nu,null],null),null),N(Sk,!0)),iE(new R(null,2,5,S,[new V(null,new m(null,9,[Rj,null,hk,null,Dk,null,W,null,pm,null,Pm,null,Vm,null,Yp,null,nu,null],null),null),N(Lq,!0)],null),new R(null,2,5,S,[new V(null,new m(null,9,[Rj,null,hk,null,Dk,null,
W,null,pm,null,Pm,null,Vm,null,Yp,null,nu,null],null),null),sf(!0)],null)),new m(null,7,[Bk,jf,um,Go,No,function(a){return L(a)},$r,L,Tt,function(a,b){return qd(b,0)},pv,!0,Zv,N(es,new V(null,new m(null,9,[Rj,null,hk,null,Dk,null,W,null,pm,null,Pm,null,Vm,null,Yp,null,nu,null],null),null),N(Lq,!0))],null),null)],null),null));
Z(Pn,N(lk,zj,new R(null,22,5,S,[Sm,et,vj,Gm,Wj,Vt,Wk,mn,Gs,Xm,Gp,un,aw,Pt,Fv,Bv,cr,kw,Fu,it,Pp,El],null)),pE(new R(null,2,5,S,[N(eq,zj,new R(null,22,5,S,[Sm,et,vj,Gm,Wj,Vt,Wk,mn,Gs,Xm,Gp,un,aw,Pt,Fv,Bv,cr,kw,Fu,it,Pp,El],null)),N(es,new V(null,new m(null,22,[Hj,null,Ij,null,Kj,null,zk,null,W,null,Nk,null,Xk,null,ml,null,pm,null,Tm,null,Jn,null,fo,null,ko,null,yo,null,Yp,null,iq,null,ar,null,or,null,Qr,null,ys,null,nu,null,Wu,null],null),null),N(Lq,!0))],null),new R(null,2,5,S,[gE(mh([yj,zj,ik,xk,
Ek,kl,en,Eq,vs,Ps,mt,cw],[null,new R(null,22,5,S,[Sm,et,vj,Gm,Wj,Vt,Wk,mn,Gs,Xm,Gp,un,aw,Pt,Fv,Bv,cr,kw,Fu,it,Pp,El],null),null,new R(null,1,5,S,[function(a){return L(a)}],null),function(a){return L(a)},new R(null,22,5,S,[Nk,Hj,Jn,ar,Yp,pm,nu,W,Xk,or,ml,Qr,Tm,zk,yo,fo,ko,ys,iq,Kj,Ij,Wu],null),H,null,H,new R(null,22,5,S,[Sm,et,vj,Gm,Wj,Vt,Wk,mn,Gs,Xm,Gp,un,aw,Pt,Fv,Bv,cr,kw,Fu,it,Pp,El],null),new R(null,1,5,S,[N(Is,new R(null,1,5,S,[mp],null),N(Go,mp))],null),null])),qE(N(vo,new V(null,new m(null,
22,[Hj,null,Ij,null,Kj,null,zk,null,W,null,Nk,null,Xk,null,ml,null,pm,null,Tm,null,Jn,null,fo,null,ko,null,yo,null,Yp,null,iq,null,ar,null,or,null,Qr,null,ys,null,nu,null,Wu,null],null),null),N(Sk,!0)),iE(new R(null,2,5,S,[new V(null,new m(null,22,[Hj,null,Ij,null,Kj,null,zk,null,W,null,Nk,null,Xk,null,ml,null,pm,null,Tm,null,Jn,null,fo,null,ko,null,yo,null,Yp,null,iq,null,ar,null,or,null,Qr,null,ys,null,nu,null,Wu,null],null),null),N(Lq,!0)],null),new R(null,2,5,S,[new V(null,new m(null,22,[Hj,null,
Ij,null,Kj,null,zk,null,W,null,Nk,null,Xk,null,ml,null,pm,null,Tm,null,Jn,null,fo,null,ko,null,yo,null,Yp,null,iq,null,ar,null,or,null,Qr,null,ys,null,nu,null,Wu,null],null),null),sf(!0)],null)),new m(null,7,[Bk,jf,um,Go,No,function(a){return L(a)},$r,L,Tt,function(a,b){return qd(b,0)},pv,!0,Zv,N(es,new V(null,new m(null,22,[Hj,null,Ij,null,Kj,null,zk,null,W,null,Nk,null,Xk,null,ml,null,pm,null,Tm,null,Jn,null,fo,null,ko,null,yo,null,Yp,null,iq,null,ar,null,or,null,Qr,null,ys,null,nu,null,Wu,null],
null),null),N(Lq,!0))],null),null)],null),null));Z(jr,zq,Za);Z(Ql,zq,Za);Z(im,zq,Za);Z(iw,zq,Za);Z(Rt,zq,Za);
Z(Vs,N(lk,zj,new R(null,3,5,S,[mn,as,ou],null)),pE(new R(null,2,5,S,[N(eq,zj,new R(null,3,5,S,[mn,as,ou],null)),N(es,new V(null,new m(null,3,[Ak,null,W,null,Br,null],null),null),N(Lq,!0))],null),new R(null,2,5,S,[gE(mh([yj,zj,ik,xk,Ek,kl,en,Eq,vs,Ps,mt,cw],[null,new R(null,3,5,S,[mn,as,ou],null),null,new R(null,1,5,S,[function(a){return L(a)}],null),function(a){return L(a)},new R(null,3,5,S,[W,Ak,Br],null),H,null,H,new R(null,3,5,S,[mn,as,ou],null),new R(null,1,5,S,[N(Is,new R(null,1,5,S,[mp],null),
N(Go,mp))],null),null])),qE(N(vo,new V(null,new m(null,3,[Ak,null,W,null,Br,null],null),null),N(Sk,!0)),iE(new R(null,2,5,S,[new V(null,new m(null,3,[Ak,null,W,null,Br,null],null),null),N(Lq,!0)],null),new R(null,2,5,S,[new V(null,new m(null,3,[Ak,null,W,null,Br,null],null),null),sf(!0)],null)),new m(null,7,[Bk,jf,um,Go,No,function(a){return L(a)},$r,L,Tt,function(a,b){return qd(b,0)},pv,!0,Zv,N(es,new V(null,new m(null,3,[Ak,null,W,null,Br,null],null),null),N(Lq,!0))],null),null)],null),null));
Z(Mq,Xo,Xo);
Z(fm,N(lk,zj,new R(null,4,5,S,[uv,Tj,tj,Xq],null)),pE(new R(null,2,5,S,[N(eq,zj,new R(null,4,5,S,[uv,Tj,tj,Xq],null)),N(es,new V(null,new m(null,4,[Un,null,eo,null,Bs,null,ct,null],null),null),N(Lq,!0))],null),new R(null,2,5,S,[gE(mh([yj,zj,ik,xk,Ek,kl,en,Eq,vs,Ps,mt,cw],[null,new R(null,4,5,S,[uv,Tj,tj,Xq],null),null,new R(null,1,5,S,[function(a){return L(a)}],null),function(a){return L(a)},new R(null,4,5,S,[ct,Un,Bs,eo],null),H,null,H,new R(null,4,5,S,[uv,Tj,tj,Xq],null),new R(null,1,5,S,[N(Is,
new R(null,1,5,S,[mp],null),N(Go,mp))],null),null])),qE(N(vo,new V(null,new m(null,4,[Un,null,eo,null,Bs,null,ct,null],null),null),N(Sk,!0)),iE(new R(null,2,5,S,[new V(null,new m(null,4,[Un,null,eo,null,Bs,null,ct,null],null),null),N(Lq,!0)],null),new R(null,2,5,S,[new V(null,new m(null,4,[Un,null,eo,null,Bs,null,ct,null],null),null),sf(!0)],null)),new m(null,7,[Bk,jf,um,Go,No,function(a){return L(a)},$r,L,Tt,function(a,b){return qd(b,0)},pv,!0,Zv,N(es,new V(null,new m(null,4,[Un,null,eo,null,Bs,
null,ct,null],null),null),N(Lq,!0))],null),null)],null),null));
Z(ru,N(lk,zj,new R(null,10,5,S,[et,vj,Wj,Vt,Wk,mn,Gs,Xm,Gp,it],null)),pE(new R(null,2,5,S,[N(eq,zj,new R(null,10,5,S,[et,vj,Wj,Vt,Wk,mn,Gs,Xm,Gp,it],null)),N(es,new V(null,new m(null,10,[Hj,null,Kj,null,W,null,Xk,null,ml,null,pm,null,Jn,null,Yp,null,or,null,nu,null],null),null),N(Lq,!0))],null),new R(null,2,5,S,[gE(mh([yj,zj,ik,xk,Ek,kl,en,Eq,vs,Ps,mt,cw],[null,new R(null,10,5,S,[et,vj,Wj,Vt,Wk,mn,Gs,Xm,Gp,it],null),null,new R(null,1,5,S,[function(a){return L(a)}],null),function(a){return L(a)},new R(null,
10,5,S,[Hj,Jn,Yp,pm,nu,W,Xk,or,ml,Kj],null),H,null,H,new R(null,10,5,S,[et,vj,Wj,Vt,Wk,mn,Gs,Xm,Gp,it],null),new R(null,1,5,S,[N(Is,new R(null,1,5,S,[mp],null),N(Go,mp))],null),null])),qE(N(vo,new V(null,new m(null,10,[Hj,null,Kj,null,W,null,Xk,null,ml,null,pm,null,Jn,null,Yp,null,or,null,nu,null],null),null),N(Sk,!0)),iE(new R(null,2,5,S,[new V(null,new m(null,10,[Hj,null,Kj,null,W,null,Xk,null,ml,null,pm,null,Jn,null,Yp,null,or,null,nu,null],null),null),N(Lq,!0)],null),new R(null,2,5,S,[new V(null,
new m(null,10,[Hj,null,Kj,null,W,null,Xk,null,ml,null,pm,null,Jn,null,Yp,null,or,null,nu,null],null),null),sf(!0)],null)),new m(null,7,[Bk,jf,um,Go,No,function(a){return L(a)},$r,L,Tt,function(a,b){return qd(b,0)},pv,!0,Zv,N(es,new V(null,new m(null,10,[Hj,null,Kj,null,W,null,Xk,null,ml,null,pm,null,Jn,null,Yp,null,or,null,nu,null],null),null),N(Lq,!0))],null),null)],null),null));
Z(xj,N(lk,zj,new R(null,4,5,S,[Wj,Vt,Ws,Wk],null)),pE(new R(null,2,5,S,[N(eq,zj,new R(null,4,5,S,[Wj,Vt,Ws,Wk],null)),N(es,new V(null,new m(null,4,[Rj,null,pm,null,Yp,null,nu,null],null),null),N(Lq,!0))],null),new R(null,2,5,S,[gE(mh([yj,zj,ik,xk,Ek,kl,en,Eq,vs,Ps,mt,cw],[null,new R(null,4,5,S,[Wj,Vt,Ws,Wk],null),null,new R(null,1,5,S,[function(a){return L(a)}],null),function(a){return L(a)},new R(null,4,5,S,[Yp,pm,Rj,nu],null),H,null,H,new R(null,4,5,S,[Wj,Vt,Ws,Wk],null),new R(null,1,5,S,[N(Is,
new R(null,1,5,S,[mp],null),N(Go,mp))],null),null])),qE(N(vo,new V(null,new m(null,4,[Rj,null,pm,null,Yp,null,nu,null],null),null),N(Sk,!0)),iE(new R(null,2,5,S,[new V(null,new m(null,4,[Rj,null,pm,null,Yp,null,nu,null],null),null),N(Lq,!0)],null),new R(null,2,5,S,[new V(null,new m(null,4,[Rj,null,pm,null,Yp,null,nu,null],null),null),sf(!0)],null)),new m(null,7,[Bk,jf,um,Go,No,function(a){return L(a)},$r,L,Tt,function(a,b){return qd(b,0)},pv,!0,Zv,N(es,new V(null,new m(null,4,[Rj,null,pm,null,Yp,
null,nu,null],null),null),N(Lq,!0))],null),null)],null),null));
Z(sp,N(lk,zj,new R(null,2,5,S,[hw,Au],null)),pE(new R(null,2,5,S,[N(eq,zj,new R(null,2,5,S,[hw,Au],null)),N(es,new V(null,new m(null,2,[Gq,null,cs,null],null),null),N(Lq,!0))],null),new R(null,2,5,S,[gE(mh([yj,zj,ik,xk,Ek,kl,en,Eq,vs,Ps,mt,cw],[null,new R(null,2,5,S,[hw,Au],null),null,new R(null,1,5,S,[function(a){return L(a)}],null),function(a){return L(a)},new R(null,2,5,S,[cs,Gq],null),H,null,H,new R(null,2,5,S,[hw,Au],null),new R(null,1,5,S,[N(Is,new R(null,1,5,S,[mp],null),N(Go,mp))],null),null])),
qE(N(vo,new V(null,new m(null,2,[Gq,null,cs,null],null),null),N(Sk,!0)),iE(new R(null,2,5,S,[new V(null,new m(null,2,[Gq,null,cs,null],null),null),N(Lq,!0)],null),new R(null,2,5,S,[new V(null,new m(null,2,[Gq,null,cs,null],null),null),sf(!0)],null)),new m(null,7,[Bk,jf,um,Go,No,function(a){return L(a)},$r,L,Tt,function(a,b){return qd(b,0)},pv,!0,Zv,N(es,new V(null,new m(null,2,[Gq,null,cs,null],null),null),N(Lq,!0))],null),null)],null),null));Z(Gt,Xo,Xo);Z(Ik,Xo,Xo);Z(fp,Xo,Xo);
Z(tv,N(lk,zj,new R(null,1,5,S,[Fj],null)),pE(new R(null,2,5,S,[N(eq,zj,new R(null,1,5,S,[Fj],null)),N(es,new V(null,new m(null,1,[Cp,null],null),null),N(Lq,!0))],null),new R(null,2,5,S,[gE(mh([yj,zj,ik,xk,Ek,kl,en,Eq,vs,Ps,mt,cw],[null,new R(null,1,5,S,[Fj],null),null,new R(null,1,5,S,[function(a){return L(a)}],null),function(a){return L(a)},new R(null,1,5,S,[Cp],null),H,null,H,new R(null,1,5,S,[Fj],null),new R(null,1,5,S,[N(Is,new R(null,1,5,S,[mp],null),N(Go,mp))],null),null])),qE(N(vo,new V(null,
new m(null,1,[Cp,null],null),null),N(Sk,!0)),iE(new R(null,2,5,S,[new V(null,new m(null,1,[Cp,null],null),null),N(Lq,!0)],null),new R(null,2,5,S,[new V(null,new m(null,1,[Cp,null],null),null),sf(!0)],null)),new m(null,7,[Bk,jf,um,Go,No,function(a){return L(a)},$r,L,Tt,function(a,b){return qd(b,0)},pv,!0,Zv,N(es,new V(null,new m(null,1,[Cp,null],null),null),N(Lq,!0))],null),null)],null),null));
Z(zt,N(lk,zj,new R(null,9,5,S,[Sm,vj,Wj,Vt,Wk,mn,cr,Pp,El],null)),pE(new R(null,2,5,S,[N(eq,zj,new R(null,9,5,S,[Sm,vj,Wj,Vt,Wk,mn,cr,Pp,El],null)),N(es,new V(null,new m(null,9,[Ij,null,W,null,Nk,null,pm,null,Jn,null,ko,null,Yp,null,nu,null,Wu,null],null),null),N(Lq,!0))],null),new R(null,2,5,S,[gE(mh([yj,zj,ik,xk,Ek,kl,en,Eq,vs,Ps,mt,cw],[null,new R(null,9,5,S,[Sm,vj,Wj,Vt,Wk,mn,cr,Pp,El],null),null,new R(null,1,5,S,[function(a){return L(a)}],null),function(a){return L(a)},new R(null,9,5,S,[Nk,Jn,
Yp,pm,nu,W,ko,Ij,Wu],null),H,null,H,new R(null,9,5,S,[Sm,vj,Wj,Vt,Wk,mn,cr,Pp,El],null),new R(null,1,5,S,[N(Is,new R(null,1,5,S,[mp],null),N(Go,mp))],null),null])),qE(N(vo,new V(null,new m(null,9,[Ij,null,W,null,Nk,null,pm,null,Jn,null,ko,null,Yp,null,nu,null,Wu,null],null),null),N(Sk,!0)),iE(new R(null,2,5,S,[new V(null,new m(null,9,[Ij,null,W,null,Nk,null,pm,null,Jn,null,ko,null,Yp,null,nu,null,Wu,null],null),null),N(Lq,!0)],null),new R(null,2,5,S,[new V(null,new m(null,9,[Ij,null,W,null,Nk,null,
pm,null,Jn,null,ko,null,Yp,null,nu,null,Wu,null],null),null),sf(!0)],null)),new m(null,7,[Bk,jf,um,Go,No,function(a){return L(a)},$r,L,Tt,function(a,b){return qd(b,0)},pv,!0,Zv,N(es,new V(null,new m(null,9,[Ij,null,W,null,Nk,null,pm,null,Jn,null,ko,null,Yp,null,nu,null,Wu,null],null),null),N(Lq,!0))],null),null)],null),null));
Z(np,N(lk,zj,new R(null,3,5,S,[Wk,bp,Vp],null)),pE(new R(null,2,5,S,[N(eq,zj,new R(null,3,5,S,[Wk,bp,Vp],null)),N(es,new V(null,new m(null,3,[Rk,null,Qs,null,nu,null],null),null),N(Lq,!0))],null),new R(null,2,5,S,[gE(mh([yj,zj,ik,xk,Ek,kl,en,Eq,vs,Ps,mt,cw],[null,new R(null,3,5,S,[Wk,bp,Vp],null),null,new R(null,1,5,S,[function(a){return L(a)}],null),function(a){return L(a)},new R(null,3,5,S,[nu,Rk,Qs],null),H,null,H,new R(null,3,5,S,[Wk,bp,Vp],null),new R(null,1,5,S,[N(Is,new R(null,1,5,S,[mp],null),
N(Go,mp))],null),null])),qE(N(vo,new V(null,new m(null,3,[Rk,null,Qs,null,nu,null],null),null),N(Sk,!0)),iE(new R(null,2,5,S,[new V(null,new m(null,3,[Rk,null,Qs,null,nu,null],null),null),N(Lq,!0)],null),new R(null,2,5,S,[new V(null,new m(null,3,[Rk,null,Qs,null,nu,null],null),null),sf(!0)],null)),new m(null,7,[Bk,jf,um,Go,No,function(a){return L(a)},$r,L,Tt,function(a,b){return qd(b,0)},pv,!0,Zv,N(es,new V(null,new m(null,3,[Rk,null,Qs,null,nu,null],null),null),N(Lq,!0))],null),null)],null),null));
Z(Zp,N(lk,zj,new R(null,4,5,S,[Zo,Iu,Do,Np],null)),pE(new R(null,2,5,S,[N(eq,zj,new R(null,4,5,S,[Zo,Iu,Do,Np],null)),N(es,new V(null,new m(null,4,[Zk,null,Ml,null,nq,null,at,null],null),null),N(Lq,!0))],null),new R(null,2,5,S,[gE(mh([yj,zj,ik,xk,Ek,kl,en,Eq,vs,Ps,mt,cw],[null,new R(null,4,5,S,[Zo,Iu,Do,Np],null),null,new R(null,1,5,S,[function(a){return L(a)}],null),function(a){return L(a)},new R(null,4,5,S,[Zk,nq,at,Ml],null),H,null,H,new R(null,4,5,S,[Zo,Iu,Do,Np],null),new R(null,1,5,S,[N(Is,
new R(null,1,5,S,[mp],null),N(Go,mp))],null),null])),qE(N(vo,new V(null,new m(null,4,[Zk,null,Ml,null,nq,null,at,null],null),null),N(Sk,!0)),iE(new R(null,2,5,S,[new V(null,new m(null,4,[Zk,null,Ml,null,nq,null,at,null],null),null),N(Lq,!0)],null),new R(null,2,5,S,[new V(null,new m(null,4,[Zk,null,Ml,null,nq,null,at,null],null),null),sf(!0)],null)),new m(null,7,[Bk,jf,um,Go,No,function(a){return L(a)},$r,L,Tt,function(a,b){return qd(b,0)},pv,!0,Zv,N(es,new V(null,new m(null,4,[Zk,null,Ml,null,nq,
null,at,null],null),null),N(Lq,!0))],null),null)],null),null));Z(Ao,Xo,Xo);
Z(Vk,N(lk,zj,new R(null,6,5,S,[mn,El,Pp,ou,as,co],null)),pE(new R(null,2,5,S,[N(eq,zj,new R(null,6,5,S,[mn,El,Pp,ou,as,co],null)),N(es,new V(null,new m(null,6,[Ij,null,Ak,null,W,null,Wq,null,Br,null,Wu,null],null),null),N(Lq,!0))],null),new R(null,2,5,S,[gE(mh([yj,zj,ik,xk,Ek,kl,en,Eq,vs,Ps,mt,cw],[null,new R(null,6,5,S,[mn,El,Pp,ou,as,co],null),null,new R(null,1,5,S,[function(a){return L(a)}],null),function(a){return L(a)},new R(null,6,5,S,[W,Wu,Ij,Br,Ak,Wq],null),H,null,H,new R(null,6,5,S,[mn,El,
Pp,ou,as,co],null),new R(null,1,5,S,[N(Is,new R(null,1,5,S,[mp],null),N(Go,mp))],null),null])),qE(N(vo,new V(null,new m(null,6,[Ij,null,Ak,null,W,null,Wq,null,Br,null,Wu,null],null),null),N(Sk,!0)),iE(new R(null,2,5,S,[new V(null,new m(null,6,[Ij,null,Ak,null,W,null,Wq,null,Br,null,Wu,null],null),null),N(Lq,!0)],null),new R(null,2,5,S,[new V(null,new m(null,6,[Ij,null,Ak,null,W,null,Wq,null,Br,null,Wu,null],null),null),sf(!0)],null)),new m(null,7,[Bk,jf,um,Go,No,function(a){return L(a)},$r,L,Tt,function(a,
b){return qd(b,0)},pv,!0,Zv,N(es,new V(null,new m(null,6,[Ij,null,Ak,null,W,null,Wq,null,Br,null,Wu,null],null),null),N(Lq,!0))],null),null)],null),null));Z(ap,Xo,Xo);
Z(Ku,N(lk,zj,new R(null,2,5,S,[Or,wr],null)),pE(new R(null,2,5,S,[N(eq,zj,new R(null,2,5,S,[Or,wr],null)),N(es,new V(null,new m(null,2,[jn,null,zv,null],null),null),N(Lq,!0))],null),new R(null,2,5,S,[gE(mh([yj,zj,ik,xk,Ek,kl,en,Eq,vs,Ps,mt,cw],[null,new R(null,2,5,S,[Or,wr],null),null,new R(null,1,5,S,[function(a){return L(a)}],null),function(a){return L(a)},new R(null,2,5,S,[zv,jn],null),H,null,H,new R(null,2,5,S,[Or,wr],null),new R(null,1,5,S,[N(Is,new R(null,1,5,S,[mp],null),N(Go,mp))],null),null])),
qE(N(vo,new V(null,new m(null,2,[jn,null,zv,null],null),null),N(Sk,!0)),iE(new R(null,2,5,S,[new V(null,new m(null,2,[jn,null,zv,null],null),null),N(Lq,!0)],null),new R(null,2,5,S,[new V(null,new m(null,2,[jn,null,zv,null],null),null),sf(!0)],null)),new m(null,7,[Bk,jf,um,Go,No,function(a){return L(a)},$r,L,Tt,function(a,b){return qd(b,0)},pv,!0,Zv,N(es,new V(null,new m(null,2,[jn,null,zv,null],null),null),N(Lq,!0))],null),null)],null),null));Z(As,wq,wq);Z(Co,Go,L);
Z(Dj,N(lk,zj,new R(null,2,5,S,[Mr,Mj],null)),pE(new R(null,2,5,S,[N(eq,zj,new R(null,2,5,S,[Mr,Mj],null)),N(es,new V(null,new m(null,2,[rn,null,yp,null],null),null),N(Lq,!0))],null),new R(null,2,5,S,[gE(mh([yj,zj,ik,xk,Ek,kl,en,Eq,vs,Ps,mt,cw],[null,new R(null,2,5,S,[Mr,Mj],null),null,new R(null,1,5,S,[function(a){return L(a)}],null),function(a){return L(a)},new R(null,2,5,S,[rn,yp],null),H,null,H,new R(null,2,5,S,[Mr,Mj],null),new R(null,1,5,S,[N(Is,new R(null,1,5,S,[mp],null),N(Go,mp))],null),null])),
qE(N(vo,new V(null,new m(null,2,[rn,null,yp,null],null),null),N(Sk,!0)),iE(new R(null,2,5,S,[new V(null,new m(null,2,[rn,null,yp,null],null),null),N(Lq,!0)],null),new R(null,2,5,S,[new V(null,new m(null,2,[rn,null,yp,null],null),null),sf(!0)],null)),new m(null,7,[Bk,jf,um,Go,No,function(a){return L(a)},$r,L,Tt,function(a,b){return qd(b,0)},pv,!0,Zv,N(es,new V(null,new m(null,2,[rn,null,yp,null],null),null),N(Lq,!0))],null),null)],null),null));Z(Op,Xo,Xo);
Z(rs,N(lk,zj,new R(null,5,5,S,[En,ro,jl,Fp,cp],null)),pE(new R(null,2,5,S,[N(eq,zj,new R(null,5,5,S,[En,ro,jl,Fp,cp],null)),N(es,new V(null,new m(null,5,[Oq,null,Er,null,Yr,null,vt,null,uu,null],null),null),N(Lq,!0))],null),new R(null,2,5,S,[gE(mh([yj,zj,ik,xk,Ek,kl,en,Eq,vs,Ps,mt,cw],[null,new R(null,5,5,S,[En,ro,jl,Fp,cp],null),null,new R(null,1,5,S,[function(a){return L(a)}],null),function(a){return L(a)},new R(null,5,5,S,[Er,Oq,uu,Yr,vt],null),H,null,H,new R(null,5,5,S,[En,ro,jl,Fp,cp],null),
new R(null,1,5,S,[N(Is,new R(null,1,5,S,[mp],null),N(Go,mp))],null),null])),qE(N(vo,new V(null,new m(null,5,[Oq,null,Er,null,Yr,null,vt,null,uu,null],null),null),N(Sk,!0)),iE(new R(null,2,5,S,[new V(null,new m(null,5,[Oq,null,Er,null,Yr,null,vt,null,uu,null],null),null),N(Lq,!0)],null),new R(null,2,5,S,[new V(null,new m(null,5,[Oq,null,Er,null,Yr,null,vt,null,uu,null],null),null),sf(!0)],null)),new m(null,7,[Bk,jf,um,Go,No,function(a){return L(a)},$r,L,Tt,function(a,b){return qd(b,0)},pv,!0,Zv,N(es,
new V(null,new m(null,5,[Oq,null,Er,null,Yr,null,vt,null,uu,null],null),null),N(Lq,!0))],null),null)],null),null));
Z(Tl,N(lk,zj,new R(null,1,5,S,[Jv],null)),pE(new R(null,2,5,S,[N(eq,zj,new R(null,1,5,S,[Jv],null)),N(es,new V(null,new m(null,1,[mo,null],null),null),N(Lq,!0))],null),new R(null,2,5,S,[gE(mh([yj,zj,ik,xk,Ek,kl,en,Eq,vs,Ps,mt,cw],[null,new R(null,1,5,S,[Jv],null),null,new R(null,1,5,S,[function(a){return L(a)}],null),function(a){return L(a)},new R(null,1,5,S,[mo],null),H,null,H,new R(null,1,5,S,[Jv],null),new R(null,1,5,S,[N(Is,new R(null,1,5,S,[mp],null),N(Go,mp))],null),null])),qE(N(vo,new V(null,
new m(null,1,[mo,null],null),null),N(Sk,!0)),iE(new R(null,2,5,S,[new V(null,new m(null,1,[mo,null],null),null),N(Lq,!0)],null),new R(null,2,5,S,[new V(null,new m(null,1,[mo,null],null),null),sf(!0)],null)),new m(null,7,[Bk,jf,um,Go,No,function(a){return L(a)},$r,L,Tt,function(a,b){return qd(b,0)},pv,!0,Zv,N(es,new V(null,new m(null,1,[mo,null],null),null),N(Lq,!0))],null),null)],null),null));Z(nr,Ul,Ul);
Z(Yu,N(lk,zj,new R(null,7,5,S,[mn,cu,Qj,ov,ou,as,co],null)),pE(new R(null,2,5,S,[N(eq,zj,new R(null,7,5,S,[mn,cu,Qj,ov,ou,as,co],null)),N(es,new V(null,new m(null,7,[Ak,null,W,null,Sn,null,Wq,null,Br,null,Kr,null,jt,null],null),null),N(Lq,!0))],null),new R(null,2,5,S,[gE(mh([yj,zj,ik,xk,Ek,kl,en,Eq,vs,Ps,mt,cw],[null,new R(null,7,5,S,[mn,cu,Qj,ov,ou,as,co],null),null,new R(null,1,5,S,[function(a){return L(a)}],null),function(a){return L(a)},new R(null,7,5,S,[W,Kr,Sn,jt,Br,Ak,Wq],null),H,null,H,new R(null,
7,5,S,[mn,cu,Qj,ov,ou,as,co],null),new R(null,1,5,S,[N(Is,new R(null,1,5,S,[mp],null),N(Go,mp))],null),null])),qE(N(vo,new V(null,new m(null,7,[Ak,null,W,null,Sn,null,Wq,null,Br,null,Kr,null,jt,null],null),null),N(Sk,!0)),iE(new R(null,2,5,S,[new V(null,new m(null,7,[Ak,null,W,null,Sn,null,Wq,null,Br,null,Kr,null,jt,null],null),null),N(Lq,!0)],null),new R(null,2,5,S,[new V(null,new m(null,7,[Ak,null,W,null,Sn,null,Wq,null,Br,null,Kr,null,jt,null],null),null),sf(!0)],null)),new m(null,7,[Bk,jf,um,
Go,No,function(a){return L(a)},$r,L,Tt,function(a,b){return qd(b,0)},pv,!0,Zv,N(es,new V(null,new m(null,7,[Ak,null,W,null,Sn,null,Wq,null,Br,null,Kr,null,jt,null],null),null),N(Lq,!0))],null),null)],null),null));Z(Yk,$m,bb);Z(rv,zq,Za);Z(nt,Xo,Xo);
Z(Kk,N(lk,zj,pg([mm,yk,Pu,zl,to,Vv,Ks,Jv,ij,ir,gv,Tr,Yj,xr,ft,km,Im,Uu,fk,Zo,Iu,Do,$k,rk,Os,wo,du,mn,on,Pn,jr,Ql,$t,iw,Rt,Vs,Mq,fm,ru,xj,Vl,sp,Gt,Ik,fp,tv,zt,np,Zp,Ao,Vk,ap,Ku,As,Co,Dj,Op,rs,Tl,nr,Yu,Yk,rv,nt])),pE(new R(null,2,5,S,[N(eq,zj,pg([mm,yk,Pu,zl,to,Vv,Ks,Jv,ij,ir,gv,Tr,Yj,xr,ft,km,Im,Uu,fk,Zo,Iu,Do,$k,rk,Os,wo,du,mn,on,Pn,jr,Ql,$t,iw,Rt,Vs,Mq,fm,ru,xj,Vl,sp,Gt,Ik,fp,tv,zt,np,Zp,Ao,Vk,ap,Ku,As,Co,Dj,Op,rs,Tl,nr,Yu,Yk,rv,nt])),N(es,new V(null,new m(null,64,[Aj,null,jk,null,vk,null,W,null,
Gk,null,Mk,null,Zk,null,cl,null,il,null,wl,null,Ll,null,Ml,null,hm,null,Bm,null,Cm,null,bn,null,hn,null,Qn,null,Xn,null,bo,null,mo,null,uo,null,Jo,null,Ko,null,Mo,null,To,null,ip,null,Ep,null,Up,null,aq,null,cq,null,gq,null,nq,null,rq,null,Hq,null,mr,null,pr,null,Wr,null,ds,null,hs,null,is,null,ms,null,ws,null,Ds,null,Us,null,at,null,lt,null,Ct,null,Ut,null,bu,null,gu,null,hu,null,ku,null,pu,null,wu,null,Ju,null,Qu,null,Su,null,ev,null,kv,null,sv,null,yv,null,Cv,null,Iv,null],null),null),N(Lq,!0))],
null),new R(null,2,5,S,[gE(mh([yj,zj,ik,xk,Ek,kl,en,Eq,vs,Ps,mt,cw],[null,pg([mm,yk,Pu,zl,to,Vv,Ks,Jv,ij,ir,gv,Tr,Yj,xr,ft,km,Im,Uu,fk,Zo,Iu,Do,$k,rk,Os,wo,du,mn,on,Pn,jr,Ql,$t,iw,Rt,Vs,Mq,fm,ru,xj,Vl,sp,Gt,Ik,fp,tv,zt,np,Zp,Ao,Vk,ap,Ku,As,Co,Dj,Op,rs,Tl,nr,Yu,Yk,rv,nt]),null,new R(null,1,5,S,[function(a){return L(a)}],null),function(a){return L(a)},pg([Ct,Ko,ip,wu,Ds,Hq,uo,mo,is,bn,mr,hu,aq,hn,ev,Mo,bu,Ml,cq,Zk,nq,at,ku,bo,gq,jk,il,W,pr,kv,Ut,Qu,cl,ds,Gk,sv,Aj,Jo,Cm,Ll,Su,ms,Ep,ws,lt,hm,yv,hs,vk,
Cv,gu,Bm,rq,Up,Us,Ju,Wr,Mk,Xn,wl,To,pu,Qn,Iv]),H,null,H,pg([mm,yk,Pu,zl,to,Vv,Ks,Jv,ij,ir,gv,Tr,Yj,xr,ft,km,Im,Uu,fk,Zo,Iu,Do,$k,rk,Os,wo,du,mn,on,Pn,jr,Ql,$t,iw,Rt,Vs,Mq,fm,ru,xj,Vl,sp,Gt,Ik,fp,tv,zt,np,Zp,Ao,Vk,ap,Ku,As,Co,Dj,Op,rs,Tl,nr,Yu,Yk,rv,nt]),new R(null,1,5,S,[N(Is,new R(null,1,5,S,[mp],null),N(Go,mp))],null),null])),qE(N(vo,new V(null,new m(null,64,[Aj,null,jk,null,vk,null,W,null,Gk,null,Mk,null,Zk,null,cl,null,il,null,wl,null,Ll,null,Ml,null,hm,null,Bm,null,Cm,null,bn,null,hn,null,Qn,
null,Xn,null,bo,null,mo,null,uo,null,Jo,null,Ko,null,Mo,null,To,null,ip,null,Ep,null,Up,null,aq,null,cq,null,gq,null,nq,null,rq,null,Hq,null,mr,null,pr,null,Wr,null,ds,null,hs,null,is,null,ms,null,ws,null,Ds,null,Us,null,at,null,lt,null,Ct,null,Ut,null,bu,null,gu,null,hu,null,ku,null,pu,null,wu,null,Ju,null,Qu,null,Su,null,ev,null,kv,null,sv,null,yv,null,Cv,null,Iv,null],null),null),N(Sk,!0)),iE(new R(null,2,5,S,[new V(null,new m(null,64,[Aj,null,jk,null,vk,null,W,null,Gk,null,Mk,null,Zk,null,cl,
null,il,null,wl,null,Ll,null,Ml,null,hm,null,Bm,null,Cm,null,bn,null,hn,null,Qn,null,Xn,null,bo,null,mo,null,uo,null,Jo,null,Ko,null,Mo,null,To,null,ip,null,Ep,null,Up,null,aq,null,cq,null,gq,null,nq,null,rq,null,Hq,null,mr,null,pr,null,Wr,null,ds,null,hs,null,is,null,ms,null,ws,null,Ds,null,Us,null,at,null,lt,null,Ct,null,Ut,null,bu,null,gu,null,hu,null,ku,null,pu,null,wu,null,Ju,null,Qu,null,Su,null,ev,null,kv,null,sv,null,yv,null,Cv,null,Iv,null],null),null),N(Lq,!0)],null),new R(null,2,5,S,[new V(null,
new m(null,64,[Aj,null,jk,null,vk,null,W,null,Gk,null,Mk,null,Zk,null,cl,null,il,null,wl,null,Ll,null,Ml,null,hm,null,Bm,null,Cm,null,bn,null,hn,null,Qn,null,Xn,null,bo,null,mo,null,uo,null,Jo,null,Ko,null,Mo,null,To,null,ip,null,Ep,null,Up,null,aq,null,cq,null,gq,null,nq,null,rq,null,Hq,null,mr,null,pr,null,Wr,null,ds,null,hs,null,is,null,ms,null,ws,null,Ds,null,Us,null,at,null,lt,null,Ct,null,Ut,null,bu,null,gu,null,hu,null,ku,null,pu,null,wu,null,Ju,null,Qu,null,Su,null,ev,null,kv,null,sv,null,
yv,null,Cv,null,Iv,null],null),null),sf(!0)],null)),new m(null,7,[Bk,jf,um,Go,No,function(a){return L(a)},$r,L,Tt,function(a,b){return qd(b,0)},pv,!0,Zv,N(es,new V(null,new m(null,64,[Aj,null,jk,null,vk,null,W,null,Gk,null,Mk,null,Zk,null,cl,null,il,null,wl,null,Ll,null,Ml,null,hm,null,Bm,null,Cm,null,bn,null,hn,null,Qn,null,Xn,null,bo,null,mo,null,uo,null,Jo,null,Ko,null,Mo,null,To,null,ip,null,Ep,null,Up,null,aq,null,cq,null,gq,null,nq,null,rq,null,Hq,null,mr,null,pr,null,Wr,null,ds,null,hs,null,
is,null,ms,null,ws,null,Ds,null,Us,null,at,null,lt,null,Ct,null,Ut,null,bu,null,gu,null,hu,null,ku,null,pu,null,wu,null,Ju,null,Qu,null,Su,null,ev,null,kv,null,sv,null,yv,null,Cv,null,Iv,null],null),null),N(Lq,!0))],null),null)],null),null));
function KE(a){var b=rj.a(a),c=zd(b),d=function(){var a="number"===typeof c;return a?c:a}(),e=Tv.a(a),f=Tf.b(H,Hf.b(D(b),e)),g=zd(f),k="number"===typeof g&&C.b(c,Dv)?Tf.b(H,Sh(f)):f,p=Gf.c(function(){return function(a,b){var c="number"===typeof a&&(C.b(a,b)||C.b(b,Dv));return n(c)?a:null}}(b,c,d,e,f,g,k),k,b);b=mb(function(){return function(a,b){return"number"===typeof b?new fd(a):a+1}}(b,c,d,e,f,g,k,p),0,p);var q=b<D(k)?b:null;return n(n(q)?ff(qd(k,q),Bi.a(a)):q)?function(){var a=new R(null,2,5,
S,[Hf.b(q,k),If(q,k)],null);var b=J(a,0,null);a=J(a,1,null);return Tf.b(H,We.b(b,If(1,a)))}():k}function LE(a){var b=Bi.a(a);a=KE(a);var c=Rh(a);c=c.a?c.a(b):c(b);return n(c)?["In the key-sequence ",r.a(a)," the key ",r.a(xi(E([b])))].join(""):["The value of the key-sequence ",r.a(a)," -\x3e ",r.a(xi(E([b])))].join("")}
function ME(a){switch(a){case "zboolean?":return"boolean";case "zprint.spec/zboolean?":return"boolean";case "clojure.core/set?":return"set";case "clojure.core/sequential?":return"sequential";case "clojure.core/number?":return"number";case "clojure.core/map?":return"map";case "map?":return"map";case "string?":return"string";default:return a}}
function NE(a){if(n(a)){var b=hp.a(a),c=Sf(function(){return function(a){return C.b("nil?",""+r.a(pl.a(a)))}}(b),b);a=Gi(c);b=Gf.b(function(){return function(a){var b=J(a,0,null);a=J(a,1,null);return new R(null,2,5,S,[b,P(qe,Gf.b(tf.b(D,Dm),a))],null)}}(b,c,a),a);c=y(he(b));b=J(c,0,null);c=J(c,1,null);a=y(Rf(tf.c(uf(C,c),D,Dm),a.a?a.a(b):a(b)));return ja(""+r.a(pl.a(a)),"?")?[r.a(LE(a))," was not a ",r.a(ME(""+r.a(pl.a(a))))].join(""):Pd(pl.a(a))?[r.a(LE(a))," was not recognized as valid!"].join(""):
"what?"}return null}function OE(a,b){try{return n(dE(Kk,a))?null:n(b)?["In ",r.a(b),", ",r.a(NE(bE(a)))].join(""):NE(bE(a))}catch(d){var c=d;return n(b)?["In ",r.a(b),", validation failed completely because: ",r.a(""+r.a(c))].join(""):["Validation failed completely because: ",r.a(""+r.a(c))].join("")}};function PE(){return"zprint-0.4.6"}
var Mh=new R(null,1,5,S,[Qn],null),QE=new R(null,21,5,S,[bn,aq,mr,Mo,bu,hn,cq,Bm,lt,Wr,Iv,W,vk,Cv,new R(null,3,5,S,[sv,Br,Ak],null),new R(null,2,5,S,[yv,Nk],null),new R(null,3,5,S,[Cm,or,ml],null),new R(null,3,5,S,[Hq,or,ml],null),new R(null,2,5,S,[rq,jn],null),new R(null,5,5,S,[kv,fr,ar,or,ml],null),Mk],null),RE=mh("map binding cond-\x3e as-\x3e with-local-vars loop defn \x3d some-\x3e if-not when-first when-some defcc fdef if-let doseq try with-redefs defc defcs fn for defrecord with-meta catch defexpect with-redefs-fn defui s/or swap! apply :require cond if let defproject reify defmulti when-let :import not\x3d with-bindings doto if-some extend-protocol or case alt remove mapcat with-open with-bindings* filter condp when s/and -\x3e and defmethod do some-\x3e\x3e fn* interpose deftest extend -\x3e\x3e defprotocol extend-type defn- filterv def reduce dotimes proxy assoc-in assoc mapv when-not cat letfn ns deftype defmacro".split(" "),[xv,
Hq,qo,sl,Hq,Hq,fl,lr,Hp,fl,Hq,Hq,wt,Pq,Hq,Hq,tu,Hq,wt,wt,Tk,Hq,qk,fl,sl,fl,fl,Yl,Rn,sl,xv,Hp,Ll,fl,Hq,sk,Ml,fl,Hq,Hp,lr,xv,xv,Hq,Yl,lr,qo,Ll,xv,xv,Hq,xv,xv,sk,fl,Rn,Mm,lr,sl,tu,Hp,Tk,xv,fl,Yl,Hp,Pq,Yl,fl,xv,fl,xv,Hq,Sp,xv,nm,xv,fl,Ol,Hq,fl,qk,fl]),SE=mh([Aj,jk,vk,W,Gk,Mk,Zk,cl,il,wl,Ll,Ml,hm,Bm,Cm,bn,hn,Qn,Xn,bo,mo,uo,Jo,Ko,Mo,To,ip,Ep,Up,aq,cq,gq,nq,rq,Hq,mr,pr,Wr,ds,hs,is,ms,ws,Ds,Us,at,lt,Ct,Ut,bu,gu,ku,wu,Ju,Qu,Su,ev,kv,sv,yv,Cv,Iv],[!0,yt,new m(null,4,[Zk,null,nq,null,at,null,Ml,new m(null,1,
[Kq,null],null)],null),0,1E3,new m(null,5,[Er,1.1,Oq,1.5,uu,10,Yr,-1,vt,!0],null),new V(null,new m(null,7,[Ol,null,Fm,null,Lm,null,Mm,null,Hp,null,Pq,null,Dr,null],null),null),3,new m(null,1,[Cp,!1],null),jf,new m(null,4,[Yp,1,pm,2,Rj,10,nu,!0],null),new m(null,8,[Hj,!0,Jn,!0,Yp,1,pm,1E3,nu,!0,W,2,Kq,new V(null,new m(null,1,["static",null],null),null),Kj,!1],null),new m(null,1,[Cp,!1],null),null,mh([Hj,Kj,W,Xk,ml,pm,Jn,Yp,or,nu],[!1,!1,2,!1,new m(null,2,[Er,4,uu,30],null),2,null,1,new m(null,1,[pm,
5],null),!0]),!1,null,80,new m(null,1,[mo,mh([Tk,Fl,Rl,xm,qn,Xn,Po,$p,sr,tr,Vr,Zr,fs,gs,is,Gu,X],[yn,vm,vm,vm,yn,Bt,vm,vm,vm,vm,vm,vm,vm,vm,nn,vm,vm])],null),null,mh([Tk,Fl,Rl,xm,qn,Xn,Po,$p,sr,tr,Vr,Zr,fs,gs,is,Gu,X],[Pr,nn,iu,Nr,lw,Bt,Nr,nn,Nr,Bt,Nr,vm,Nr,iu,nn,Nr,lw]),!0,new m(null,3,[ct,new m(null,2,[Ej,!1,Rp,null],null),Un,null,Bs,null],null),new m(null,1,[Cp,!1],null),!0,new m(null,7,[W,1,Kr,!1,jt,null,Sn,!1,Br,!0,Ak,!0,Wq,!0],null),new m(null,4,[Uo,!1,W,1,Cp,!1,Wq,!0],null),!1,null,null,!1,
new m(null,1,[Cp,!1],null),new V(null,new m(null,3,[Ll,null,Rn,null,Hq,null],null),null),new m(null,2,[zv,!0,jn,null],null),mh([Hj,Kj,W,Xk,ml,pm,Jn,Yp,or,nu],[!1,!1,2,!1,new m(null,2,[Er,4,uu,30],null),2,!1,1,new m(null,1,[pm,5],null),!0]),null,mh([Rj,hk,Dk,W,pm,Pm,Vm,Yp,nu],[100,null,!0,2,2,!0,4,1,!0]),null,4,new m(null,3,[nu,!0,Rk,!0,Qs,!1],null),new m(null,3,[hq,!1,Wq,!0,Iq,!0],null),new m(null,2,[cs,null,Gq,On],null),!1,!1,new m(null,8,[Lo,new m(null,1,[Hq,new m(null,2,[W,0,Kj,!0],null)],null),
Jl,new m(null,5,[Hq,new m(null,1,[W,0],null),ku,mh("map cond-\x3e with-meta apply remove filter filterv reduce assoc mapv".split(" "),[X,tu,tu,X,X,X,X,X,X,X]),pr,new m(null,1,[hk,1],null),kv,new m(null,1,[W,0],null),Cm,new m(null,1,[W,0],null)],null),Sl,new m(null,1,[Ml,new m(null,3,[Hj,!0,W,0,Kj,!0],null)],null),Ss,new m(null,3,[Hq,new m(null,1,[Xk,!0],null),kv,new m(null,1,[Xk,!0],null),Cm,new m(null,1,[Xk,!0],null)],null),ln,new m(null,1,[To,new m(null,1,[jt,function(a,b){var c=b instanceof O;
return ff(c,Sn.a(To.a(a)))?new m(null,1,[To,new m(null,1,[Sn,c],null)],null):null}],null)],null),$q,new m(null,1,[kv,new m(null,2,[W,0,Kj,!0],null)],null),ql,new m(null,1,[Cm,new m(null,2,[W,0,Kj,!0],null)],null),rq,new m(null,2,[pr,new m(null,1,[Vm,2],null),To,new m(null,1,[Wq,!1],null)],null)],null),new V(null,new m(null,3,[Xj,null,nm,null,qo,null],null),null),null,!0,1E3,null,new m(null,6,[W,1,Wu,!0,Ij,!1,Br,!0,Ak,!0,Wq,!0],null),RE,new m(null,1,[Cp,!1],null),new m(null,2,[rn,!0,yp,8],null),4,
!1,new m(null,1,[Cp,!1],null),mh([Hj,Ij,Kj,zk,W,Nk,Xk,ml,pm,Tm,Jn,fo,ko,yo,Yp,iq,ar,or,Qr,ys,nu,Wu],[!1,null,!1,null,2,!0,!1,new m(null,2,[Er,4,uu,30],null),1E3,null,null,null,null,null,1,!1,-1,new m(null,1,[pm,5],null),null,!0,!0,!0]),new m(null,3,[W,1,Br,!0,Ak,!0],null),mh([Ij,W,Nk,pm,Jn,ko,Yp,nu,Wu],[null,2,null,1E3,!0,null,1,!0,null]),!1,!1]),TE=mh([Tk,Fl,Rl,xm,qn,Xn,Po,$p,sr,tr,Vr,Zr,fs,gs,is,Gu,X],[X,X,X,Nr,X,X,X,X,X,X,X,X,X,X,X,X,X]),UE=Cf(SE),VE=Cf(SE),WE=Cf(1),XE=function XE(a,b){return L(a)&&
L(b)?Kh.g(XE,E([a,b])):Pd(a)&&Pd(b)?df(Ad,a,x(b)):b};function YE(a){return df(Kh,XE,a)}function ZE(a,b){if(Od(b)){var c=y(b),d=B(b);return Dd.c(a,c,function(){var b=a.a?a.a(c):a(c);return $E.b?$E.b(b,d):$E(b,d)}())}return Fd.b(a,b)}function $E(a,b){return mb(function(a,b){return ZE(a,b)},a,b)}
var aF=function aF(a){return L(a)?Qf(function(a){var c=J(a,0,null),e=J(a,1,null),f=aF.a?aF.a(e):aF(e);return n(f)?Gf.b(function(a,c,d){return function(a){return vd(d,Od(a)?a:new R(null,1,5,S,[a],null))}}(f,a,c,e),f):new R(null,1,5,S,[new R(null,1,5,S,[c],null)],null)},E([a])):null};function bF(a,b,c){return Zf.A(b,c,mB,mb(w,a,c))}function cF(a,b,c,d){var e=vk.a(d);c=mb(uf(bF,e),c,aF(e));e=aF(e);d=Fd.b(d,vk);return new R(null,3,5,S,[c,d,dF.A?dF.A(a,b,e,c):dF(a,b,e,c)],null)}
function eF(a,b,c){var d=b.a?b.a(c):b(c);return L(d)?Dd.c(b,c,fF.b?fF.b(a,d):fF(a,d)):Dd.c(b,c,a.a?a.a(d):a(d))}function fF(a,b){return mb(uf(eF,a),b,Lg(b))}function gF(a,b,c){return new m(null,2,[rt,a,jn,c],null)}function dF(a,b,c,d){return mb(function(b,c){return Zf.A(b,c,uf(gF,a),mb(w,d,c))},b,c)}function hF(a,b){return yd(vD(a,b))}function iF(a,b){var c=J(b,0,null),d=J(b,1,null);return Dd.c(a,c,Fd.b(w.b(a,c),d))}
function jF(a){var b=n(ko.a(kv.a(a)))?Xf(a,new R(null,2,5,S,[kv,Zm],null),Th(ko.a(kv.a(a)),Yh(Number.MAX_VALUE))):a;b=null==ko.a(kv.a(a))&&null!=Zm.a(kv.a(a))?iF(b,new R(null,2,5,S,[kv,Zm],null)):b;b=n(ko.a(yv.a(a)))?Xf(b,new R(null,2,5,S,[yv,Zm],null),Th(ko.a(yv.a(a)),Yh(Number.MAX_VALUE))):b;b=null==ko.a(yv.a(a))&&null!=Zm.a(yv.a(a))?iF(b,new R(null,2,5,S,[yv,Zm],null)):b;b=$a(uo.a(a))?Dd.c(b,mo,TE):b;return $a(uo.a(a))?Xf(b,new R(null,2,5,S,[Xn,mo],null),TE):b}
function kF(a,b){Df(UE,jF(a));n(b)&&Df(VE,b)}function lF(){return Tb(UE)}function mF(){return Dd.c(Tb(VE),pu,PE())}function nF(a,b,c,d){d=oF.A?oF.A(a,b,c,d):oF(a,b,c,d);b=J(d,0,null);c=J(d,1,null);d=J(d,2,null);if(n(d))throw Error(ef(r,"set-options! for ",a," found these errors: ",d));kF(b,c);return null}
function pF(){n(hj(yu))&&nF("REPL execution default",mF(),lF(),new m(null,1,[Su,!0],null));var a=qF.b?qF.b(null,null):qF(null),b=J(a,0,null),c=J(a,1,null);a=J(a,2,null);if(n(a))return a;kF(b,c);b=new m(null,1,[bn,!0],null);rF?rF(b,"internal"):sF(b,"internal");return null}
function sF(a){switch(arguments.length){case 2:rF(arguments[0],arguments[1]);break;case 1:rF(arguments[0],["repl or api call ",r.a(Ef.b(WE,ed))].join(""));break;default:throw Error(["Invalid arity: ",r.a(arguments.length)].join(""));}}function rF(a,b){if($a(bn.a(lF()))&&$a(bn.a(a))){Ct.a(lF());var c=w.c(a,Ct,Ar);ff(c,Ar);pF()}return nF(b,mF(),lF(),a)}function tF(a){return Nd(a)?null:a}
function uF(a,b){return n(a)?tF(P(r,Pf(", ",Sf(function(a){return null==a||Nd(a)},Ad.g(H,OE(Fd.b(a,Us),b),E([n(Us.a(a))?vF.a?vF.a(a):vF(a):null])))))):null}function vF(a){a=Uf(function(a){var b=y(a);a=yd(a);return uF(a,["style ",r.a(b)].join(""))},Us.a(a));a=P(r,Pf(", ",Sf(Xa,a)));return Nd(a)?null:a}
function wF(a,b,c){var d=J(b,0,null),e=J(b,1,null);J(b,2,null);if(C.b(c,sm)||null==c)return new R(null,3,5,S,[d,e,null],null);b=C.b(c,Am)?SE:mb(w,d,new R(null,2,5,S,[Us,c],null));return n(b)?(d=YE(E([d,b])),new R(null,3,5,S,[d,n(e)?dF([r.a(a)," specified :style ",r.a(c)].join(""),e,aF(b),d):null,null],null)):new R(null,3,5,S,[d,e,["Style '",r.a(c),"' not found!"].join("")],null)}
function xF(a,b,c,d){d=w.c(d,Up,sm);return C.b(d,sm)||null==d?new R(null,3,5,S,[c,b,null],null):Od(d)?mb(uf(wF,a),new R(null,3,5,S,[c,b,null],null),d):wF(a,new R(null,3,5,S,[c,b,null],null),d)}function yF(a){if(n(a))try{var b=TC(a);return new R(null,2,5,S,[b,null],null)}catch(c){return b=c,new R(null,2,5,S,[null,["Unable to read configuration from map",r.a(a)," because ",r.a(b)].join("")],null)}else return null}
function zF(a){if("string"!==typeof a)return a;var b=ka(a).toLowerCase();return C.b(b,"true")||C.b(b,"false")?C.b(b,"true")?!0:!1:a}function AF(a,b){return ke(function(a,b){return n(a)?b:a},Gf.c(C,a,b))}function BF(a){var b=x(a),c=Rf(function(){return function(a){return AF(new R(null,2,5,S,[kj,ku],null),y(a))}}(b),b);a=Gf.b(function(){return function(a){return Le(qd(y(a),2))}}(b,c),c);b=Gf.b(function(){return function(a){return Ke.a(yd(a))}}(b,c,a),c);return Th(a,b)}
function CF(a,b){var c=BF(b);return Nd(c)?a:Dd.c(a,ku,Jh.g(E([ku.a(a),c])))}function DF(a,b){var c=J(b,0,null),d=J(b,1,null);return x(c)&&ff(Wf(a,c,Bq),Bq)?Xf(a,c,d):a}function oF(a,b,c,d){if(n(d)){var e=uF(d,a);c=cF(a,b,c,d);b=J(c,0,null);J(c,1,null);c=J(c,2,null);var f=xF(a,c,b,d);c=J(f,0,null);b=J(f,1,null);f=J(f,2,null);e=n(f)?[r.a(e)," ",r.a(f)].join(""):e;c=YE(E([c,d]));a=dF(a,b,aF(d),c);return new R(null,3,5,S,[c,a,e],null)}return new R(null,3,5,S,[c,b,null],null)}
function qF(a){var b=mF(),c=[r.a(null),r.a(null),r.a(".zprintrc")].join(""),d=J(null,0,null),e=J(null,1,null);J(null,2,null);d=oF(["File: ",r.a(c)].join(""),b,SE,d);b=J(d,0,null);c=J(d,1,null);var f=J(d,2,null);d=n(null)?null.w?null.w():null():null;var g=mb(DF,new m(null,1,[kj,SE],null),d);g=hF(SE,kj.a(g));d=CF(g,d);d=fF(zF,d);d=oF("Environment variable",c,b,d);b=J(d,0,null);c=J(d,1,null);var k=J(d,2,null);d=n(null)?null.w?null.w():null():null;g=mb(DF,new m(null,1,[kj,SE],null),d);g=hF(SE,kj.a(g));
d=CF(g,d);d=fF(zF,d);d=oF("System property",c,b,d);b=J(d,0,null);c=J(d,1,null);var p=J(d,2,null);d=J(null,0,null);var q=J(null,1,null);g=J(null,2,null);d=oF(["Config file: ",r.a(g)].join(""),c,b,d);b=J(d,0,null);c=J(d,1,null);J(d,2,null);d=yF(lq.a(a));g=J(d,0,null);J(d,1,null);d=oF(["Config map:",r.a(lq.a(a))].join(""),c,b,g);b=J(d,0,null);c=J(d,1,null);var t=J(d,2,null);a=Lh(a);c=oF("CLI options",c,b,a);a=J(c,0,null);b=J(c,1,null);var v=J(c,2,null);c=P(r,Pf("\n",Rf(me,function(){return vb(function(){return vb(vb(vb(vb(vb(vb(Wc,
v),t),q),p),k),f)}(),e)}())));c=Nd(c)?null:c;return new R(null,3,5,S,[a,b,c],null)}
var EF=P(r,Pf("\n",pg([PE(),""," The basic call uses defaults, prints to stdout","","   (zprint x)",""," All zprint functions also allow the following arguments:","","   (zprint x \x3cwidth\x3e)","   (zprint x \x3cwidth\x3e \x3coptions\x3e)","   (zprint x \x3coptions\x3e)",""," Format a function to stdout (accepts arguments as above)","","   (zprint-fn \x3cfn-name\x3e)",""," Output to a string instead of stdout:","","   (zprint-str x)","   (zprint-fn-str \x3cfn-name\x3e)",""," Colorize output for an ANSI terminal:",
"","   (czprint x)","   (czprint-fn \x3cfn-name\x3e)","   (czprint-str x)","   (czprint-fn-str \x3cfn-name\x3e)",""," The first time you call a zprint printing function, it configures"," itself from $HOME/.zprintrc, as well as environment variables and"," system properties.",""," Explain current configuration, shows source of non-default values:","","   (zprint nil :explain)",""," Change current configuration from running code:","","   (set-options! \x3coptions\x3e)",""," Format a complete file (recognizing ;!zprint directives):",
"","   (zprint-file infile file-name outfile \x3coptions\x3e)","",' Format a string containing multiple "top level" forms'," (recognizing ;!zprint directives):","","   (zprint-file-str file-str zprint-specifier \x3coptions\x3e \x3cdoc-str\x3e)",""," Output information to include when submitting an issue:","","   (zprint nil :support)",""])));var FF=mh([Gj,Nj,Ok,rl,Gl,em,vm,Km,nn,sn,yn,vp,Qp,bq,Fq,Tq,Cr,Nr,Pr,bs,Bt,iu,X,Lv,lw],[1,45,5,42,37,44,33,43,32,45,36,3,38,66,9,41,8,31,34,0,35,35,30,7,30]),GF=function GF(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return GF.g(arguments[0],1<c.length?new Uc(c.slice(1),0,null):null)};GF.g=function(a,b){var c=P(r,Pf(";",Gf.b(FF,b)));return[r.a(""),r.a("["),r.a(c),r.a("m"),r.a(a),r.a(""),r.a("["),r.a("0"),r.a("m")].join("")};GF.H=1;
GF.I=function(a){var b=y(a);a=B(a);return GF.g(b,a)};function HF(a,b){for(var c=b;;){if(c>=D(a))return c-1;if(C.b(J(qd(a,c),2,tl),tl)||C.b(J(qd(a,c),2,tl),W))c+=1;else return c}}var IF=function IF(a,b){for(var d=b,e=null,f=null;;){if(d>=D(a))return null;var g=J(qd(a,d),2,tl),k=($a(e)||C.b(g,Zs))&&ff(g,Wv)&&ff(g,tl)&&ff(g,W);if(n(f))return d;d=n(function(){var a=C.b(g,Wv);return a?e:a}())?IF.b?IF.b(a,d):IF(a,d):d+1;e=f=function(){var a=(a=C.b(g,Wv))?a:e;return n(a)?ff(g,Zs):a}();f=k}};
function JF(a,b){var c;a:{var d=0;for(c=b;;)if(n(d)){if(Nd(c)){c=d;break a}var e=y(c);var f=a;d=HF(f,d);f=C.b(J(qd(f,d),2,tl),Wv)?d+1:null;b:for(d=a;;)if(n(f)){if(0===e){e=n(f)?HF(d,f):null;break b}f=IF(d,f);--e}else{e=null;break b}c=B(c);d=e}else{c=null;break a}}c=HF(a,c);e=IF(a,c);e=n(n(e)?ff(c,0):e)?e-1:D(a)-1;return new R(null,2,5,S,[c,e],null)};var KF=new m(null,3,[ot,function(a){return ff(a,X)?Ad.b(new R(null,1,5,S,[Lv],null),a):new R(null,1,5,S,[Lv],null)},Rs,me,Cq,me],null);function LF(a,b){var c=J(b,0,null),d=J(b,1,null);return a>=c&&a<=d}function MF(a){var b=J(a,0,null),c=J(a,1,null);a=J(a,2,null);return new R(null,4,5,S,[b,c,a,D(b)],null)}
function NF(a,b,c){var d=J(c,0,null),e=J(c,1,null);c=J(c,2,null);var f=null!=a&&(a.h&64||l===a.G)?P(Fh,a):a;a=w.b(f,Us);var g=w.b(f,ct);f=w.b(f,Qv);f=n(f)?pf(uf(LF,b),f):!0;n(f)?(e=n(e)?e:X,C.b(c,dv)?(yi(E(["cursor-element:",d])),b=Cq):(n(g)?(b=LF(b,g),b=n(b)?ff(c,W):b):b=g,b=n(b)?ot:Rs),a=a.a?a.a(b):a(b),a=a.a?a.a(e):a(e)):a=null;return n(a)?new R(null,3,5,S,[d,ff(a,X)?a:null,c],null):null}
function OF(a){return n(a)?C.b("\n",nw(y(a)," "))?new R(null,2,5,S,[df(r,"\n",Lf((D(y(a))-1)/1," ")),X],null):new R(null,2,5,S,["\n",X],null):new R(null,2,5,S,["\n",X],null)}
function PF(a,b,c){var d=os.a(a);c=new R(null,3,5,S,[y(c),yd(d),qd(d,2)],null);var e=b;b=!1;for(var f=null,g=H;;){if(Nd(e))return b?Ad.b(Ad.b(Ad.b(g,NF(a,0,function(){var a=f;return n(a)?a:OF(null)}())),NF(a,0,c)),NF(a,0,os.a(a))):g;var k=y(e),p=b&&null!=k?OF(k):null;e=B(e);d=null==k;var q=n(p)?p:f;g=b&&null==k?g:b&&null!=k?Ad.b(Ad.b(Ad.b(g,NF(a,0,p)),NF(a,0,c)),k):null==k?g:Ad.b(g,k);b=d;f=q}}
function QF(a,b,c,d){a=Dd.c(a,os,zd(b));b=zf(uf(NF,Dd.g(a,ct,c,E([Qv,d]))),b);c=D(b);d=Sf(Xa,b);var e=n(Bs.a(a))?new R(null,2,5,S,[Bs.a(a),X],null):null;return C.b(c,D(d))?d:n(e)?PF(a,b,e):d}function RF(a){var b=a;a=null;for(var c=0,d=H;;){var e=y(b);if($a(e))return Ad.b(d,MF(a));var f=C.b(yd(a),yd(e));b=B(b);var g=f?new R(null,3,5,S,[[r.a(y(a)),r.a(y(e))].join(""),yd(a),qd(a,2)],null):new R(null,3,5,S,[y(e),yd(e),c],null);e=c+D(y(e));d=f||C.b(0,c)?d:Ad.b(d,MF(a));a=g;c=e}}
function SF(a){var b=J(a,0,null);a=J(a,1,null);return null==a?b:Od(a)?df(GF,b,a):GF.g(b,E([a]))}function TF(a){var b=qw([r.a(a)," "].join(""),/\n/);a=D(b)-1;if(0!==a){var c=Nd(y(b))?new V(null,new m(null,1,[Rs,null],null),null):Qh;b=C.b(zd(b)," ")?Ad.b(c,dp):c;b=a>D(b)?Ad.b(b,Ym):b;return new R(null,2,5,S,[a,b],null)}return null}
function UF(a){for(var b=Gf.b(tf.b(TF,y),a),c=a=0,d=H;;){if(Nd(b))return Ad.b(d,new R(null,2,5,S,[c,a-1],null));var e=y(b),f=J(e,0,null),g=J(e,1,null);if(null==e)b=B(b),a+=1;else if(n(function(){var a=C.b(f,1);return a?Rs.a(g):a}())){b=B(b);e=a+1;var k=a;d=Ad.b(d,new R(null,2,5,S,[c,a-1],null));a=e;c=k}else if(n(function(){var a=C.b(f,1);return a?dp.a(g):a}()))b=B(b),e=a+1,k=a+1,d=Ad.b(d,new R(null,2,5,S,[c,a],null)),a=e,c=k;else if(n(function(){var a=1<f;return a?(a=Rs.a(g),n(a)?Ym.a(g):a):a}()))b=
B(b),e=a+1,k=a,d=df(Ad,Ad.b(d,new R(null,2,5,S,[c,a-1],null)),Lf(f,new R(null,2,5,S,[a,a],null))),a=e,c=k;else if(n(Ym.a(g)))b=B(b),e=a+1,k=c,d=df(Ad,d,Lf(f,new R(null,2,5,S,[c,a],null))),a=e,c=k;else return null}}function VF(a,b){return mb(function(a,d){return n(LF(b,d))?new fd(a):a+1},0,a)}function WF(a,b,c){var d=J(b,0,null),e=J(b,1,null);b=J(c,0,null);var f=J(c,1,null);c=D(a);d=VF(a,d);e=VF(a,e);b=d-b;f=e+f;c=f>=c?c-1:f;return new R(null,2,5,S,[y(qd(a,0<b?b:0)),yd(qd(a,c))],null)}
function XF(a,b){if("number"===typeof b)return qd(a,b);if(Sd(b))return new R(null,2,5,S,[y(qd(a,y(b))),yd(qd(a,yd(b)))],null);throw Error(["Line selector '",r.a(b),"' must be a number or a vector!",r.a(b)].join(""));}
function YF(a,b,c){var d=null!=a&&(a.h&64||l===a.G)?P(Fh,a):a,e=w.b(d,Jo),f=null!=e&&(e.h&64||l===e.G)?P(Fh,e):e,g=w.b(f,ct),k=w.b(f,Un),p=w.b(f,eo);if(n(n(k)?k:n(p)?p:Rp.a(g))){var q=UF(b),t=Rp.a(g),v=n(k)?Gf.b(uf(XF,q),k):H;c=n(t)?Ad.b(v,WF(q,c,t)):v;b=n(p)?Gf.b(uf(JF,b),p):null;a=Gf.b(function(a){return function(b){return WF(a,b,new R(null,2,5,S,[0,0],null))}}(q,t,v,c,b,a,d,d,e,f,g,k,p),b);a=n(a)?We.b(c,a):c;return Nd(a)?null:a}return null};function ZF(a){return a.a?a.a(0):a(0)}function $F(a){var b=ZF(a);a=mk.a(Kd(a));return a.a?a.a(b):a(b)}function aG(a){if(n($F(a))){var b=J(a,0,null),c=J(a,1,null);if(n($F(a))){var d=ZF(a);var e=Ck.a(Kd(a));d=e.a?e.a(d):e(d)}else throw"called children on a leaf node";var f=x(d);e=y(f);f=B(f);return n(d)?Jd(new R(null,2,5,S,[e,new m(null,4,[qp,H,us,n(c)?Ad.b(us.a(c),b):new R(null,1,5,S,[b],null),wj,c,uk,f],null)],null),Kd(a)):null}return null}
function bG(a){var b=J(a,0,null),c=J(a,1,null),d=null!=c&&(c.h&64||l===c.G)?P(Fh,c):c,e=w.b(d,qp);c=w.b(d,wj);var f=w.b(d,us),g=w.b(d,uk);d=w.b(d,Hs);return n(f)?(f=Ld(f),n(d)?(d=S,b=We.b(e,vd(b,g)),e=up.a(Kd(a)),b=e.b?e.b(f,b):e(f,b),c=new R(null,2,5,d,[b,n(c)?Dd.c(c,Hs,!0):c],null)):c=new R(null,2,5,S,[f,c],null),Jd(c,Kd(a))):null}function cG(a){for(;;){if(C.b(ju,a.a?a.a(1):a(1)))return ZF(a);var b=bG(a);if(n(b))a=b;else return ZF(a)}}
function dG(a){var b=J(a,0,null),c=J(a,1,null);c=null!=c&&(c.h&64||l===c.G)?P(Fh,c):c;var d=w.b(c,qp),e=w.b(c,uk),f=x(e),g=y(f);f=B(f);return n(n(c)?e:c)?Jd(new R(null,2,5,S,[g,Dd.g(c,qp,Ad.b(d,b),E([uk,f]))],null),Kd(a)):null}function eG(a){var b=J(a,0,null),c=J(a,1,null);c=null!=c&&(c.h&64||l===c.G)?P(Fh,c):c;var d=w.b(c,qp),e=w.b(c,uk);return n(n(c)?x(d):c)?Jd(new R(null,2,5,S,[Ld(d),Dd.g(c,qp,null==d?null:Qb(d),E([uk,vd(b,e)]))],null),Kd(a)):null}
function fG(a,b){J(a,0,null);var c=J(a,1,null);return Jd(new R(null,2,5,S,[b,Dd.c(c,Hs,!0)],null),Kd(a))}function gG(a){return C.b(ju,a.a?a.a(1):a(1))};function hG(a){a=null==a?null:ZF(a);return null==a?null:Fz.a?Fz.a(a):Fz(a)}function iG(a){a=null==a?null:ZF(a);if(null==a)a=null;else{var b=Fz.a?Fz.a(a):Fz(a);a=n(b)?b:sA.a?sA.a(a):sA(a)}return a}function jG(a,b,c){return y(Jf(b,Vh(rf(gG),Vh(me,Nf(a,c)))))}function kG(a){switch(arguments.length){case 1:return lG(arguments[0]);case 2:return jG(arguments[0],iG,arguments[1]);default:throw Error(["Invalid arity: ",r.a(arguments.length)].join(""));}}function lG(a){return jG(dG,iG,a)};function mG(a){a=null==a?null:dG(a);return null==a?null:lG(a)}function nG(a){a=null==a?null:aG(a);return null==a?null:lG(a)};function oG(a){var b=tf.b(x,fz);return Jd(new R(null,2,5,S,[a,null],null),new m(null,3,[mk,ez,Ck,b,up,gz],null))}function pG(a){a=null==a?null:ZF(a);return null==a?null:Xy.a?Xy.a(a):Xy(a)}function qG(a){a=null==a?null:ZF(a);return null==a?null:Zy.a?Zy.a(a):Zy(a)}function rG(a){a=null==a?null:ZF(a);a=null==a?null:$y.a?$y.a(a):$y(a);return n(a)?a:0}function sG(a){a=null==a?null:ZF(a);return null==a?null:az.a?az.a(a):az(a)};Dz.a?Dz.a(1):Dz(1);function tG(a){return Zd(new V(null,new m(null,5,[To,null,pr,null,gu,null,kv,null,Av,null],null),null),pG(a))}function uG(a){return C.b(pG(a),pr)}function vG(a){return C.b(pG(a),To)}function wG(a){return C.b(pG(a),gu)}function xG(a){return C.b(pG(a),kv)};function yG(a){return tG.a?tG.a(a):tG(a)}function zG(a){return C.b(pG.a?pG.a(a):pG(a),Xn)}function AG(a){return C.b(pG.a?pG.a(a):pG(a),Ta)}function BG(a){return C.b(pG.a?pG.a(a):pG(a),$l)}function CG(a){return pG.a?pG.a(a):pG(a)}function DG(a){return n(a)?C.b(pG.a?pG.a(a):pG(a),is):null}function EG(a){return sG.a?sG.a(a):sG(a)}function FG(a){a=aG.a?aG.a(a):aG(a);return n(a)?jG.c?jG.c(dG,hG,a):jG(dG,hG,a):null}function GG(a){a=aG.a?aG.a(a):aG(a);return n(a)?jG.c?jG.c(dG,iG,a):jG(dG,iG,a):null}
function HG(a){a=FG(a);return n(a)?(a=dG.a?dG.a(a):dG(a),n(a)?jG.c?jG.c(dG,hG,a):jG(dG,hG,a):null):null}function IG(a){a=FG(a);a=null==a?null:dG.a?dG.a(a):dG(a);a=null==a?null:jG.c?jG.c(dG,hG,a):jG(dG,hG,a);a=null==a?null:dG.a?dG.a(a):dG(a);return null==a?null:jG.c?jG.c(dG,hG,a):jG(dG,hG,a)}
function JG(a){a=FG(a);a=null==a?null:dG.a?dG.a(a):dG(a);a=null==a?null:jG.c?jG.c(dG,hG,a):jG(dG,hG,a);a=null==a?null:dG.a?dG.a(a):dG(a);a=null==a?null:jG.c?jG.c(dG,hG,a):jG(dG,hG,a);a=null==a?null:dG.a?dG.a(a):dG(a);return null==a?null:jG.c?jG.c(dG,hG,a):jG(dG,hG,a)}function KG(a){return n(a)?(a=dG.a?dG.a(a):dG(a),n(a)?jG.c?jG.c(dG,hG,a):jG(dG,hG,a):null):null}function LG(a,b){var c=aG.a?aG.a(a):aG(a);c=lG?lG(c):kG(c);for(var d=b;;){if(null==c||C.b(d,0))return c;c=KG(c);--d}}
function MG(a,b){var c=aG.a?aG.a(b):aG(b);c=lG?lG(c):kG(c);for(var d=0;;)if(null!=c){if(n(a.a?a.a(c):a(c)))return d;c=KG(c);d+=1}else return null}function NG(a,b){for(var c=aG.a?aG.a(b):aG(b),d=H;;){if($a(c))return d;var e=dG.a?dG.a(c):dG(c);var f=hG.a?hG.a(c):hG(c);f=n(f)?!C.b(pG.a?pG.a(c):pG(c),Hu):f;c=$a(f)?a.a?a.a(c):a(c):null;d=n(c)?Ad.b(d,c):d;c=e}}
function OG(a,b){for(var c=aG.a?aG.a(b):aG(b),d=H;;){if($a(c))return d;var e=dG.a?dG.a(c):dG(c);c=$a(hG.a?hG.a(c):hG(c))?a.a?a.a(c):a(c):null;d=n(c)?Ad.b(d,c):d;c=e}}function PG(a,b){for(var c=dG.a?dG.a(b):dG(b),d=H;;){if($a(c))return d;var e=dG.a?dG.a(c):dG(c);d=n(hG.a?hG.a(c):hG(c))?d:Ad.b(d,a.a?a.a(c):a(c));c=e}}function QG(a){return OG(me,a)}function RG(a){return D(QG(a))}
function SG(a){if(n(a))for(var b=0,c=Wc;;)if($a(eG.a?eG.a(a):eG(a))){if($a(bG.a?bG.a(a):bG(a)))return new R(null,2,5,S,[a,c],null);a=bG.a?bG.a(a):bG(a);c=vd(b,c);b=0}else{var d=eG.a?eG.a(a):eG(a);b=n(hG.a?hG.a(a):hG(a))?b:b+1;a=d}else return null}function TG(a){return C.b(pG.a?pG.a(a):pG(a),Tk)}function UG(a){var b=aG.a?aG.a(a):aG(a);if(n(b))a:for(a=KG(b);;){if($a(a)){a=b;break a}b=KG(a);var c=a;a=b;b=c}else a=null;return a}
function VG(a){if(n(a)){var b;if(b=ff(Tk,pG.a?pG.a(a):pG(a)))a=ZF.a?ZF.a(a):ZF(a),a=Yy.a?Yy.a(a):Yy(a),b=$a(a);a=b}return a}function WG(a){return n(a)?0==(sG.a?sG.a(a):sG(a)).lastIndexOf(":",0):a}function XG(a){if(n(a)){var b=VG(a);return n(b)?(qG.a?qG.a(a):qG(a))instanceof u:b}return a}function YG(a){if(n(a)){var b=VG(a);return n(b)?null==(qG.a?qG.a(a):qG(a)):b}return a}
function ZG(a){n(BG(a))?(a=nG.a?nG.a(a):nG(a),C.b(sG.a?sG.a(a):sG(a),"?")?(a=mG.a?mG.a(a):mG(a),a=nG.a?nG.a(a):nG(a),a=C.b(sG.a?sG.a(a):sG(a),":clj")||C.b(sG.a?sG.a(a):sG(a),":cljs")?XG(mG.a?mG.a(a):mG(a)):null):a=null):a=null;return a}function $G(a){n(BG(a))?(a=nG.a?nG.a(a):nG(a),C.b(sG.a?sG.a(a):sG(a),"?")?(a=mG.a?mG.a(a):mG(a),a=nG.a?nG.a(a):nG(a),a=C.b(sG.a?sG.a(a):sG(a),":clj")||C.b(sG.a?sG.a(a):sG(a),":cljs")?yG(mG.a?mG.a(a):mG(a)):null):a=null):a=null;return a}
function aH(){var a=hB("...");return oG.a?oG.a(a):oG(a)}var bH=function bH(a){var c=pG.a?pG.a(a):pG(a);return C.b(c,zm)||C.b(c,sr)||C.b(c,uq)?(a=FG(a),bH.a?bH.a(a):bH(a)):(c=$a(yG(a)))?(c=WG(a),n(c)?c:n(VG(a))?(a=qG.a?qG.a(a):qG(a),"string"===typeof a||"number"===typeof a):null):c};function cH(a){a=eG.a?eG.a(a):eG(a);for(var b=0;;){var c=pG.a?pG.a(a):pG(a);if(null==c||C.b(c,Hu)||C.b(c,is))return null;if(ff(c,tl))return b;c=eG.a?eG.a(a):eG(a);b=(rG.a?rG.a(a):rG(a))+b;a=c}}
function dH(a){for(var b=nG.a?nG.a(a):nG(a);;)if(n(b)){if(n(function(){var a=WG(b);return n(a)?C.b(sG.a?sG.a(b):sG(b),":doc"):a}()))return"string"===typeof function(){var a=mG.a?mG.a(b):mG(b);return qG.a?qG.a(a):qG(a)}()?mG.a?mG.a(b):mG(b):null;b=function(){var a=mG.a?mG.a(b):mG(b);return mG.a?mG.a(a):mG(a)}()}else return null}
function eH(a){var b=function(){var b=nG.a?nG.a(a):nG(a);return sG.a?sG.a(b):sG(b)}();return C.b(b,"defn")||C.b(b,"defmacro")?(b=function(){var b=nG.a?nG.a(a):nG(a);b=mG.a?mG.a(b):mG(b);return mG.a?mG.a(b):mG(b)}(),"string"===typeof(qG.a?qG.a(b):qG(b))?b:null):C.b(b,"def")?(b=function(){var b=nG.a?nG.a(a):nG(a);b=mG.a?mG.a(b):mG(b);return nG.a?nG.a(b):nG(b)}(),n(xG.a?xG.a(b):xG(b))?dH(b):null):null}
function fH(a){function b(a){return a instanceof u?Sc.b(null,Le(a)):Ke.b(null,Le(a))}for(var c=null,d=H;;){var e=y(a),f=x(e),g=y(f);f=B(f);var k=g,p=f;g=n(function(){var a=p;return a&&(a=ff(ze(sG.a?sG.a(k):sG(k),2),"::"))?(a=WG(k),n(a)?a:XG(k)):a}())?Ie(qG.a?qG.a(k):qG(k)):null;if($a(k))return n(c)?new R(null,2,5,S,[c,d],null):null;if(n(g))if(n(c))if(C.b(c,g))a=B(a),d=Ad.b(d,vd(function(){var a=b(qG.a?qG.a(k):qG(k));a=Nz?Nz(a):Mz(a);return oG.a?oG.a(a):oG(a)}(),p));else return null;else c=g,a=B(a),
d=Ad.b(d,vd(function(){var a=b(qG.a?qG.a(k):qG(k));a=Nz?Nz(a):Mz(a);return oG.a?oG.a(a):oG(a)}(),p));else if(C.b(D(e),1))a=B(a),d=Ad.b(d,e);else return null}}
function gH(a){var b=Y,c=nB,d=oB,e=pB,f=qB,g=rB,k=sB,p=tB,q=uB,t=vB,v=wB,A=xB,z=yB,G=zB,F=AB,I=BB,M=CB,Q=DB,U=EB,ea=FB,T=GB,K=HB,ua=IB,ca=JB,Ha=KB,fa=LB,Ua=MB,Nb=NB,db=OB,Sa=PB,zb=QB,ab=RB,ub=SB,qb=TB,jb=UB,Ea=VB,Oa=WB,Xb=XB,gc=YB,se=ZB,ae=$B,Zc=aC,ah=bC,Vf=cC,Nm=dC,Yf=eC,xl=fC,yl=gC,Dn=hC,dw=iC;Y=sG;nB=EG;oB=DG;pB=qG;qB=QG;rB=PG;sB=FG;tB=GG;uB=HG;vB=IG;wB=JG;xB=LG;yB=RG;zB=OG;AB=NG;BB=TG;CB=sf(!1);DB=SG;EB=uG;FB=vG;GB=xG;HB=wG;IB=yG;JB=zG;KB=AG;LB=CG;MB=UG;NB=sf(!1);OB=sf(!1);PB=sf(!1);QB=sf(!1);
RB=sf(!1);SB=sf(null);TB=sf(null);UB=iG;VB=sf(!1);WB=sf(!1);XB=sf(!1);YB=WG;ZB=bH;$B=sf(!1);aC=BG;bC=aH;cC=XG;dC=YG;eC=ZG;fC=$G;gC=fH;hC=cH;iC=MG;try{return a.w?a.w():a()}finally{iC=dw,hC=Dn,gC=yl,fC=xl,eC=Yf,dC=Nm,cC=Vf,bC=ah,aC=Zc,$B=ae,ZB=se,YB=gc,XB=Xb,WB=Oa,VB=Ea,UB=jb,TB=qb,SB=ub,RB=ab,QB=zb,PB=Sa,OB=db,NB=Nb,MB=Ua,LB=fa,KB=Ha,JB=ca,IB=ua,HB=K,GB=T,FB=ea,EB=U,DB=Q,CB=M,BB=I,AB=F,zB=G,yB=z,xB=A,wB=v,vB=t,uB=q,tB=p,sB=k,rB=g,qB=f,pB=e,oB=d,nB=c,Y=b}};function hH(a){return P(r,Lf(a," "))}var iH=function iH(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return iH.g(0<c.length?new Uc(c.slice(0),0,null):null)};iH.g=function(a){var b=y(a);for(a=B(a);;)if(a)b=Xe.b(b,y(a)),a=B(a);else return b};iH.H=0;iH.I=function(a){return iH.g(x(a))};function jH(a,b){return Gf.b(a,b)}function kH(a,b,c){return Gf.c(a,b,c)}var lH=Cf(null);
function mH(a,b,c,d){var e=null!=a&&(a.h&64||l===a.G)?P(Fh,a):a;a=w.b(e,aq);var f=w.b(e,Fn);e=w.b(e,cn);return n(a)?n(d)?(yi(E([f,b,"--------------","in-hang?",e])),yi(E([df(r,hH(c),Gf.b(y,d))]))):yi(E([f,b,"--------------- no style-vec"])):null}
function nH(a,b){if("string"!==typeof b){var c=""+r.a(b),d=a.a?a.a(c):a(c);if(n(d))return d;c=gi(/clojure/,c);if(n(c))return c;if(b instanceof u)try{var e=gi(/clojure/,""+r.a(Om.a(Kd(b))));if(n(e))return e;var f=Le(b);return a.a?a.a(f):a(f)}catch(g){return null}else return null}else return null}
function oH(a,b){if("string"!==typeof b){var c=""+r.a(b),d=wl.a(a);c=w.b(d,c);if(n(c))return c;if(b instanceof u)try{var e=!Nd(""+r.a(Om.a(Kd(b))));return e?e:w.b(d,Le(b))}catch(f){return null}else return null}else return null}
function pH(a,b,c,d,e,f,g){b=null!=b&&(b.h&64||l===b.G)?P(Fh,b):b;var k=w.b(b,Mk),p=null!=k&&(k.h&64||l===k.G)?P(Fh,k):k,q=w.b(p,Er),t=w.b(p,Oq),v=w.b(p,uu);k=w.b(p,Yr);var A=w.b(p,vt);p=w.b(b,a);var z=null!=p&&(p.h&64||l===p.G)?P(Fh,p):p;p=w.b(z,pm);var G=w.b(z,Yp),F=w.b(z,Rj),I=w.b(z,ar),M=w.b(b,Qn),Q=w.b(b,tn);w.b(b,mr);var U=J(f,0,null),ea=J(f,1,null),T=J(f,2,null);f=J(f,3,null);var K=J(g,0,null);z=J(g,1,null);J(g,2,null);g=J(g,3,null);var ua=zd(T),ca=n(G)?G:0,Ha=n(p)?p:1E3,fa=n(I)?I:k;g=n(n(f)?
f:g)?Dd.c(b,mr,!0):b;b=$a(K)?!0:function(){if(n(U)){var a=ua<=M-(qH.a?qH.a(Q):qH(Q));if(a&&(a=ea<=M)){if(a=0===U)return a;if(a=0<K)if(a=0<d){a=C.b(U,K);if(n(a?A:a))return!0;if(a=e<=ca?!0:(U-1)/d<=Ha)if(a=n(F)?U<F:!0)return a=C.b(c,lr)?t:q,U>v?U-1<=K:(U+fa)/K<a}}return a}return U}();n(mr.a(g))&&yi(E([Fn.a(g),n(b)?"++++++":"XXXXXX","p-what",f,"good-enough? caller:",a,"fn-style:",c,"width:",M,"rightcnt:",Q,"hang-expand:",Ha,"p-count:",d,"p-lines:",U,"p-maxwidth:",ea,"indent-diff:",e,"hang-diff:",ca,
"p-last-maxwidth:",ua,"b-lines:",K,"b-maxwidth:",z]));return b}function rH(a){return n(cn.a(a))?a:n(Mo.a(a))?Dd.c(a,cn,function(){var b=tt.a(a);return n(b)?b:!0}()):a}function sH(a){a=D(Rf(function(a){return Od(a)?Nd(a):null==a},a));return 0!==a?a:null}var tH=function tH(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return tH.g(0<c.length?new Uc(c.slice(0),0,null):null)};
tH.g=function(a){a=mb(function(a,c){return Od(c)?Nd(c)?new fd(null):mb(Xe,a,c):null==c?new fd(null):Xe.b(a,c)},oc(H),a);return n(a)?qc(a):null};tH.H=0;tH.I=function(a){return tH.g(x(a))};function uH(a,b,c,d,e){var f=J(b,0,null),g=J(b,1,null),k=J(b,2,null);J(b,3,null);a=(b=C.b(d,is)||C.b(d,ss))&&$a(a)?0:D(c);e=n(e)?$a(n(k)?0===a:k):e;return n(n(e)?e:b)?new R(null,4,5,S,[Ad.b(f,g+a),0,!0,b],null):new R(null,4,5,S,[f,g+a,null,b],null)}
function vH(a,b,c){J(b,0,null);J(b,1,null);J(b,2,null);J(b,3,null);var d=J(c,0,null);J(c,1,null);c=J(c,2,null);var e=C.b(c,tl)||C.b(c,W)||C.b(c,Hu)?rw(d,/\n/,2):vb(Wc,d);d=J(e,0,null);e=J(e,1,null);b=uH(a,b,d,c,null!=e);return Nd(e)?b:uH(a,b,e,c,null)}function wH(a){for(;;)if(n(a)){var b=y(a),c=J(b,0,null);J(b,1,null);b=J(b,2,null);if(C.b(b,vl))return c;a=B(a)}else return null}
function xH(a,b,c){if(n(n(c)?!Nd(c)&&$a(sH(c)):c)){var d=hq.a(is.a(a));b=mb(uf(vH,d),new R(null,4,5,S,[H,Od(b)?y(b):b,null,null],null),c);J(b,0,null);J(b,1,null);var e=J(b,2,null),f=J(b,3,null);d=n(n(e)?$a(f):e)?b:uH(d,Dd.c(b,2,null),"",null,!0);d=y(d);d=new R(null,3,5,S,[D(d),P(pe,d),d],null);a=hn.a(a);c=n(n(a)?C.b(wH(c),a):a)?a:null;return n(c)?Ad.b(d,c):d}return null}
function yH(a,b){var c=null!=a&&(a.h&64||l===a.G)?P(Fh,a):a,d=w.b(c,Qn),e=w.b(c,tn);w.b(c,mr);var f=J(b,0,null),g=J(b,1,null);n(mr.a(c))&&yi(E([Fn.a(c),"fzfit: fixed-rightcnt:",qH.a?qH.a(e):qH(e),"line-count:",f,"max-width:",g,"width:",d]));return n(b)?g<=d-(qH.a?qH.a(e):qH(e))?f:null:null}function zH(a,b){var c=yH(a,b);return"number"===typeof c&&C.b(c,1)}function AH(a){return Dd.c(a,tn,tn.b(a,0)+1)}function BH(a){return Fd.b(a,tn)}
function CH(a,b,c,d){return $a(c)?BH(d):n(b)?d:n(a)?AH(BH(d)):BH(d)}function qH(a){return"number"===typeof a?a:0}var DH=mh("] ' ) ` ~@ ~ #{ ( #( { } [ #_ @".split(" "),[gs,sr,$p,sr,sr,sr,Gu,$p,Fl,xm,xm,gs,Xn,fs]);function EH(a,b){var c=null!=a&&(a.h&64||l===a.G)?P(Fh,a):a;c=w.b(c,mo);var d=b instanceof O?b:DH.a?DH.a(b):DH(b);return c.a?c.a(d):c(d)}
function FH(a,b,c,d,e){n(mr.a(a))&&yi(E([Fn.a(a),"fzprint-hang-unless-fail:",function(){var a=sB.a?sB.a(e):sB(e);return Y.a?Y.a(a):Y(a)}()]));var f=function(){var c=rH(a);return d.c?d.c(c,b,e):d(c,b,e)}();n(n(f)?yH(a,xH(a,b,f)):f)?c=new R(null,2,5,S,[lr,f],null):(n(mr.a(a))&&yi(E([Fn.a(a),"fzprint-hang-unless-fail: hang failed, doing flow"])),c=new R(null,2,5,S,[Fm,tH.g(E([new R(null,1,5,S,[new R(null,3,5,S,[["\n",r.a(hH(c))].join(""),X,W],null)],null),d.c?d.c(a,c,e):d(a,c,e)]))],null));n(mr.a(a))&&
yi(E([Fn.a(a),"fzprint-hang-unless-fail: exit:",xi(E([c]))]));return c}function GH(a,b){if(C.b(D(b),1)){var c=J(b,0,null),d=J(c,0,null);J(c,1,null);c=J(c,2,null);return new R(null,1,5,S,[new R(null,3,5,S,[d,a,c],null)],null)}return b}
function yf(a,b,c,d,e,f,g){var k=null!=b&&(b.h&64||l===b.G)?P(Fh,b):b;b=w.b(k,a);var p=null!=b&&(b.h&64||l===b.G)?P(Fh,b):b,q=w.b(p,nu);b=w.b(p,fr);var t=w.b(p,Tp),v=w.b(p,W),A=w.b(p,hk),z=w.b(p,Hj),G=w.b(p,Qr),F=w.b(p,zk),I=w.b(p,Tm),M=w.b(k,dt),Q=w.b(k,mr),U=w.b(k,Fn);p=w.b(k,cn);var ea=w.b(k,Mo),T=w.b(k,Mp),K=J(g,0,null),ua=J(g,1,null),ca=J(g,2,null);n(t)&&yi(E(["two-up: caller:",a,"hang?",q,"dbg?",Q]));n(n(Q)?Q:b)&&yi(E([n(U)?U:"","\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d",
["\n",r.a(n(U)?U:"")].join(""),"fzprint-two-up:",Y.a?Y.a(K):Y(K),"caller:",a,"count:",D(g),"ind:",c,"indent:",v,"indent-arg:",A,"justify-width:",e,"one-line?:",M,"hang?:",q,"in-hang?",p,"do-in-hang?",ea,"flow?",z,"commas?",d,"rightmost-pair?",f]));t=n(M)?M:q;var Ha=n(v)?v:A;A=$a(t)?Dd.c(k,dt,!0):k;var fa=CH(d,f,null,k);v=CH(d,f,Mv,k);d=CH(d,f,Mv,A);f=function(){if(n(I)){var a=pB.a?pB.a(K):pB(K);return I.a?I.a(a):I(a)}return I}();var Ua=n(f)?YE(E([d,new m(null,1,[mo,f],null)])):d;d=n(f)?YE(E([v,new m(null,
1,[mo,f],null)])):v;var Nb=Kq.a(k.a?k.a(a):k(a));f=function(){if(n(Nb)){var a=Y.a?Y.a(K):Y(K);a=Nb.a?Nb.a(a):Nb(a);a=n(a)?2<D(g):a}else a=Nb;return n(a)?a:HH.b?HH.b(k,ua):HH(k,ua)}();F=w.b(F,T-1);F=n(G)?function(){var a=pB.a?pB.a(K):pB(K);return G.a?G.a(a):G(a)}():F;T=IH.c?IH.c(fa,c,K):IH(fa,c,K);F=n(F)?GH(F,T):T;T=xH(k,c,F);v=J(T,0,null);var db=J(T,1,null);n(mr.a(k))&&yi(E([Fn.a(k),"fzprint-two-up before modifier: arg-1-line-count:",v,"arg-1-max-width:",db]));f=n(n(v)?1<v:v)?null:f;v=n(f)?tH.g(E([F,
new R(null,1,5,S,[new R(null,3,5,S,[" ",X,tl],null)],null),function(){var a=rH(fa),b=c+db;return IH.c?IH.c(a,b,ua):IH(a,b,ua)}()])):F;F=n(v)?v:F;var Sa=n(v)?f:null,zb=n(v)?xH(k,c,F):T;f=J(zb,0,null);T=J(zb,1,null);n(mr.a(k))&&yi(E([Fn.a(k),"fzprint-two-up after modifier: arg-1-line-count:",f,"arg-1-max-width:",T]));var ab=n(Sa)?ua:K,ub=n(Sa)?ca:ua;ca=function(){var a=$a(z);return a?zH(fa,zb):a}();f=n(ca)?ca:$a(M)?yH(fa,zb):null;T=(n(T)?T:0)-c;if(n(n(F)?n(f)?f:$a(p):F)){if(C.b(D(g),1))return new R(null,
2,5,S,[lr,IH.c?IH.c(d,c,ab):IH(d,c,ab)],null);if(n(function(){var a=C.b(D(g),2);return a?a:n(Sa)?C.b(D(g),3):Sa}())){p=n(e)?e-T+1:1;var qb=1+(n(e)?e:T)+c,jb=Ha+c;if(n(function(){var a=Y.a?Y.a(ab):Y(ab);if(n(a)){a=Y.a?Y.a(ab):Y(ab);a=qw(a,/^:/);J(a,0,null);a=J(a,1,null);if(n(a)){var b=ku.a(k);a=b.a?b.a(a):b(a)}else a=null;return n(a)?FB.a?FB.a(ub):FB(ub):a}return a}()))return e=FH(fa,qb,jb,JH,ub),a=J(e,0,null),e=J(e,1,null),b=C.b(a,lr)?tH.g(E([F,new R(null,1,5,S,[new R(null,3,5,S,[hH(p),X,tl],null)],
null)])):F,new R(null,2,5,S,[a,tH.g(E([b,e]))],null);n(mr.a(k))&&yi(E([Fn.a(k),"fzprint-two-up: before hang.  hanging tried?",n(ca)?$a(z)&&jb>=qb:ca]));ca=n(n(ca)?ca:$a(z)&&jb>=qb)?function(){var a=jb<qb?rH(Ua):Ua;return IH.c?IH.c(a,qb,ub):IH(a,qb,ub)}():null;T=yB.a?yB.a(ub):yB(ub);mH(k,"fzprint-two-up: hanging:",qb,ca);v=xH(k,qb,ca);f=zH(Ua,v);v=n(f)?v:n(function(){var a=$a(M);return a?q:a}())?v:null;mH(k,"fzprint-two-up: hanging-2:",qb,ca);A=($a(v)&&$a(M)||$a(n(f)?f:M))&&(jb<qb||$a(v));n(mr.a(k))&&
yi(E([Fn.a(k),"fzprint-two-up: before flow. flow-it?",A]));Q=A?IH.c?IH.c(d,jb,ub):IH(d,jb,ub):null;mH(k,"fzprint-two-up: flow:",Ha+c,Q);U=xH(k,Ha+c,Q);n(b)&&(zi(E(["fzprint-two-up: local-hang:",t])),zi(E(["fzprint-two-up: one-line?:",M])),zi(E(["fzprint-two-up: hanging-indent:",qb])),zi(E(["fzprint-two-up: hanging-lines:",v])),zi(E(["fzprint-two-up: flow?:",z])),zi(E(["fzprint-two-up: flow-it?:",A])),zi(E(["fzprint-two-up: fit?:",f])),zi(E(["fzprint-two-up: flow-indent:",jb])),zi(E(["fzprint-two-up: hanging:",
Y.a?Y.a(ab):Y(ab),ca])),zi(E(["fzprint-two-up: (+ indent ind):",Ha+c])),zi(E(["fzprint-two-up: flow:",Y.a?Y.a(ab):Y(ab),Q])));n(mr.a(k))&&yi(E([Fn.a(k),"fzprint-two-up: before good-enough"]));return n(f)?new R(null,2,5,S,[lr,tH.g(E([F,new R(null,1,5,S,[new R(null,3,5,S,[hH(p),X,tl],null)],null),ca]))],null):n(n(v)?v:U)?n(pH(a,d,lu,T,qb-jb,v,U))?new R(null,2,5,S,[lr,tH.g(E([F,new R(null,1,5,S,[new R(null,3,5,S,[hH(p),X,tl],null)],null),ca]))],null):n(e)?null:new R(null,2,5,S,[Fm,tH.g(E([F,new R(null,
1,5,S,[new R(null,3,5,S,[["\n",r.a(hH(Ha+c))].join(""),X,W],null)],null),Q]))],null):null}return new R(null,2,5,S,[Fm,tH.g(E([F,new R(null,1,5,S,[new R(null,3,5,S,[["\n",r.a(hH(Ha+c))].join(""),X,W],null)],null),function(){var a=Ha+c,b=n(Sa)?B(B(g)):B(g);return KH?KH(k,a,b,Ol):LH(k,a,b,Ol)}()]))],null)}return null}
function MH(a,b,c,d){var e=null!=b&&(b.h&64||l===b.G)?P(Fh,b):b;a=w.b(e,a);var f=null!=a&&(a.h&64||l===a.G)?P(Fh,a):a,g=w.b(f,Xk);d=Sf(Xa,Gf.b(function(a,b,d){return function(a){return 1<D(a)?(a=y(a),IH.c?IH.c(d,c,a):IH(d,c,a)):null}}(b,e,e,a,f,g),d));var k=Gf.b(vf(xH,e,c),d),p=mb(function(){return function(a,b){return n(a)?C.b(y(b),1):null}}(d,k,b,e,e,a,f,g),!0,k);b=n(p)?mb(function(){return function(a,b){var c=yd(b);return a>c?a:c}}(d,k,p,b,e,e,a,f,g),0,k):null;return n(b)?b-c:null}
function NH(a,b,c){return mb(function(a,b){if(C.b(c,0))var d=NH(a,b,c+1);else d=a-D(Y.a?Y.a(b):Y(b)),d=0<d?d:null;return n(d)?d:new fd(null)},a,b)}
function OH(a,b,c,d,e){var f=null!=b&&(b.h&64||l===b.G)?P(Fh,b):b;b=w.b(f,a);b=null!=b&&(b.h&64||l===b.G)?P(Fh,b):b;var g=w.b(b,Xk),k=w.b(b,Jn);b=w.b(f,Qn);var p=w.b(f,tn),q=w.b(f,dt);w.b(f,Su);a.a?a.a(f):a(f);var t=D(e),v=n(n(g)?$a(q):g)?MH(a,f,c,e):null,A=n(v)?f.a?f.a(a):f(a):null;n(function(){var a=mr.a(f);return n(a)?a:aq.a(f)}())&&yi(E([Fn.a(f),"fzprint-map-two-up: one-line?",dt.a(f),"justify?:",g]));if($a(n(q)?n(k)?1<t:k:q))for(var z=v,G=n(z)?YE(E([YE(E([f,Ed([a,A.a?A.a(or):A(or)])])),new m(null,
1,[Mk,A.a?A.a(ml):A(ml)],null)])):f;;){g=Sh(e);var F=n(q)?NH(b-c,g,0):!0;n(mr.a(f))&&yi(E([Fn.a(f),"fzprint-map-two-up: remaining:",b-c,"beginning-remaining:",F]));g=n(F)?jH(xf(a,G,c,E([d,z,null])),g):null;var I=n(sH(g))?null:g,M=new R(null,1,5,S,[zd(e)],null);g=n(q)?function(){var a=I;return n(a)?NH(F-p,M,0):a}():!0;n(mr.a(f))&&yi(E([Fn.a(f),"fzprint-map-two-up: beginning-remaining:",F,"rightcnt:",p,"end-remaining:",g]));g=n(g)?function(){var b=yf(a,G,c,d,z,Nu,y(M));return n(b)?new R(null,1,5,S,
[b],null):null}():null;var Q=C.b(t,1)?g:tH.g(E([I,g]));n(mr.a(f))&&yi(E([Fn.a(f),"fzprint-map-two-up: len:",t,"(nil? end):",null==g,"end:",g,"(nil? beginning):",null==I,"beginning:",I,"(count end):",D(g),"(count beginnging):",D(I),"justify-width:",z,"result:",Q]));if(n(function(){var a=Q;return n(a)?a:$a(z)}()))return Q;g=f;z=null;G=g}else return null}
function PH(a,b,c,d){var e=a.a?a.a(c):a(c);e=n(e)?a.a?a.a(d):a(d):e;return a=n(e)?ce(a.a?a.a(c):a(c),a.a?a.a(d):a(d)):n(a.a?a.a(c):a(c))?-1:n(a.a?a.a(d):a(d))?1:C.b(b,c)?1:C.b(b,d)?-1:"number"===typeof c&&"number"===typeof d?ce(c,d):ce(""+r.a(c),""+r.a(d))}
function QH(a,b,c,d){var e=null!=b&&(b.h&64||l===b.G)?P(Fh,b):b;a=w.b(e,a);var f=null!=a&&(a.h&64||l===a.G)?P(Fh,a):a,g=w.b(f,Wu),k=w.b(f,Ij),p=w.b(f,ko),q=w.b(f,Zm),t=w.b(e,mj);return n(n(g)?n(t)?k:!0:g)?fe(function(a,b,d,e,f,g,k,p,q){return function(a,b){var d=function(){var b=c.a?c.a(a):c(a);return pB.a?pB.a(b):pB(b)}(),e=function(){var a=c.a?c.a(b):c(b);return pB.a?pB.a(a):pB(a)}(),f=vf(PH,n(q)?q:jf,bC.w?bC.w():bC());return f.b?f.b(d,e):f(d,e)}}(b,e,e,a,f,g,k,p,q,t),d):d}
function RH(a){var b=oB.a?oB.a(a):oB(a);return n(b)?b:JB.a?JB.a(a):JB(a)}function HH(a,b){var c=null!=a&&(a.h&64||l===a.G)?P(Fh,a):a;c=w.b(c,mj);return C.b(c,"condp")?C.b(Y.a?Y.a(b):Y(b),":\x3e\x3e"):null}var SH=function SH(a,b){if(Od(b)){var d=y(b);if(B(b)){var e=w.b(a,d);var f=B(b);e=SH.b?SH.b(e,f):SH(e,f);return Nd(e)?Fd.b(a,d):Dd.c(a,d,e)}return Fd.b(a,d)}return Fd.b(a,b)};function TH(a,b){return Od(b)?C.b(Wf(a,b,nl),nl)?a:SH(a,b):C.b(w.c(a,b,nl),nl)?a:Fd.b(a,b)}
function UH(a,b){return Od(b)?C.b(Wf(a,b,nl),nl)?a:Xf(a,b,dq):C.b(w.c(a,b,nl),nl)?a:Dd.c(a,b,dq)}function VH(a,b,c){b=null!=b&&(b.h&64||l===b.G)?P(Fh,b):b;a=w.b(b,a);b=null!=a&&(a.h&64||l===a.G)?P(Fh,a):a;a=w.b(b,yo);b=w.b(b,fo);c=n(b)?mb(TH,c,b):c;return n(a)?mb(UH,c,a):c}
function WH(a,b){var c=null!=a&&(a.h&64||l===a.G)?P(Fh,a):a,d=w.b(c,Gk);if(Nd(b))return null;for(var e=b,f=null,g=0,k=oc(H);;){if($a(e))return new R(null,2,5,S,[f,qc(k)],null);var p=n(RH(y(e)))?new R(null,3,5,S,[B(e),new R(null,1,5,S,[y(e)],null),!0],null):n(function(){var a=RH(yd(e));return n(a)?a:HH(c,yd(e))}())?function(){var b=$h(function(a,b,c,d,e,f,g){return function(a){var b=RH(a);return n(b)?b:HH(g,a)}}(e,f,g,k,a,c,c,d),B(e)),p=J(b,0,null);b=J(b,1,null);return new R(null,3,5,S,[B(b),Tf.b(H,
We.g(new R(null,1,5,S,[y(e)],null),p,E([new R(null,1,5,S,[y(b)],null)]))),!0],null)}():C.b(D(e),1)?new R(null,3,5,S,[B(e),new R(null,1,5,S,[y(e)],null),null],null):new R(null,3,5,S,[B(B(e)),new R(null,2,5,S,[y(e),yd(e)],null),null],null),q=J(p,0,null),t=J(p,1,null),v=J(p,2,null);p=ff(g,d)?q:function(){var a=bC.w?bC.w():bC();return vb(Wc,a)}();q=function(){var a=f;return n(a)?a:v}();var A=g+1;t=Xe.b(k,t);e=p;f=q;g=A;k=t}}
function XH(a){if(n(function(){var b=y(a);b=cC.a?cC.a(b):cC(b);if(n(b))return b;b=y(a);return eC.a?eC.a(b):eC(b)}()))return vb(Wc,a);var b=De(a);b=$h(function(){return function(a){var b=IB.a?IB.a(a):IB(a);a=n(b)?b:fC.a?fC.a(a):fC(a);return $a(a)}}(b),b);var c=J(b,0,null);J(b,1,null);b=Gf.b(N,De(c));c=Hf.b(D(a)-D(b),a);return Nd(c)?b:We.b(vb(Wc,c),b)}
function YH(a,b,c){n(mr.a(a))&&yi(E([Fn.a(a),"partition-all-sym: coll:",Gf.b(Y,c)]));var d=Qf(XH,E([ai(function(a){var b=cC.a?cC.a(a):cC(a);if(n(b))return b;b=dC.a?dC.a(a):dC(a);return n(b)?b:eC.a?eC.a(a):eC(a)},c)]));for(a=oc(H);;){if(Nd(d))return qc(a);c=n(function(){var a=function(){var a=function(){var a=y(y(d));return cC.a?cC.a(a):cC(a)}();if(n(a))return a;a=function(){var a=y(y(d));return dC.a?dC.a(a):dC(a)}();if(n(a))return a;a=y(y(d));return eC.a?eC.a(a):eC(a)}();return n(a)?!Nd(yd(d)):a}())?
C.b(D(y(d)),1)?new R(null,2,5,S,[xe(d,2),Xe.b(a,We.b(y(d),yd(d)))],null):n(function(){if(n(b)){var a=y(y(d));a=Y.a?Y.a(a):Y(a);return b.a?b.a(a):b(a)}return b}())?C.b(D(y(d)),2)?new R(null,2,5,S,[xe(d,2),Xe.b(a,We.b(y(d),yd(d)))],null):new R(null,2,5,S,[B(B(y(d)))?vd(B(B(y(d))),B(d)):B(d),Xe.b(a,function(){var a=y(y(d));var b=yd(y(d));b=vb(Wc,b);return vb(b,a)}())],null):new R(null,2,5,S,[vd(B(y(d)),B(d)),Xe.b(a,function(){var a=y(y(d));return vb(Wc,a)}())],null):new R(null,2,5,S,[B(d),Xe.b(a,y(d))],
null);a=J(c,0,null);c=J(c,1,null);d=a;a=c}}function ZH(a,b,c,d,e){c=MB.a?MB.a(c):MB(c);c=oB.a?oB.a(c):oB(c);b=n(c)?new R(null,1,5,S,[new R(null,3,5,S,[["\n",r.a(hH(b))].join(""),X,W],null)],null):null;return We.b(b,new R(null,1,5,S,[new R(null,3,5,S,[d,EH(a,n(e)?e:d),n(e)?e:Zs],null)],null))}
function JH(a,b,c){a=null!=a&&(a.h&64||l===a.G)?P(Fh,a):a;var d=w.b(a,Hq);d=null!=d&&(d.h&64||l===d.G)?P(Fh,d):d;w.b(d,Kj);n(mr.a(a))&&yi(E([Fn.a(a),"fzprint-binding-vec:",function(){var a=sB.a?sB.a(c):sB(c);return Y.a?Y.a(a):Y(a)}()]));var e=AH(a);a=new R(null,1,5,S,[new R(null,3,5,S,["[",EH(e,"["),Wv],null)],null);d=ZH(e,b+1,c,"]",null);a=C.b(yB.a?yB.a(c):yB(c),0)?tH.g(E([a,d])):tH.g(E([a,function(){var a=Hq.a(e),d=b+1,k=OH(Hq,e,b+1,!1,yd(WH(e,qB.a?qB.a(c):qB(c))));return $H.c?$H.c(a,d,k):$H(a,
d,k)}(),d]));n(mr.a(e))&&yi(E([Fn.a(e),"fzprint-binding-vec exit:",xi(E([a]))]));return a}
function aI(a,b,c,d,e,f,g){var k=null!=a&&(a.h&64||l===a.G)?P(Fh,a):a,p=w.b(k,dt);n(mr.a(k))&&yi(E([Fn.a(k),"fzprint-hang:",function(){var a=sB.a?sB.a(g):sB(g);return Y.a?Y.a(a):Y(a)}(),"caller:",b]));a=n(function(){var a=ff(c,d);return a?(a=k.a?k.a(b):k(b),a.a?a.a(nu):a(nu)):a}())?tH.g(E([new R(null,1,5,S,[new R(null,3,5,S,[" ",X,tl],null)],null),function(){var a=rH(k);return e.c?e.c(a,c,g):e(a,c,g)}()])):null;var q=n(f)?f:yB.a?yB.a(g):yB(g),t=xH(k,c-1,a);if(n(function(){var a=zH(k,t);return n(a)?
a:p}()))return a;f=tH.g(E([new R(null,1,5,S,[new R(null,3,5,S,[["\n",r.a(hH(d))].join(""),X,W],null)],null),e.c?e.c(k,d,g):e(k,d,g)]));mH(k,"fzprint-hang: flow:",d,f);var v=xH(k,d,f);n(mr.a(k))&&yi(E([Fn.a(k),"fzprint-hang: ending: hang-count:",q,"hanging:",a,"flow:",f]));q=n(nu.a(b.a?b.a(k):b(k)))?pH(b,k,ns,q,c-d,t,v):null;return n(q)?a:f}
function bI(a,b,c){var d=null!=a&&(a.h&64||l===a.G)?P(Fh,a):a;a=w.b(d,Cm);a=null!=a&&(a.h&64||l===a.G)?P(Fh,a):a;w.b(a,Kj);n(mr.a(d))&&yi(E([Fn.a(d),"fzprint-pairs:",function(){var a=sB.a?sB.a(c):sB(c);return Y.a?Y.a(a):Y(a)}()]));a=function(){var a=Cm.a(d),f=WH(d,rB.b?rB.b(me,c):rB(me,c));J(f,0,null);f=J(f,1,null);n(mr.a(d))&&yi(E([Fn.a(d),"fzprint-pairs: partition:",Gf.b(tf.b(Y,y),f)]));f=OH(Cm,d,b,!1,f);return $H.c?$H.c(a,b,f):$H(a,b,f)}();n(mr.a(d))&&yi(E([Fn.a(d),"fzprint-pairs: exit:",xi(E([a]))]));
return a}
function cI(a,b,c){var d=null!=a&&(a.h&64||l===a.G)?P(Fh,a):a,e=w.b(d,Ml),f=null!=e&&(e.h&64||l===e.G)?P(Fh,e):e,g=w.b(f,Kj);n(mr.a(d))&&yi(E([Fn.a(d),"fzprint-extend:",function(){var a=sB.a?sB.a(c):sB(c);return Y.a?Y.a(a):Y(a)}()]));var k=function(){var k=Ml.a(d),q=OH(Ml,Dd.c(d,xs,Tk),b,!1,function(){var p=YH(d,Kq.a(Ml.a(d)),rB.b?rB.b(me,c):rB(me,c));n(mr.a(d))&&yi(E([Fn.a(d),"fzprint-extend: partition:",Gf.b(function(){return function(a){return Gf.b(Y,a)}}(p,k,b,a,d,d,e,f,g),p)]));return p}());return $H.c?
$H.c(k,b,q):$H(k,b,q)}();n(mr.a(d))&&yi(E([Fn.a(d),"fzprint-extend: exit:",xi(E([k]))]));return k}
function dI(a,b,c){var d=mr.a(a);d=n(d)?d:aq.a(a);n(d)&&yi(E([Fn.a(a),"fzprint-one-line:"]));d=zB.b?zB.b(me,c):zB(me,c);c=D(d)-1;D(d);a=Dd.c(a,dt,!0);for(var e=0,f=oc(H);;){if(Nd(d))return n(mr.a(a))&&yi(E([Fn.a(a),"fzprint-one-line: exiting count:",D(f)])),qc(f);var g=y(d),k=C.b(e,c)?new R(null,2,5,S,[0!==e?new R(null,1,5,S,[new R(null,3,5,S,[" ",X,tl],null)],null):null,a],null):C.b(e,0)?new R(null,2,5,S,[null,BH(a)],null):new R(null,2,5,S,[new R(null,1,5,S,[new R(null,3,5,S,[" ",X,tl],null)],null),
BH(a)],null),p=J(k,0,null);k=J(k,1,null);g=IH.c?IH.c(k,b,g):IH(k,b,g);mH(a,"fzprint-one-line:",b,g);var q=xH(a,b,g);J(q,0,null);b=J(q,1,null);if($a(zH(k,q)))return n(mr.a(a))&&yi(E([Fn.a(a),"fzprint-one-line: failed, too wide or too many lines!"])),null;d=B(d);b+=1;e+=1;a:for(p=E([p,g]),g=f;;)if(n(p)){f=B(p);b:for(p=y(p),k=g;;)if(n(p))g=B(p),k=Xe.b(k,y(p)),p=g;else{g=k;break b}p=f}else{f=g;break a}}}
function eI(a,b,c){var d=null!=a&&(a.h&64||l===a.G)?P(Fh,a):a,e=w.b(d,Gk),f=D(c),g=f>e?We.b(Hf.b(e,c),function(){var a=bC.w?bC.w():bC();return vb(Wc,a)}()):c;n(mr.a(d))&&yi(E([Fn.a(d),"fzprint-seq: (count zloc-seq):",f]));if(Nd(g))return null;a=kH(function(a,b,c,d,e){return function(a,b){var c=BH(e);return IH.c?IH.c(c,a,b):IH(c,a,b)}}(f,g,a,d,d,e),Od(b)?b:Kf(b),Sh(g));c=new R(null,1,5,S,[function(){var a=Od(b)?zd(b):b,c=zd(g);return IH.c?IH.c(d,a,c):IH(d,a,c)}()],null);return C.b(f,1)?c:tH.g(E([a,
c]))}function LH(a){switch(arguments.length){case 4:return KH(arguments[0],arguments[1],arguments[2],arguments[3]);case 3:return fI(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",r.a(arguments.length)].join(""));}}
function KH(a,b,c,d){n(mr.a(a))&&yi(E([Fn.a(a),"fzprint-flow-seq: count zloc-seq:",D(c)]));c=eI(a,b,c);var e=P(tH,Pf(new R(null,1,5,S,[new R(null,3,5,S,[" ",X,tl],null)],null),c)),f=mH(a,"fzprint-flow-seq:",b,e),g=xH(a,b,e);b=n(function(){var b=$a(d);return b?zH(a,g):b}())?e:P(tH,Od(b)?If(1,Of.b(Gf.b(function(){return function(a){return new R(null,1,5,S,[new R(null,3,5,S,[["\n",r.a(hH(a))].join(""),X,W],null)],null)}}(c,e,f,g),b),c)):Pf(new R(null,1,5,S,[new R(null,3,5,S,[["\n",r.a(hH(b))].join(""),
X,W],null)],null),c));n(mr.a(a))&&yi(E([Fn.a(a),"fzprint-flow-seq: exit:",xi(E([b]))]));return b}function fI(a,b,c){return KH(a,b,c,null)}
function gI(a,b,c,d,e){var f=null!=b&&(b.h&64||l===b.G)?P(Fh,b):b,g=w.b(f,dt);n(mr.a(f))&&yi(E([Fn.a(f),"fzprint-hang-one: hindent:",c,"findent:",d]));n(dl.a(f))&&yi(E([P(r,Lf(qu.a(f),".")),"h1 caller:",a,function(){var a=n(IB.a?IB.a(e):IB(e))?sB.a?sB.a(e):sB(e):e;return Y.a?Y.a(a):Y(a)}()]));var k=$a(g)&&$a(nu.a(a.a?a.a(f):a(f)))?Dd.c(f,dt,!0):f;b=ff(c,d)?function(){var a=rH(k);return IH.c?IH.c(a,c,e):IH(a,c,e)}():null;var p=yB.a?yB.a(e):yB(e);b=tH.g(E([new R(null,1,5,S,[new R(null,3,5,S,[" ",X,
tl],null)],null),b]));mH(f,"fzprint-hang-one: hanging:",c-1,b);var q=xH(f,c-1,b);n(mr.a(f))&&yi(E([Fn.a(f),"fzprint-hang-one: hr-lines:",q,"hang-count:",p]));if(n(function(){var a=zH(f,q);return n(a)?a:g}()))return b;var t=tH.g(E([new R(null,1,5,S,[new R(null,3,5,S,[["\n",r.a(hH(d))].join(""),X,W],null)],null),IH.c?IH.c(f,d,e):IH(f,d,e)]));mH(f,"fzprint-hang-one: flow:",d,t);var v=xH(f,d,t);n(mr.a(f))&&yi(E([Fn.a(f),"fzprint-hang-one: fd-lines:",v]));n(mr.a(f))&&yi(E([Fn.a(f),"fzprint-hang-one: ending: hang-count:",
p,"hanging:",xi(E([b])),"flow:",xi(E([t]))]));var A=function(){var b=nu.a(a.a?a.a(f):a(f));return n(b)?pH(a,f,ts,p,c-d,q,v):b}();return n(A)?b:t}function hI(a){for(var b=De(a),c=0,d=null,e=0;;){var f=y(b);if(Nd(b))return c-e;var g=oB.a?oB.a(f):oB(f);if(n(function(){var a=$a(g);return a?(a=d,n(a)?$a(ZB.a?ZB.a(f):ZB(f)):a):a}()))return c-e;b=B(b);c+=1;a=n(g)?d:$a(d);e=n(function(){var a=d;return n(a)?$a(g):a}())?0:e+1;d=a}}
function iI(a,b,c){b=null!=b&&(b.h&64||l===b.G)?P(Fh,b):b;a=w.b(b,a);a=null!=a&&(a.h&64||l===a.G)?P(Fh,a):a;var d=w.b(a,Dk);a=w.b(a,Vm);if(n(d)){var e=hI(c);d=D(c)-e;n(mr.a(b))&&yi(E([Fn.a(b),"constant-pair: non-paired-items:",d]));c=e>=a?yd(WH(b,If(d,c))):null;return new R(null,2,5,S,[c,d],null)}return new R(null,2,5,S,[null,D(c)],null)}
function jI(a,b,c,d,e,f,g){var k=null!=b&&(b.h&64||l===b.G)?P(Fh,b):b;b=w.b(k,a);b=null!=b&&(b.h&64||l===b.G)?P(Fh,b):b;var p=w.b(b,nu);w.b(b,Dk);w.b(b,Vm);w.b(b,pm);w.b(b,Yp);var q=w.b(b,Kj);b=w.b(k,mr);n(dl.a(k))&&yi(E([P(r,Lf(qu.a(k),".")),"hr",Y.a?Y.a(e):Y(e)]));n(mr.a(k))&&yi(E([Fn.a(k),"fzprint-hang-remaining:",Y.a?Y.a(e):Y(e),"hindent:",c,"findent:",d,"caller:",a,"nl-separator?:",q]));q=rB.b?rB.b(me,e):rB(me,e);var t=n(g)?Hf.b(g,q):q;g=iI(a,k,t);var v=J(g,0,null),A=J(g,1,null);n(mr.a(k))&&
yi(E([Fn.a(k),"fzprint-hang-remaining count pair-seq:",D(v)]));q=function(){var a=$a(v)?P(tH,Pf(new R(null,1,5,S,[new R(null,3,5,S,[["\n",r.a(hH(d))].join(""),X,W],null)],null),eI(k,d,t))):0!==A?tH.g(E([P(tH,Pf(new R(null,1,5,S,[new R(null,3,5,S,[["\n",r.a(hH(d))].join(""),X,W],null)],null),jH(vf(IH,BH(k),d),Hf.b(A,t)))),new R(null,1,5,S,[new R(null,3,5,S,[["\n",r.a(hH(d))].join(""),X,W],null)],null),function(){var a=Cm.a(k),b=OH(Cm,k,d,null,v);return $H.c?$H.c(a,d,b):$H(a,d,b)}()])):function(){var a=
Cm.a(k),b=OH(Cm,k,d,null,v);return $H.c?$H.c(a,d,b):$H(a,d,b)}();return new R(null,2,5,S,[a,xH(k,d,a)],null)}();var z=n(p)?ff(c,d):p,G=function(){var a=n(z)?$a(v)?P(tH,Pf(new R(null,1,5,S,[new R(null,3,5,S,[["\n",r.a(hH(c))].join(""),X,W],null)],null),eI(rH(k),c,t))):0!==A?tH.g(E([function(){var a=P(tH,Pf(new R(null,1,5,S,[new R(null,3,5,S,[["\n",r.a(hH(c))].join(""),X,W],null)],null),jH(vf(IH,BH(rH(k)),c),Hf.b(A,t))));n(mr.a(k))&&yi(E([Fn.a(k),"fzprint-hang-remaining: mapv:",xi(E([a]))]));return a}(),
new R(null,1,5,S,[new R(null,3,5,S,[["\n",r.a(hH(c))].join(""),X,W],null)],null),function(){var a=Cm.a(k);var b=OH(Cm,rH(k),c,null,v);a=$H.c?$H.c(a,c,b):$H(a,c,b);n(mr.a(k))&&yi(E([Fn.a(k),"fzprint-hang-remaining: fzprint-hang:",xi(E([a]))]));return a}()])):function(){var a=Cm.a(k),b=OH(Cm,rH(k),c,null,v);return $H.c?$H.c(a,c,b):$H(a,c,b)}():null;return new R(null,2,5,S,[a,xH(k,c,a)],null)}();g=J(q,0,null);p=J(q,1,null);q=J(G,0,null);G=J(G,1,null);var F=D(t);mH(k,"fzprint-hang-remaining: hanging:",
c,q);n(mr.a(k))&&yi(E([Fn.a(k),"fzprint-hang-remaining: hanging-lines:",G,"hang-count:",F]));n(mr.a(k))&&yi(E([Fn.a(k),"fzprint-hang-remaining: flow-lines:",p]));n(b)&&0===F&&yi(E(["hang-count \x3d 0:",""+r.a(rB.b?rB.b(Y,e):rB(Y,e))]));mH(k,"fzprint-hang-remaining: flow",d,g);return n(p)?n(pH(a,k,f,F,c-d,G,p))?tH.g(E([new R(null,1,5,S,[new R(null,3,5,S,[" ",X,tl],null)],null),q])):tH.g(E([new R(null,1,5,S,[new R(null,3,5,S,[["\n",r.a(hH(d))].join(""),X,W],null)],null),g])):null}
function kI(a,b,c,d,e,f){return jI(a,b,c,d,e,f,null)}var lI=new V(null,new m(null,12,[sk,null,Tk,null,fl,null,sl,null,Ll,null,Mm,null,qo,null,Sp,null,Hq,null,Dr,null,Wt,null,tu,null],null),null),mI=new m(null,6,[fl,xv,qo,nm,tu,X,Dr,Fm,Mm,Lm,Hp,Ol],null),nI=new V(null,new m(null,2,[Lm,null,Wt,null],null),null),oI=new m(null,5,[xv,X,nm,Ll,Yl,Ml,sl,xv,sk,nm],null);function pI(a,b){return n(nI.a?nI.a(b):nI(b))?Dd.c(a,Ro,!0):a}var qI=new m(null,8,[qo,Cm,nm,Cm,sk,Cm,Ml,Ml,Hq,Hq,Yl,Ml,qk,Ml,Ll,Cm],null);
function rI(a,b,c){var d=null!=a&&(a.h&64||l===a.G)?P(Fh,a):a,e=w.b(d,Zk),f=w.b(d,nq),g=w.b(d,at);return $a(function(){var a=e.a?e.a(c):e(c);if(n(a))return a;a=function(){var a=3<b;return a?f.a?f.a(c):f(c):a}();if(n(a))return a;a=function(){var a=4<b;return a?g.a?g.a(c):g(c):a}();if(n(a))return a;a=qI.a?qI.a(c):qI(c);if(n(a)){a=a.a?a.a(d):a(d);var p=Hj.a(a);return n(p)?p:Jn.a(a)}return null}())}
function sI(a,b,c,d,e){var f=null!=c&&(c.h&64||l===c.G)?P(Fh,c):c,g=w.b(f,a),k=null!=g&&(g.h&64||l===g.G)?P(Fh,g):g,p=w.b(k,hk),q=w.b(k,W),t=w.b(f,ku),v=w.b(f,wl),A=w.b(f,dt),z=w.b(f,xs),G=w.b(f,Ro),F=w.b(f,Zk),I=yB.a?yB.a(e):yB(e),M=D(b),Q=$a(function(){var a=sB.a?sB.a(e):sB(e);a=YB.a?YB.a(a):YB(a);if(n(a))return a;a=sB.a?sB.a(e):sB(e);return cC.a?cC.a(a):cC(a)}()),U=Q?null:function(){var a=sB.a?sB.a(e):sB(e);return Y.a?Y.a(a):Y(a)}(),ea=function(){if(n(z))return z;var a=t.a?t.a(U):t(U);return n(a)?
a:v.a?v.a(U):v(U)}(),T=n(function(){var a=$a(ea);return a?U:a}())?function(){var a=zd(qw(U,/\//));return t.a?t.a(a):t(a)}():ea,K=n(lI.a?lI.a(T):lI(T))?q:n(p)?p:q,ua=rI(f,I,T),ca=function(){var a=mI.a?mI.a(T):mI(T);return n(a)?a:T}(),Ha=C.b(ca,lr)?ca:3>I?null:ca,fa=n(G)?function(){var a=oI.a?oI.a(Ha):oI(Ha);return n(a)?a:Ha}():Ha,Ua=n(G)?Fd.b(f,Ro):f,Nb=M-1,db=n(function(){var a=sB.a?sB.a(e):sB(e);return EB.a?EB.a(a):EB(a)}())?K:M,Sa=$a(function(){if(Q)return Q;var a=sB.a?sB.a(e):sB(e);return oB.a?
oB.a(a):oB(a)}())?d+(M+1)+D(U):null,zb=Q?Ua:Dd.c(Ua,mj,U),ab=Dd.c(zb,qu,function(){var a=qu.a(zb);return n(a)?a:0}()+1),ub=n(dl.a(ab))?yi(E([P(r,Lf(qu.a(ab),".")),"fzs",U])):null,qb=K+d,jb=M+d,Ea=n(fa)?Fd.b(ab,xs):ab,Oa=BH(Ea),Xb=new R(null,1,5,S,[new R(null,3,5,S,[b,EH(Ea,b),Wv],null)],null),gc=ZH(Ea,K+d,e,")",null),se=n(mr.a(Ea))?yi(E([Fn.a(Ea),"fzprint-list*:",Y.a?Y.a(e):Y(e),"fn-str",U,"fn-style:",fa,"ind:",d,"indent:",K,"default-indent:",db,"one-line-ok?",ua,"arg-1-coll?",Q,"arg-1-indent:",Sa,
"l-str:",["'",r.a(b),"'"].join(""),"indent-adj:",Nb,"len:",I,"one-line?:",A,"rightcnt:",tn.a(Ea)])):null,ae=0===I?kp:n(ua)?dI(Ea,jb,e):null;if(n(ae))return C.b(ae,kp)?tH.g(E([Xb,gc])):tH.g(E([Xb,ae,gc]));if(n(A))return n(mr.a(Ea))?yi(E([Fn.a(Ea),"fzprint-list*:",U," one-line did not work!!!"])):null;if(n(n(mr.a(Ea))?yi(E([Fn.a(Ea),"fzprint-list*: fn-style:",fa])):null))return null;if(C.b(I,0))return tH.g(E([Xb,gc]));if(C.b(I,1))return tH.g(E([Xb,function(){var a=sB.a?sB.a(e):sB(e);return IH.c?IH.c(Ea,
jb,a):IH(Ea,jb,a)}(),gc]));if(n(function(){var a=C.b(fa,Hq);return a?(a=uB.a?uB.a(e):uB(e),FB.a?FB.a(a):FB(a)):a}())){var Zc=FH(Oa,Sa,K+d,JH,uB.a?uB.a(e):uB(e));b=J(Zc,0,null);Zc=J(Zc,1,null);b=C.b(b,lr)?tH.g(E([new R(null,1,5,S,[new R(null,3,5,S,[" ",X,tl],null)],null),Zc])):Zc;return tH.g(E([Xb,function(){var a=d+1,b=sB.a?sB.a(e):sB(e);return IH.c?IH.c(Oa,a,b):IH(Oa,a,b)}(),b,new R(null,1,5,S,[new R(null,3,5,S,[["\n",r.a(hH(K+d))].join(""),X,W],null)],null),KH(Ea,K+d,xe(zB.b?zB.b(me,e):zB(me,e),
2),Ol),gc]))}if(C.b(fa,Ll))return tH.g(E([Xb,function(){var a=d+1,b=sB.a?sB.a(e):sB(e);return IH.c?IH.c(Oa,a,b):IH(Oa,a,b)}(),aI(Ea,Ll,Sa,K+d,bI,D(function(){var a=xB.b?xB.b(e,0):xB(e,0);return rB.b?rB.b(me,a):rB(me,a)}()),xB.b?xB.b(e,0):xB(e,0)),gc]));if(C.b(fa,Ml))return tH.g(E([Xb,function(){var a=d+1,b=sB.a?sB.a(e):sB(e);return IH.c?IH.c(Oa,a,b):IH(Oa,a,b)}(),new R(null,1,5,S,[new R(null,3,5,S,[["\n",r.a(hH(K+d))].join(""),X,W],null)],null),cI(Ea,K+d,xB.b?xB.b(e,0):xB(e,0)),gc]));if(C.b(fa,Tk)&&
$a(function(){var a=uB.a?uB.a(e):uB(e);return EB.a?EB.a(a):EB(a)}())||C.b(fa,sl)||C.b(fa,Sp)||C.b(fa,sk)||C.b(fa,qk)){b=gI(a,C.b(I,2)?Ea:Oa,Sa,K+d,uB.a?uB.a(e):uB(e));Zc=xH(Oa,Sa,b);var ah=J(Zc,0,null);Zc=J(Zc,1,null);var Vf=vB.a?vB.a(e):vB(e);b=n(b)?tH.g(E([function(){var a=K+d,b=sB.a?sB.a(e):sB(e);return IH.c?IH.c(Oa,a,b):IH(Oa,a,b)}(),b,n(function(){var a=C.b(fa,sl);if(a||(a=C.b(fa,sk))||(a=C.b(fa,Sp)))return a;a=FB.a?FB.a(Vf):FB(Vf);return n(a)?C.b(ah,1):a}())?gI(a,C.b(I,3)?Ea:Oa,Zc,K+d,Vf):tH.g(E([new R(null,
1,5,S,[new R(null,3,5,S,[["\n",r.a(hH(K+d))].join(""),X,W],null)],null),function(){var a=C.b(I,3)?Ea:Oa,b=K+d;return IH.c?IH.c(a,b,Vf):IH(a,b,Vf)}()]))])):null;return n(b)?C.b(I,3)?tH.g(E([Xb,b,gc])):tH.g(E([Xb,b,C.b(fa,sk)?tH.g(E([new R(null,1,5,S,[new R(null,3,5,S,[["\n",r.a(hH(K+d))].join(""),X,W],null)],null),bI(Ea,K+d,xB.b?xB.b(e,2):xB(e,2))])):C.b(fa,qk)?tH.g(E([new R(null,1,5,S,[new R(null,3,5,S,[["\n",r.a(hH(K+d))].join(""),X,W],null)],null),cI(Ea,K+d,xB.b?xB.b(e,2):xB(e,2))])):kI(a,C.b(fa,
Sp)?Dd.c(Ea,xs,Tk):Ea,K+d,K+d,xB.b?xB.b(e,2):xB(e,2),fa),gc])):null}if(C.b(fa,wt)&&3<I){var Nm=function(){var a=function(){var a=function(){return function(a){var b=FB.a?FB.a(a):FB(a);return n(b)?b:n(EB.a?EB.a(a):EB(a))?(a=sB.a?sB.a(a):sB(a),FB.a?FB.a(a):FB(a)):null}}(I,M,Q,U,ea,T,K,ua,ca,Ha,fa,Ua,Nb,db,Sa,zb,ab,ub,qb,jb,Ea,Oa,Ea,Xb,gc,se,ae,c,f,f,g,k,p,q,t,v,A,z,G,F);return iC.b?iC.b(a,e):iC(a,e)}();return n(a)?a:0}(),Yf="string"===typeof function(){var a=vB.a?vB.a(e):vB(e);return pB.a?pB.a(a):pB(a)}(),
xl=Nm-(Yf?4:3),yl=0<xl;b=Yf?gI(a,Oa,K+d,K+d,vB.a?vB.a(e):vB(e)):null;Zc=yl?function(){var b=gI(a,Oa,K+d,K+d,Yf?wB.a?wB.a(e):wB(e):vB.a?vB.a(e):vB(e)),c=xH(Oa,K+d,b);J(c,0,null);c=J(c,1,null);return tH.g(E([b,jI(a,Oa,c+1,K+K+d-1,function(){var a=Yf?3:2;return xB.b?xB.b(e,a):xB(e,a)}(),fa,xl)]))}():null;return tH.g(E([Xb,function(){var a=d+1,b=sB.a?sB.a(e):sB(e);return IH.c?IH.c(Oa,a,b):IH(Oa,a,b)}(),gI(a,C.b(I,2)?Ea:Oa,Sa,K+d,uB.a?uB.a(e):uB(e)),Yf&&yl?tH.g(E([b,Zc])):Yf?b:yl?Zc:new R(null,1,5,S,[new R(null,
3,5,S,["",X,tl],null)],null),kI(a,pI(Ea,fa),K+d,K+d,function(){var a=yl?Nm-1:Yf?2:1;return xB.b?xB.b(e,a):xB(e,a)}(),fa),gc]))}return C.b(fa,nm)||C.b(fa,xv)||C.b(fa,Pq)||C.b(fa,Wt)?tH.g(E([Xb,function(){var a=d+1,b=sB.a?sB.a(e):sB(e);return IH.c?IH.c(Oa,a,b):IH(Oa,a,b)}(),gI(a,C.b(I,2)?Ea:Oa,Sa,K+d,uB.a?uB.a(e):uB(e)),2<I?C.b(fa,nm)?tH.g(E([new R(null,1,5,S,[new R(null,3,5,S,[["\n",r.a(hH(K+d))].join(""),X,W],null)],null),bI(Ea,K+d,xB.b?xB.b(e,1):xB(e,1))])):kI(a,pI(Ea,fa),K+d,K+d,xB.b?xB.b(e,1):
xB(e,1),fa):null,gc])):C.b(fa,Yl)?n(function(){var a=uB.a?uB.a(e):uB(e);return FB.a?FB.a(a):FB(a)}())?tH.g(E([Xb,function(){var a=d+1,b=sB.a?sB.a(e):sB(e);return IH.c?IH.c(Oa,a,b):IH(Oa,a,b)}(),new R(null,1,5,S,[new R(null,3,5,S,[["\n",r.a(hH(K+d))].join(""),X,W],null)],null),function(){var a=d+1,b=uB.a?uB.a(e):uB(e);return IH.c?IH.c(Oa,a,b):IH(Oa,a,b)}(),new R(null,1,5,S,[new R(null,3,5,S,[["\n",r.a(hH(K+d))].join(""),X,W],null)],null),cI(Ea,K+d,xB.b?xB.b(e,1):xB(e,1)),gc])):tH.g(E([Xb,function(){var a=
d+1,b=sB.a?sB.a(e):sB(e);return IH.c?IH.c(Oa,a,b):IH(Oa,a,b)}(),gI(a,C.b(I,2)?Ea:Oa,Sa,K+d,uB.a?uB.a(e):uB(e)),new R(null,1,5,S,[new R(null,3,5,S,[["\n",r.a(hH(K+d))].join(""),X,W],null)],null),cI(Ea,K+d,xB.b?xB.b(e,1):xB(e,1)),gc])):tH.g(E([Xb,function(){var a=M+d,b=sB.a?sB.a(e):sB(e);return IH.c?IH.c(Oa,a,b):IH(Oa,a,b)}(),n(n(Sa)?ff(fa,Fm):Sa)?kI(a,pI(Ea,fa),Sa,K+d+Nb,xB.b?xB.b(e,0):xB(e,0),fa):function(){var a=C.b(fa,Fm)?K+d:db+d+Nb;return tH.g(E([new R(null,1,5,S,[new R(null,3,5,S,[["\n",r.a(hH(a))].join(""),
X,W],null)],null),KH(pI(Ea,fa),a,xe(zB.b?zB.b(me,e):zB(me,e),1),Ol)]))}(),gc]))}function tI(a,b,c){return sI(pr,"(",AH(a),b,c)}function uI(a,b,c){return sI(pr,"#(",AH(a),b,c)}function vI(a){a=zB.b?zB.b(IB,a):zB(IB,a);return mb(function(){return function(a,c){return n(a)?a:c}}(a),null,a)}
function wI(a,b,c,d){b=null!=b&&(b.h&64||l===b.G)?P(Fh,b):b;a=w.b(b,a);a=null!=a&&(a.h&64||l===a.G)?P(Fh,a):a;a=w.b(a,Br);var e=w.b(b,Qn),f=w.b(b,tn);w.b(b,Gk);var g=D(d)-1;f=qH(f);var k=d,p=c,q=0;d=!1;for(var t=H;;){if($a(k))return t;var v=y(k);if(n(v)){var A=1<D(y(k));v=y(k);mH(b,"wrap-zmap:",c,v);n(mr.a(b))&&yi(E([Fn.a(b),"wrap-zmap: ind:",c,"this-seq:",v]));var z=xH(b,c,v),G=J(z,0,null);J(z,1,null);z=J(z,2,null);var F=zd(z)-c,I=function(){var a=F;return 0>a?0:a}(),M=C.b(qd(y(v),2),Hu),Q=C.b(q,
g)?e-f:e,U=function(){var a=!M;return a?(a=0===q)?a:(a=A?C.b(G,1):!0)?p+I<=Q:a:a}(),ea=C.b(qd(y(v),2),is)||C.b(qd(y(v),2),ss)?Q+1:A&&1<G&&$a(a)?Q:U?p+I+1:M?c:c+I+1;k=B(k);z=ea;var T=q+1,K=M;t=We.b(t,U?0!==q?tH.g(E([new R(null,1,5,S,[new R(null,3,5,S,[" ",X,tl],null)],null),v])):v:M?new R(null,1,5,S,[new R(null,3,5,S,[["\n",r.a(hH(ea-1))].join(""),X,W],null)],null):d?tH.g(E([new R(null,1,5,S,[new R(null,3,5,S,[" ",X,W],null)],null),v])):tH.g(E([new R(null,1,5,S,[new R(null,3,5,S,[["\n",r.a(hH(c))].join(""),
X,W],null)],null),v])));p=z;q=T;d=K}else return null}}function xI(a){return Sf(function(a){return C.b(qd(y(a),2),Hu)},a)}
function yI(a,b,c,d,e,f){var g=null!=d&&(d.h&64||l===d.G)?P(Fh,d):d;d=w.b(g,a);var k=null!=d&&(d.h&64||l===d.G)?P(Fh,d):d;w.b(k,Ak);w.b(k,Wq);d=w.b(k,Kr);var p=w.b(k,jt);w.b(k,Sn);w.b(k,Wu);w.b(k,Ij);w.b(g,tn);k=w.b(g,mj);if(n(n(d)?C.b(tt.a(g),1):d))return JH(g,e,f);d=new R(null,1,5,S,[new R(null,3,5,S,[b,EH(g,b),Wv],null)],null);c=ZH(g,e,f,c,null);var q=n(p)?function(){var a=tB.a?tB.a(f):tB(f);var b=pB.a?pB.a(a):pB(a);a=p.b?p.b(g,b):p(g,b);b=[":vector :option-fn-first called with ",r.a(b)].join("");
var c=uF(a,null);b=n(c)?["Options resulting from ",r.a(b)," had these errors: ",r.a(c)].join(""):null;if(!Nd(b))throw Error(b);return a}():null;q=YE(E([g,q]));var t=null!=q&&(q.h&64||l===q.G)?P(Fh,q):q;q=w.b(t,a);var v=null!=q&&(q.h&64||l===q.G)?P(Fh,q):q,A=w.b(v,Ak),z=w.b(v,Wq);w.b(v,Kr);w.b(v,jt);var G=w.b(v,Sn);q=w.b(v,Wu);v=w.b(v,Ij);G=n(G)?$a(q):G;var F=D(b)+e;n(mr.a(t))&&yi(E([Fn.a(t),xi(E(["fzprint-vec*:",Y.a?Y.a(f):Y(f),"new-ind:",F]))]));b=n(G)?AB.b?AB.b(me,f):AB(me,f):zB.b?zB.b(me,f):zB(me,
f);b=n(n(q)?n(k)?v:!0:q)?QH(a,t,me,b):b;b=0===(yB.a?yB.a(f):yB(f))?new R(null,1,5,S,[new R(null,1,5,S,[new R(null,3,5,S,["",X,tl],null)],null)],null):eI(t,F,b);n(mr.a(t))&&yi(E([Fn.a(t),xi(E(["fzprint-vec*: coll-print:",b]))]));var I=$a(sH(b))?b:null;b=n(I)?P(tH,Pf(new R(null,1,5,S,[new R(null,3,5,S,[" ",X,tl],null)],null),n(G)?I:xI(I))):null;mH(t,"fzprint-vec*:",F,b);e=xH(t,F,b);return n(e)?n(zH(t,e))?tH.g(E([d,b,c])):n(function(){var a=(a=$a(A))?vI(f):a;return n(a)?a:$a(z)}())?tH.g(E([d,P(tH,Pf(new R(null,
1,5,S,[new R(null,3,5,S,[["\n",r.a(hH(F))].join(""),X,W],null)],null),xI(I))),c])):tH.g(E([d,function(){n(mr.a(t))&&yi(E([Fn.a(t),"fzprint-vec*: wrap coll-print:",I]));return wI(a,t,F,I)}(),c])):null}function zI(a,b,c){return yI(To,"[","]",AH(a),b,c)}function AI(a,b,c){return yI(ip,"[","]",AH(a),b,c)}function BI(a,b,c){return yI(gu,"#{","}",AH(a),b,c)}
function CI(a,b){for(var c=new R(null,1,5,S,[new R(null,3,5,S,[", ",X,tl],null)],null),d=new R(null,1,5,S,[new R(null,3,5,S,[" ",X,tl],null)],null),e=b,f=oc(H),g=null;;){if(Nd(e))return qc(f);var k=B(e);f=n(g)?iH.g(E([f,c,y(e)])):0===D(f)?Xe.b(f,y(e)):iH.g(E([f,d,y(e)]));e=y(e);g=a.a?a.a(e):a(e);e=k}}
function DI(a,b,c,d,e,f,g){var k=null!=e&&(e.h&64||l===e.G)?P(Fh,e):e;e=w.b(k,Kj);w.b(k,gt);k=oc(H);for(var p=null,q=null;;){if(Nd(g))return P(tH,qc(k));var t=y(g),v=J(t,0,null);t=J(t,1,null);g=B(g);k=n(p)?iH.g(E([k,n(q)?b:a,t])):0===D(k)?Xe.b(k,t):iH.g(E([k,n(q)?d:c,t]));p=n(f)?f.a?f.a(t):f(t):null;q=v=n(e)?C.b(v,Fm):e}}
function $H(a,b,c){return DI(null,null,new R(null,1,5,S,[new R(null,3,5,S,[["\n",r.a(hH(b))].join(""),X,W],null)],null),new R(null,2,5,S,[new R(null,3,5,S,["\n",X,W],null),new R(null,3,5,S,[["\n",r.a(hH(b))].join(""),X,W],null)],null),a,null,c)}
function EI(a,b,c,d,e,f){var g=null!=d&&(d.h&64||l===d.G)?P(Fh,d):d,k=w.b(g,a),p=null!=k&&(k.h&64||l===k.G)?P(Fh,k):k,q=w.b(p,Nk),t=w.b(p,yo),v=w.b(p,fo),A=w.b(p,Kj),z=w.b(p,Jn),G=w.b(p,ys),F=w.b(p,iq),I=w.b(g,dt),M=w.b(g,zr),Q=w.b(g,Mp),U=w.b(g,mj),ea=Dd.c(g,Mp,Q+1);f=n(function(){var a=C.b(M,an);return a?n(t)?t:v:a}())?VH(a,ea,f):f;var T=WH(ea,qB.a?qB.a(f):qB(f)),K=J(T,0,null),ua=J(T,1,null),ca=n(n(G)?n(U)?F:!0:G)?gC.a?gC.a(ua):gC(ua):null,Ha=J(ca,0,null),fa=J(ca,1,null);b=n(Ha)?["#:",r.a(Ha),r.a(b)].join(""):
b;var Ua=n(fa)?fa:ua,Nb=n(K)?Ua:QH(a,ea,y,Ua),db=D(b),Sa=new R(null,1,5,S,[new R(null,3,5,S,[b,EH(ea,b),Wv],null)],null);c=ZH(ea,db+e,f,c,null);if(Nd(Nb))return tH.g(E([Sa,c]));var zb=n(mr.a(ea))?yi(E([Fn.a(ea),"fzprint-map*:",Y.a?Y.a(f):Y(f),"ind:",e,"comma?",q,"rightcnt:",tn.a(ea)])):null,ab=OH(a,n(I)?ea:Dd.c(ea,dt,!0),db+e,q,Nb),ub=n(ab)?Gf.b(yd,ab):null,qb=n(zH(ea,xH(ea,db+e,ub)))?ub:null,jb=n(qb)?P(tH,CI(sf(q),qb)):null,Ea=xH(ea,db+e,jb),Oa=n(zH(ea,Ea))?jb:null;return n(Oa)?tH.g(E([Sa,Oa,c])):
$a(I)?(a=OH(a,ea,db+e,q,Nb),tH.g(E([Sa,DI(new R(null,2,5,S,[new R(null,3,5,S,[",",X,tl],null),new R(null,3,5,S,[["\n",r.a(hH(e+1))].join(""),X,W],null)],null),new R(null,3,5,S,[new R(null,3,5,S,[",",X,tl],null),new R(null,3,5,S,[["\n",r.a(hH(e+1))].join(""),X,W],null),new R(null,3,5,S,[["\n",r.a(hH(e+1))].join(""),X,W],null)],null),new R(null,1,5,S,[new R(null,3,5,S,[["\n",r.a(hH(e+1))].join(""),X,W],null)],null),new R(null,2,5,S,[new R(null,3,5,S,[["\n",r.a(hH(e+1))].join(""),X,W],null),new R(null,
3,5,S,[["\n",r.a(hH(e+1))].join(""),X,W],null)],null),kv.a(ea),function(a,b,c,d,e,f,g,k,p,q,t,v,z,A,F,G,I,K,M,Q,T,U,ca,ea,fa,ua,Ea,Ha){return function(a){return n(Ha)?ff(qd(y(a),2),is)&&ff(qd(y(a),2),ss):Ha}}(a,zb,ab,ub,qb,jb,Ea,Oa,ea,f,T,K,ua,ca,Ha,fa,b,Ua,Nb,db,Sa,c,d,g,g,k,p,q,t,v,A,z,G,F,I,M,Q,U),a),c]))):null}function FI(a,b,c){var d=J(null,0,null),e=J(null,1,null);return n(d)?EI(kv,["#:",r.a(d),"{"].join(""),"}",AH(a),b,e):EI(kv,"{","}",AH(a),b,c)}
function GI(a,b,c,d){return yI(sv,"#object[","]",a,b,SB.b?SB.b(c,d):SB(c,d))}function HI(a,b,c){return yI(sv,"#object[","]",a,b,SB.a?SB.a(c):SB(c))}
function II(a,b,c){a=null!=a&&(a.h&64||l===a.G)?P(Fh,a):a;var d=w.b(a,wu);d=null!=d&&(d.h&64||l===d.G)?P(Fh,d):d;d=w.b(d,Cp);if(n(n(d)?gi(/^#object\[/,Y.a?Y.a(c):Y(c)):d))return GI(a,b,c,PB.a?PB.a(c):PB(c));d=D("#\x3c");var e=new R(null,1,5,S,[new R(null,3,5,S,["#\x3c",EH(a,"#\x3c"),Wv],null)],null),f=ZH(a,d+b,c,"\x3e",null),g=["Atom@",r.a(""+r.a(Oc(c)))].join(""),k=b+d+1+D(g);n(mr.a(a))&&yi(E([Fn.a(a),xi(E(["fzprint-atom: arg-1:",g,"zstring arg-1:",Y.a?Y.a(c):Y(c)]))]));return tH.g(E([e,new R(null,
1,5,S,[new R(null,3,5,S,[g,EH(a,X),vl],null)],null),gI(cm,AH(a),k,d+b,PB.a?PB.a(c):PB(c)),f]))}
function JI(a,b,c){if(n(WB.a?WB.a(c):WB(c)))var d=il;else if(n(VB.a?VB.a(c):VB(c)))d=hm;else if(n(XB.a?XB.a(c):XB(c)))d=ev;else if(n($B.a?$B.a(c):$B(c)))d=Ko;else throw Error("Not a future, promise, or delay:",Y.a?Y.a(c):Y(c));var e=d;if(n(function(){var b=Cp.a(a.a?a.a(e):a(e));return n(b)?gi(/^#object\[/,Y.a?Y.a(c):Y(c)):b}()))return C.b(e,Ko)||mc(c)?GI(a,b,c,PB.a?PB.a(c):PB(c)):HI(a,b,c);d=D("#\x3c");var f=new R(null,1,5,S,[new R(null,3,5,S,["#\x3c",EH(a,"#\x3c"),Wv],null)],null),g=ZH(a,d+b,c,"\x3e",
null),k=function(){var a=e instanceof O?e.$:null;switch(a){case "future":return"Future@";case "promise":return"Promise@";case "delay":return"Delay@";case "agent":return"Agent@";default:throw Error(["No matching clause: ",r.a(a)].join(""));}}();k=[r.a(k),r.a(""+r.a(Oc(c)))].join("");var p=b+d+1+D(k),q=C.b(e,Ko)?!0:mc(c),t=q?PB.a?PB.a(c):PB(c):function(){var a=e instanceof O?e.$:null;switch(a){case "future":return"pending";case "promise":return"not-delivered";case "delay":return"pending";default:throw Error(["No matching clause: ",
r.a(a)].join(""));}}();q=q?a:Dd.c(a,kt,!0);n(mr.a(q))&&yi(E([Fn.a(q),xi(E(["fzprint-fpda: arg-1:",k,"zstring arg-1:",Y.a?Y.a(c):Y(c)]))]));return tH.g(E([f,new R(null,1,5,S,[new R(null,3,5,S,[k,EH(q,X),vl],null)],null),gI(cm,AH(q),p,d+b,t),g]))}
function KI(a,b,c){a=null!=a&&(a.h&64||l===a.G)?P(Fh,a):a;var d=w.b(a,gq);d=null!=d&&(d.h&64||l===d.G)?P(Fh,d):d;d=w.b(d,Cp);if(n(n(d)?gi(/^#object\[/,Y.a?Y.a(c):Y(c)):d))return HI(a,b,c);d=D("#\x3c");var e=new R(null,1,5,S,[new R(null,3,5,S,["#\x3c",EH(a,Tk),Wv],null)],null),f=ZH(a,d+b,c,"\x3e",Tk),g=""+r.a(Oc(c)),k=b+d+1+D("Fn@")+D(g);xi(E([eb(c)]));var p=""+r.a(c.name);var q=gi(/^clojure/,p);q=n(q)?q:gi(/^cljs/,p);q=n(q)?EH(a,Tk):X;p=qw(p,/\$/);p=[r.a(P(r,Pf(".",Sh(p)))),"/",r.a(zd(p))].join("");
n(mr.a(a))&&yi(E([Fn.a(a),xi(E(["fzprint-fn-obj: arg-1:","Fn@",g,"zstring arg-1:",Y.a?Y.a(c):Y(c)]))]));return tH.g(E([e,new R(null,1,5,S,[new R(null,3,5,S,["Fn@",EH(a,Tk),vl],null)],null),new R(null,1,5,S,[new R(null,3,5,S,[g,EH(a,X),vl],null)],null),gI(cm,AH(Dd.g(a,kt,!0,E([Rr,q]))),k,d+b,p),f]))}
function LI(a,b,c){var d=D("#\x3c"),e=new R(null,1,5,S,[new R(null,3,5,S,["#\x3c",EH(a,"#\x3c"),Wv],null)],null),f=ZH(a,d+b,c,"\x3e",null),g=b+d+1+D("Namespace");n(mr.a(a))&&yi(E([Fn.a(a),xi(E(["fzprint-atom: arg-1:","Namespace","zstring arg-1:",Y.a?Y.a(c):Y(c)]))]));return tH.g(E([e,new R(null,1,5,S,[new R(null,3,5,S,["Namespace",EH(a,X),vl],null)],null),gI(cm,AH(a),g,d+b,c.name),f]))}
function MI(a,b,c){a=null!=a&&(a.h&64||l===a.G)?P(Fh,a):a;var d=w.b(a,hs),e=null!=d&&(d.h&64||l===d.G)?P(Fh,d):d;d=w.b(e,Rk);e=w.b(e,Qs);if(n(e))return c=c.toString(),IH.c?IH.c(a,b,c):IH(a,b,c);if($a(d))return c=Tf.b(jf,c),IH.c?IH.c(a,b,c):IH(a,b,c);d=D("#");e=new R(null,1,5,S,[new R(null,3,5,S,["#",EH(a,"#"),Wv],null)],null);var f=ZH(a,d+b,c,"",null),g=xi(E([eb(c)]));g=qw(g,/\./);g=P(r,Ad.g(Tf.b(H,Pf(".",Sh(g))),"/",E([zd(g)])));var k=b+d+1+D(g);n(mr.a(a))&&yi(E([Fn.a(a),xi(E(["fzprint-record: arg-1:",
g,"zstring zloc:",Y.a?Y.a(c):Y(c)]))]));return tH.g(E([e,new R(null,1,5,S,[new R(null,3,5,S,[g,EH(a,X),vl],null)],null),gI(hs,a,k,d+b,Tf.b(jf,c)),f]))}function NI(a,b,c){var d=new R(null,1,5,S,[new R(null,3,5,S,["^",EH(a,"^"),Wv],null)],null),e=ZH(a,b,c,"",null);n(mr.a(a))&&yi(E([Fn.a(a),xi(E(["fzprint-meta: zloc:",Y.a?Y.a(c):Y(c)]))]));return tH.g(E([d,fI(a,df(rg,D("^")+b,Lf((yB.a?yB.a(c):yB(c))-1,b)),zB.b?zB.b(me,c):zB(me,c)),e]))}
function OI(a,b,c){var d=function(){var a=sB.a?sB.a(c):sB(c);return Y.a?Y.a(a):Y(a)}(),e=C.b(D(d),2)&&C.b(d.substring(1,2),"@"),f=C.b(d.substring(0,1),"?"),g=C.b(d.substring(0,1),":"),k=C.b(function(){var a=uB.a?uB.a(c):uB(c);return LB.a?LB.a(a):LB(a)}(),fs)||e;d=f&&k?"#?@":n(function(){if(f){var a=uB.a?uB.a(c):uB(c);return IB.a?IB.a(a):IB(a)}return f}())?"#?":f?function(){throw Error(["Unknown reader macro: '",r.a(Y.a?Y.a(c):Y(c)),"' zfirst zloc: ",r.a(function(){var a=sB.a?sB.a(c):sB(c);return Y.a?
Y.a(a):Y(a)}())].join(""));}():g?["#",r.a(d)].join(""):"#";var p=D(d),q=new R(null,1,5,S,[new R(null,3,5,S,[d,EH(a,d),Wv],null)],null),t=ZH(a,p+b,c,"",null);e=k&&!e?function(){var a=uB.a?uB.a(c):uB(c);return sB.a?sB.a(a):sB(a)}():uB.a?uB.a(c):uB(c);n(mr.a(a))&&yi(E([Fn.a(a),xi(E(["fzprint-reader-macro: zloc:",Y.a?Y.a(c):Y(c),"floc:",Y.a?Y.a(e):Y(e),"l-str:",d]))]));return tH.g(E([q,new R(null,1,5,S,[new R(null,3,5,S,["",X,vl],null)],null),f?EI(yv,"(",")",AH(a),p+b,e):fI(a,p+b,function(){var a=zB.b?
zB.b(me,c):zB(me,c);return g?B(a):a}()),t]))}function PI(a,b,c,d){var e=D(d);d=new R(null,1,5,S,[new R(null,3,5,S,[d,EH(a,d),Wv],null)],null);var f=ZH(a,e+b,c,"",Zs),g=sB.a?sB.a(c):sB(c);n(mr.a(a))&&yi(E([Fn.a(a),xi(E(["fzprint-prefix*: zloc:",Y.a?Y.a(c):Y(c),"floc:",Y.a?Y.a(g):Y(g)]))]));return tH.g(E([d,function(){var c=e+b;return IH.c?IH.c(a,c,g):IH(a,c,g)}(),f]))}var QI=new m(null,7,[sr,"'",uq,"`",zm,"~",hl,"~@",fs,"@",qr,"#'",Xn,"#_"],null);
function RI(a,b){return C.b(b,Xn)?Dd.c(a,mo,mo.a(Xn.a(a))):C.b(b,uq)?Xf(a,new R(null,2,5,S,[mo,$p],null),Vr.a(mo.a(a))):a}
function IH(a,b,c){var d=null!=a&&(a.h&64||l===a.G)?P(Fh,a):a,e=w.b(d,Ut);a=w.b(d,ku);var f=w.b(d,vu),g=w.b(d,Qu),k=w.b(d,mj),p=w.b(d,cl),q=w.b(d,cn),t=w.b(d,tn),v=w.b(d,Qn),A=w.b(d,Uo),z=w.b(d,aq),G=w.b(d,mr),F=w.b(d,Rr),I=w.b(d,Wr),M=w.b(d,ds),Q=w.b(d,dt),U=w.b(d,tt),ea=w.b(d,kt);d=Dd.c(d,tt,U+1);z=n(n(G)?G:z)?Dd.c(d,Fn,[r.a(w.c(d,Fn,"")),r.a(n(Q)?"o":n(q)?"h":".")].join("")):d;n(mr.a(z))&&yi(E([Fn.a(z),"fzprint* **** rightcnt:",t,xi(E([Y.a?Y.a(c):Y(c)]))]));d=Tb(lH);G=n(G)?C.b(d,yd(DB.a?DB.a(c):
DB(c))):G;var T=n(G)?Dd.c(z,ek,yt):z;n(G)&&yi(E(["fzprint dbg-data:",d]));if(n(function(){var a=U>e;return a?IB.a?IB.a(c):IB(c):a}()))return C.b(c,bC.w?bC.w():bC())?new R(null,1,5,S,[new R(null,3,5,S,["...",EH(T,X),vl],null)],null):new R(null,1,5,S,[new R(null,3,5,S,["##",EH(T,tr),vl],null)],null);if(n(n(q)?$a(k)&&(U-q>M||$a(Q)&&(yB.a?yB.a(c):yB(c))>g&&U>p):q))return null;if(n(QB.a?QB.a(c):QB(c)))return MI(T,b,c);if(n(EB.a?EB.a(c):EB(c)))return tI(T,b,c);if(n(FB.a?FB.a(c):FB(c)))return zI(T,b,c);
if(n(GB.a?GB.a(c):GB(c)))return FI(T,b,c);if(n(HB.a?HB.a(c):HB(c)))return BI(T,b,c);if(n(BB.a?BB.a(c):BB(c)))return uI(T,b,c);if(n(CB.a?CB.a(c):CB(c)))return KI(T,b,c);if(n(NB.a?NB.a(c):NB(c)))return n(Cp.a(ip.a(T)))?HI(T,b,c):AI(T,b,TB.a?TB.a(c):TB(c));if(n(OB.a?OB.a(c):OB(c)))return II(T,b,c);if(n(KB.a?KB.a(c):KB(c)))return NI(T,b,c);if(n(function(){var a=LB.a?LB.a(c):LB(c);return QI.a?QI.a(a):QI(a)}()))return PI(RI(T,LB.a?LB.a(c):LB(c)),b,c,function(){var a=LB.a?LB.a(c):LB(c);return QI.a?QI.a(a):
QI(a)}());if(n(RB.a?RB.a(c):RB(c)))return LI(T,b,c);if(n(function(){var a=VB.a?VB.a(c):VB(c);if(n(a))return a;a=WB.a?WB.a(c):WB(c);if(n(a))return a;a=XB.a?XB.a(c):XB(c);return n(a)?a:$B.a?$B.a(c):$B(c)}()))return JI(T,b,c);if(n(aC.a?aC.a(c):aC(c)))return OI(T,b,c);if(C.b(LB.a?LB.a(c):LB(c),Hu)&&0<U)return new R(null,1,5,S,[new R(null,3,5,S,["\n",X,Hu],null)],null);g=Y.a?Y.a(c):Y(c);var K=n(q)?D(g)+b+(n(t)?t:0)>v:q;return n(oB.a?oB.a(c):oB(c))?(b=0===U&&$a(I)?g:nw(g,"\n"),a=n(Iq.a(is.a(T)))?hC.a?hC.a(c):
hC(c):null,n(function(){var a=hq.a(is.a(T));return n(a)?K:a}())?(n(mr.a(T))&&yi(E([Fn.a(T),"fzprint*: overflow comment \x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d"])),null):n(a)?new R(null,1,5,S,[new R(null,4,5,S,[b,EH(T,is),ss,a],null)],null):new R(null,1,5,S,[new R(null,3,5,S,[b,EH(T,is),is],null)],null)):n(UB.a?UB.a(c):UB(c))?new R(null,1,5,S,[new R(null,3,5,S,[g,X,tl],null)],null):n(K)?(n(mr.a(T))&&yi(E([Fn.a(T),"fzprint*: overflow \x3c\x3c\x3c\x3c\x3c\x3c\x3c\x3c\x3c\x3c"])),null):n(YB.a?YB.a(c):YB(c))?
new R(null,1,5,S,[new R(null,3,5,S,[g,EH(T,tr),vl],null)],null):"string"===typeof(pB.a?pB.a(c):pB(c))?new R(null,1,5,S,[new R(null,3,5,S,[n(ea)?""+r.a(pB.a?pB.a(c):pB(c)):Y.a?Y.a(c):Y(c),n(F)?F:EH(T,Po),vl],null)],null):n(nH(a,pB.a?pB.a(c):pB(c)))?new R(null,1,5,S,[new R(null,3,5,S,[g,EH(T,Tk),vl],null)],null):n(oH(T,pB.a?pB.a(c):pB(c)))?new R(null,1,5,S,[new R(null,3,5,S,[g,EH(T,qn),vl],null)],null):"number"===typeof(pB.a?pB.a(c):pB(c))?new R(null,1,5,S,[new R(null,3,5,S,[n(A)?nB.c?nB.c(c,A,f):nB(c,
A,f):g,EH(T,Rl),vl],null)],null):null==(pB.a?pB.a(c):pB(c))?new R(null,1,5,S,[new R(null,3,5,S,[g,EH(T,Zr),vl],null)],null):new R(null,1,5,S,[new R(null,3,5,S,[g,EH(T,X),vl],null)],null)}function SI(a,b){var c=function(){var c=D(a)-1;return c<b?c:b}(),d=De(Hf.b(c+1,a));c-=D(Vh(function(){return function(a){return ff(a," ")}}(c,d),d));return 0>c?null:c}
function TI(a,b){var c=b+1;if(c<D(a)){var d=Vh(function(){return function(a){return ff(a," ")}}(c),If(c,x(a)));c+=D(d);return c>=D(a)?null:c}return null}
function UI(a,b,c){var d=J(b,0,null),e=J(b,1,null),f=J(b,2,null);if(C.b(f,is)){var g=a-c;a=gi(/;*/,d);var k=ye(d,D(a));b=gi(/ */,k);k=ye(k,D(b));d=gi(/\n$/,d);var p=g-D(a)-D(b),q=k;for(g=oc(H);;){if(Nd(q))return 0===D(g)?n(d)?new R(null,2,5,S,[new R(null,3,5,S,[a,e,f],null),new R(null,3,5,S,["\n",X,W],null)],null):new R(null,1,5,S,[new R(null,3,5,S,[a,e,f],null)],null):qc(n(d)?Xe.b(g,new R(null,3,5,S,["\n",X,W],null)):g);var t=D(q)<=p?D(q)-1:0>=p?function(){var a=TI(q,0);return n(a)?a:D(q)-1}():function(){var a=
SI(q,p);if(n(a))return a;a=TI(q,p);return n(a)?a:D(q)-1}();k=q.substring(0,t+1).replace(/[\s\xa0]+$/,"");t=q.substring(t+1);g=0===D(g)?Xe.b(g,new R(null,3,5,S,[[r.a(a),r.a(b),r.a(k)].join(""),e,f],null)):Xe.b(Xe.b(g,new R(null,3,5,S,[["\n",r.a(hH(c))].join(""),X,W],null)),new R(null,3,5,S,[[r.a(a),r.a(b),r.a(k)].join(""),e,sj],null));q=t}}else return b}function VI(a,b){var c=J(b,0,null),d=qw(c,/\n/);return C.b(D(d),1)?a+D(c):D(zd(d))}
function WI(a,b){if("string"===typeof y(b))return Ad.b(a,b);for(var c=b,d=a;;){if($a(c))return d;var e=B(c);d=Ad.b(d,y(c));c=e}}function XI(a,b){var c=null!=a&&(a.h&64||l===a.G)?P(Fh,a):a,d=w.b(c,Qn),e=Sh(ci(VI,0,b));n(mr.a(c))&&yi(E([Fn.a(c),"fzprint-wrap-comments: style-vec:",xi(E([b]))]));n(mr.a(c))&&yi(E([Fn.a(c),"fzprint-wrap-comments: start-col:",e]));d=Tf.b(H,Gf.c(uf(UI,d),b,e));n(mr.a(c))&&yi(E([Fn.a(c),"fzprint-wrap-comments: wrap:",xi(E([b]))]));return mb(WI,H,d)}
function YI(a,b){var c=null!=a&&(a.h&64||l===a.G)?P(Fh,a):a;w.b(c,Qn);c=b;for(var d=H;;){if($a(c))return d;var e=y(c),f=J(e,0,null),g=J(e,1,null),k=J(e,2,null),p=yd(c);J(p,0,null);J(p,1,null);var q=J(p,2,null);p=J(p,3,null);f=C.b(k,W)&&C.b(q,ss)?new R(null,3,5,S,[hH(p),g,tl],null):C.b(k,ss)?new R(null,3,5,S,[f,g,is],null):e;c=B(c);d=Ad.b(d,f)}}
function ZI(a,b,c){var d=(d=C.b(zr.a(a),Wl))?jn.a(rq.a(a)):d;if($a(d))d=c;else{var e=jn.a(rq.a(a));d=eH(c);n(d)?(c=hB(['"',r.a(""+r.a(qG.a?qG.a(d):qG(d))),r.a(e),'"'].join("")),c=oG.a?oG.a(c):oG(c),c=ZF.a?ZF.a(c):ZF(c),d=fG.b?fG.b(d,c):fG(d,c),d=cG.a?cG.a(d):cG(d),d=oG.a?oG.a(d):oG(d)):d=c}return IH(Dd.g(a,tt,0,E([Mp,0])),b,d)}
var $I=function $I(a){switch(arguments.length){case 2:return $I.b(arguments[0],arguments[1]);case 1:return $I.a(arguments[0]);default:throw Error(["Invalid arity: ",r.a(arguments.length)].join(""));}};$I.b=function(a,b){var c=r,d;a:{var e=x(b),f=0;for(d=oc(H);;){if(Nd(e)){d=qc(d);break a}var g=y(e),k=C.b(g,"\t")?a-(f%a+a)%a:null;e=Vc(e);if(C.b(g,"\n"))f=0;else{var p=k;f+=re(n(p)?p:1)}d=n(k)?df(iH,d,x(hH(k))):Xe.b(d,g)}}return P(c,d)};$I.a=function(a){return $I.b(8,a)};$I.H=2;function aJ(a,b){rF(a,b)}function bJ(a,b){if("string"===typeof b){var c=n(rn.a(Ju.a(a)))?$I.b(yp.a(Ju.a(a)),b):b;c=hB(ka(c));return n(c)?oG.a?oG.a(c):oG(c):null}if(Od(b)){if(c=Od(b))c=xi(E([eb(y(b))])),c=16<D(c)&&C.b("rewrite_clj.node",ze(c,16));c=c?b:null;c=n(c)?c:Nt.a(y(b))}else c=null;return n(c)?b:null}
function cJ(a,b){if(n(Iv.a(b)))var c=new R(null,2,5,S,[a,b],null);else if(n(ws.a(b)))if("string"===typeof a)c=new R(null,2,5,S,[bJ(b,a),b],null);else throw Error("Collection is not a string yet :parse-string? specified!");else c=n(Ej.a(ct.a(Jo.a(b))))?function(){var c=SG(a),d=J(c,0,null);c=J(c,1,null);return new R(null,2,5,S,[d,Xf(b,new R(null,3,5,S,[Jo,ct,rj],null),c)],null)}():new R(null,2,5,S,[null,b],null);var d=J(c,0,null),e=J(c,1,null);c=n(d)?Wl:an;d=n(d)?d:a;if(null==d)return new R(null,2,
5,S,[new R(null,1,5,S,[new R(null,3,5,S,["nil",EH(e,Zr),vl],null)],null),e],null);if(n(bu.a(e)))return new R(null,2,5,S,[new R(null,1,5,S,[new R(null,2,5,S,["",X],null)],null),e],null);var f=Dd.c(e,zr,c);d=wf(ZI,f,n(function(){var a=cq.a(f);return n(a)?C.b(Gq.a(ms.a(f)),Ev):a}())?function(){var a=W.a(f);return n(a)?a:0}():0,d);return new R(null,2,5,S,[C.b(c,Wl)?gH(d):rD(d),f],null)}
function dJ(a,b){var c=J(b,0,null),d=J(b,1,null);if(C.b(c,Am))return new R(null,2,5,S,[Am,SE],null);var e=n(function(){var a=new V(null,new m(null,4,[Zj,null,Rm,null,xn,null,Zt,null],null),null);return a.a?a.a(c):a(c)}())?new R(null,2,5,S,[null,c],null):new R(null,2,5,S,[c,null],null),f=J(e,0,null);e=J(e,1,null);n(bn.a(lF()))||pF(Ct.a(lF()));var g="number"===typeof f?f:null;d=n(n(g)?L(d):g)?d:L(f)?f:null;var k=YE(E([a,d,n(g)?new m(null,1,[Qn,g],null):jf]));d=n(function(){var a=$a(g);return a?Ds.b(k,
Ds.a(lF())):a}())?function(){var a=n(null)?null.w?null.w():null():null;return"number"===typeof a?new m(null,1,[Qn,a],null):null}():null;d=n(d)?YE(E([k,d])):k;return new R(null,2,5,S,[e,d],null)}
function eJ(a){var b=n(bn.a(lF()))?null:pF(Ct.a(lF())),c=uF(a,null);b=[r.a(n(b)?["Global configuration errors: ",r.a(b)].join(""):null),r.a(n(c)?["Option errors in this call: ",r.a(c)].join(""):null)].join("");if(Nd(b)){b=cF(null,null,lF(),a);c=J(b,0,null);a=J(b,1,null);J(b,2,null);c=xF(null,null,c,a);b=J(c,0,null);J(c,1,null);c=J(c,2,null);c=n(c)?["Option errors in this call: ",r.a(c)].join(""):null;if(Nd(c))a=jF(YE(E([b,a])));else throw Error(c);return a}throw Error(b);}
function fJ(a,b,c){if(n(b))switch(b instanceof O?b.$:null){case "explain":return cJ(Dd.c($E(Tb(VE),QE),pu,PE()),SE);case "explain-justified":return cJ(Dd.c($E(Tb(VE),QE),pu,PE()),YE(E([SE,new m(null,1,[kv,new m(null,1,[Xk,!0],null)],null)])));case "support":return cJ(mF(),SE);case "help":return yi(E([EF]));default:return yi(E([["Unknown keyword option: ",r.a(b)].join("")]))}else return b=bo.a(c),n(b)&&zv.a(rq.a(c)),cJ(a,c)}
function gJ(a){return Dd.c(Fd.b(null==cs.a(ms.a(a))?Xf(a,new R(null,2,5,S,[ms,cs],null),!0):a,Ep),Wr,!0)}var hJ=function hJ(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return hJ.g(arguments[0],arguments[1],2<c.length?new Uc(c.slice(2),0,null):null)};
hJ.g=function(a,b,c){c=dJ(a,c);a=J(c,0,null);c=J(c,1,null);if(n(Ep.a(c))){if("string"===typeof b)return a=gJ(c),c=function(){var a=iB(b);return oG.a?oG.a(a):oG(a)}(),iJ.A?iJ.A(a,hJ,":parse-string-all? call",c):iJ(a,hJ,":parse-string-all? call",c);throw Error(":parse-string-all? requires a string!");}c=eJ(c);a=fJ(b,a,c);var d=J(a,0,null),e=J(a,1,null);a=function(){var a=rj.a(ct.a(Jo.a(e)));return n(a)?JF(d,a):null}();c=YF(e,d,a);var f=n(Iq.a(is.a(e)))?YI(e,d):d;f=QF(new m(null,2,[Us,KF,Bs,Bs.a(Jo.a(e))],
null),f,a,c);f=n(Wq.a(is.a(e)))?XI(e,f):f;f=RF(f);a=n(n(c)?c:n(a)?a:uo.a(e))?P(r,Uf(SF,f)):P(r,Uf(y,f));return n(Cv.a(e))?d:a};hJ.H=2;hJ.I=function(a){var b=y(a),c=B(a);a=y(c);c=B(c);return hJ.g(b,a,c)};
function jJ(a,b){var c=qw(b,/^;!zprint /);c=yd(c);if(n(c))try{return new R(null,2,5,S,[TC(c),null],null)}catch(e){var d=e;return new R(null,2,5,S,[null,["Unable to create zprint options map from: '",r.a(c),"' found in !zprint directive number: ",r.a(a)," because: ",r.a(d)].join("")],null)}else return null}function kJ(a){var b=D(a);return 0===b?null:Nd(nw(a," "))?b:null}
function lJ(a,b,c,d,e){var f=J(d,0,null);J(d,1,null);var g=J(d,2,null);d=J(d,3,null);var k=DG(e),p=hG.a?hG.a(e):hG(e),q=n(function(){if(n(k)){var b=0===g;return b?lt.a(a):b}return k}())?jJ(d+1,sG.a?sG.a(e):sG(e)):null,t=J(q,0,null);q=J(q,1,null);var v=0===g?f:Dd.c(f,W,g);f=n(n(k)?k:Nd(v))?a:YE(E([a,v]));var A=YE(E([lF(),f])),z=n(p)?n(cs.a(ms.a(A)))?0:kJ(sG.a?sG.a(e):sG(e)):null,G=!$a(function(){if(n(z)){var a=!C.b(Rv,jk.a(v));return a?(a=cs.a(ms.a(A)),n(a)?a:C.b(Gq.a(ms.a(A)),On)):a}return z}());
f=YE(E([f,n(t)?new m(null,4,[is,new m(null,1,[Wq,!1],null),Iv,!0,cq,!0,bu,G],null):new m(null,3,[Iv,!0,cq,!0,bu,G],null)]));b=C.b(bs,jk.a(A))||$a(n(k)?k:p)&&C.b(Rv,jk.a(f))?sG.a?sG.a(e):sG(e):b.b?b.b(f,e):b(f,e);e=C.b(Rv,jk.a(t))||C.b(gr,jk.a(t));n(n(t)?!e:t)&&aJ(t,[";!zprint number ",r.a(d+1)," in ",r.a(c)].join(""));n(q)&&yi(E(["Warning: ",q]));return new R(null,4,5,S,[e?YE(E([v,t])):n(n(k)?k:p)?v:jf,b,n(z)?z:0,n(t)?d+1:d],null)}
function iJ(a,b,c,d){var e=cs.a(ms.a(a));e=n(e)?e:cs.a(ms.a(lF()));if(null==e||!1===e)e=null;else if("string"!==typeof e){if(!0!==e)throw Error(["Unsupported {:parse {:interpose value}}: ",r.a(e)].join(""));e="\n"}var f=ci;a=wf(lJ,a,b,c);b=new R(null,4,5,S,[jf,"",0,0],null);a:{d=aG.a?aG.a(d):aG(d);for(var g=H;;){if($a(d))break a;c=dG.a?dG.a(d):dG(d);g=Ad.b(g,me.a?me.a(d):d);d=c}}d=f(a,b,g);d=Gf.b(yd,d);return n(e)?P(r,Pf(e,Sf(Nd,d))):P(r,d)};var mJ=mh([Ll,Ml,Cm,Mo,Hq,pr,hs,kv,yv],[new m(null,1,[nu,!1],null),new m(null,1,[nu,!1],null),new m(null,1,[nu,!1],null),!1,new m(null,1,[nu,!1],null),new m(null,1,[nu,!1],null),new m(null,1,[nu,!1],null),new m(null,1,[nu,!1],null),new m(null,1,[nu,!1],null)]),nJ=function nJ(a){switch(arguments.length){case 2:return nJ.b(arguments[0],arguments[1]);case 3:return nJ.c(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",r.a(arguments.length)].join(""));}},oJ=["zprint_clj",
"core","format"],pJ=aa;oJ[0]in pJ||!pJ.execScript||pJ.execScript("var "+oJ[0]);for(var qJ;oJ.length&&(qJ=oJ.shift());){var rJ;if(rJ=!oJ.length)rJ=void 0!==nJ;rJ?pJ[qJ]=nJ:pJ=pJ[qJ]&&pJ[qJ]!==Object.prototype[qJ]?pJ[qJ]:pJ[qJ]={}}nJ.b=function(a,b){return nJ.c(a,b,{isHangEnabled:!0})};
nJ.c=function(a,b,c){a:{c=!1===sa(c,"isHangEnabled")?mJ:jf;var d=lF(),e=mF();n(c)&&rF(c,"zprint-file-str input");try{var f=qw(a,/\n/),g=n(rn.a(Ju.a(lF())))?Gf.b(uf($I,yp.a(Ju.a(lF()))),f):f,k=ow(g),p=C.b(zd(a),"\n")?[r.a(k),"\n"].join(""):k,q=iB(p);var t=oG.a?oG.a(q):oG(q);var v=iJ(new m(null,2,[lt,!0,uo,!1],null),hJ,b,t);break a}finally{kF(d,e)}v=void 0}return v};nJ.H=3;
},{}],"../node_modules/zprint-clj/js-src/index.js":[function(require,module,exports) {
const zp = require('../out/main').zprint_clj.core;

module.exports = zp.format;

},{"../out/main":"../node_modules/zprint-clj/out/main.js"}],"code-generators.js":[function(require,module,exports) {
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var REGEX_FLAGS = new Set(["i", "m", "u"]);

var regexFlags = function regexFlags(s) {
  var flags = Array.from(s).filter(function (f) {
    return REGEX_FLAGS.has(f);
  }).join("");
  return flags === "" ? "" : "(?".concat(flags, ")");
}; // ===================


var program = function program(next, node) {
  return node.children.map(next).join("");
};

var symbol = function symbol(next, node) {
  return node.name;
};

var list = function list(next, node) {
  return "(".concat(node.children.map(next).join(" "), ")\n\n");
};

var vector = function vector(next, node) {
  return "[".concat(node.children.map(next).join(" "), "]");
};

var keyword = function keyword(next, node) {
  return ":".concat(node.value);
};

var tagged = function tagged(next, node) {
  return "".concat(node.tag, " ").concat(generate(node.expr));
}; // =======================================


var HashMap = function HashMap(next, node) {
  return "{".concat(node.children.map(next).join(" "), "}");
};

var MapEntry = function MapEntry(next, node) {
  var _node$children = _slicedToArray(node.children, 2),
      key = _node$children[0],
      value = _node$children[1];

  return "".concat(next(key), " ").concat(next(value));
}; // ==========================================


var NumericLiteral = function NumericLiteral(next, node) {
  return node.value;
};

var StringLiteral = function StringLiteral(next, node) {
  return JSON.stringify(node.value);
};

var BooleanLiteral = function BooleanLiteral(next, node) {
  return node.value;
};

var EmptyStatement = function EmptyStatement(next, node) {
  return undefined;
};

var BreakStatement = function BreakStatement(next, node) {
  return undefined;
};

var ObjectProperty = function ObjectProperty(next, node) {
  var _node$children2 = _slicedToArray(node.children, 2),
      key = _node$children2[0],
      value = _node$children2[1];

  var nextKey = key.type === "StringLiteral" ? JSON.parse(next(key)) : next(key);
  return ":".concat(nextKey, " ").concat(next(value));
};

var ObjectExpression = function ObjectExpression(next, node) {
  return "#js {".concat(node.children.map(next).join(" "), "}");
};

var ArrayExpression = function ArrayExpression(next, node) {
  return "#js [".concat(node.children.map(next).join(" "), "]");
};

var RegExpLiteral = function RegExpLiteral(next, node) {
  return "#\"".concat(regexFlags(node.flags)).concat(node.pattern, "\"");
};

module.exports = {
  program: program,
  symbol: symbol,
  list: list,
  vector: vector,
  keyword: keyword,
  tagged: tagged,
  HashMap: HashMap,
  MapEntry: MapEntry,
  NumericLiteral: NumericLiteral,
  StringLiteral: StringLiteral,
  BooleanLiteral: BooleanLiteral,
  EmptyStatement: EmptyStatement,
  BreakStatement: BreakStatement,
  ObjectProperty: ObjectProperty,
  ObjectExpression: ObjectExpression,
  ArrayExpression: ArrayExpression,
  RegExpLiteral: RegExpLiteral
};
},{}],"cljs-gen.js":[function(require,module,exports) {
var codegen = require("./code-generators");

function generate(node) {
  if (codegen.hasOwnProperty(node.type)) {
    return codegen[node.type](generate, node);
  }

  console.info(node);
  throw new Error("".concat(node.type, " is not implemented"));
}

module.exports = generate;
},{"./code-generators":"code-generators.js"}],"../node_modules/core-js/library/modules/_global.js":[function(require,module,exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef

},{}],"../node_modules/core-js/library/modules/_has.js":[function(require,module,exports) {
var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};

},{}],"../node_modules/core-js/library/modules/_fails.js":[function(require,module,exports) {
module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};

},{}],"../node_modules/core-js/library/modules/_descriptors.js":[function(require,module,exports) {
// Thank's IE8 for his funny defineProperty
module.exports = !require('./_fails')(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});

},{"./_fails":"../node_modules/core-js/library/modules/_fails.js"}],"../node_modules/core-js/library/modules/_core.js":[function(require,module,exports) {
var core = module.exports = { version: '2.6.9' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef

},{}],"../node_modules/core-js/library/modules/_a-function.js":[function(require,module,exports) {
module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};

},{}],"../node_modules/core-js/library/modules/_ctx.js":[function(require,module,exports) {
// optional / simple context binding
var aFunction = require('./_a-function');
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};

},{"./_a-function":"../node_modules/core-js/library/modules/_a-function.js"}],"../node_modules/core-js/library/modules/_is-object.js":[function(require,module,exports) {
module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};

},{}],"../node_modules/core-js/library/modules/_an-object.js":[function(require,module,exports) {
var isObject = require('./_is-object');
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};

},{"./_is-object":"../node_modules/core-js/library/modules/_is-object.js"}],"../node_modules/core-js/library/modules/_dom-create.js":[function(require,module,exports) {
var isObject = require('./_is-object');
var document = require('./_global').document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};

},{"./_is-object":"../node_modules/core-js/library/modules/_is-object.js","./_global":"../node_modules/core-js/library/modules/_global.js"}],"../node_modules/core-js/library/modules/_ie8-dom-define.js":[function(require,module,exports) {
module.exports = !require('./_descriptors') && !require('./_fails')(function () {
  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;
});

},{"./_descriptors":"../node_modules/core-js/library/modules/_descriptors.js","./_fails":"../node_modules/core-js/library/modules/_fails.js","./_dom-create":"../node_modules/core-js/library/modules/_dom-create.js"}],"../node_modules/core-js/library/modules/_to-primitive.js":[function(require,module,exports) {
// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = require('./_is-object');
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};

},{"./_is-object":"../node_modules/core-js/library/modules/_is-object.js"}],"../node_modules/core-js/library/modules/_object-dp.js":[function(require,module,exports) {
var anObject = require('./_an-object');
var IE8_DOM_DEFINE = require('./_ie8-dom-define');
var toPrimitive = require('./_to-primitive');
var dP = Object.defineProperty;

exports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};

},{"./_an-object":"../node_modules/core-js/library/modules/_an-object.js","./_ie8-dom-define":"../node_modules/core-js/library/modules/_ie8-dom-define.js","./_to-primitive":"../node_modules/core-js/library/modules/_to-primitive.js","./_descriptors":"../node_modules/core-js/library/modules/_descriptors.js"}],"../node_modules/core-js/library/modules/_property-desc.js":[function(require,module,exports) {
module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};

},{}],"../node_modules/core-js/library/modules/_hide.js":[function(require,module,exports) {
var dP = require('./_object-dp');
var createDesc = require('./_property-desc');
module.exports = require('./_descriptors') ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};

},{"./_object-dp":"../node_modules/core-js/library/modules/_object-dp.js","./_property-desc":"../node_modules/core-js/library/modules/_property-desc.js","./_descriptors":"../node_modules/core-js/library/modules/_descriptors.js"}],"../node_modules/core-js/library/modules/_export.js":[function(require,module,exports) {

var global = require('./_global');
var core = require('./_core');
var ctx = require('./_ctx');
var hide = require('./_hide');
var has = require('./_has');
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var IS_WRAP = type & $export.W;
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE];
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
  var key, own, out;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    if (own && has(exports, key)) continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? ctx(out, global)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function (C) {
      var F = function (a, b, c) {
        if (this instanceof C) {
          switch (arguments.length) {
            case 0: return new C();
            case 1: return new C(a);
            case 2: return new C(a, b);
          } return new C(a, b, c);
        } return C.apply(this, arguments);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
    if (IS_PROTO) {
      (exports.virtual || (exports.virtual = {}))[key] = out;
      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
    }
  }
};
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;

},{"./_global":"../node_modules/core-js/library/modules/_global.js","./_core":"../node_modules/core-js/library/modules/_core.js","./_ctx":"../node_modules/core-js/library/modules/_ctx.js","./_hide":"../node_modules/core-js/library/modules/_hide.js","./_has":"../node_modules/core-js/library/modules/_has.js"}],"../node_modules/core-js/library/modules/_redefine.js":[function(require,module,exports) {
module.exports = require('./_hide');

},{"./_hide":"../node_modules/core-js/library/modules/_hide.js"}],"../node_modules/core-js/library/modules/_uid.js":[function(require,module,exports) {
var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};

},{}],"../node_modules/core-js/library/modules/_meta.js":[function(require,module,exports) {
var META = require('./_uid')('meta');
var isObject = require('./_is-object');
var has = require('./_has');
var setDesc = require('./_object-dp').f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !require('./_fails')(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function (it, create) {
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};

},{"./_uid":"../node_modules/core-js/library/modules/_uid.js","./_is-object":"../node_modules/core-js/library/modules/_is-object.js","./_has":"../node_modules/core-js/library/modules/_has.js","./_object-dp":"../node_modules/core-js/library/modules/_object-dp.js","./_fails":"../node_modules/core-js/library/modules/_fails.js"}],"../node_modules/core-js/library/modules/_library.js":[function(require,module,exports) {
module.exports = true;

},{}],"../node_modules/core-js/library/modules/_shared.js":[function(require,module,exports) {

var core = require('./_core');
var global = require('./_global');
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: require('./_library') ? 'pure' : 'global',
  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
});

},{"./_core":"../node_modules/core-js/library/modules/_core.js","./_global":"../node_modules/core-js/library/modules/_global.js","./_library":"../node_modules/core-js/library/modules/_library.js"}],"../node_modules/core-js/library/modules/_wks.js":[function(require,module,exports) {
var store = require('./_shared')('wks');
var uid = require('./_uid');
var Symbol = require('./_global').Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;

},{"./_shared":"../node_modules/core-js/library/modules/_shared.js","./_uid":"../node_modules/core-js/library/modules/_uid.js","./_global":"../node_modules/core-js/library/modules/_global.js"}],"../node_modules/core-js/library/modules/_set-to-string-tag.js":[function(require,module,exports) {
var def = require('./_object-dp').f;
var has = require('./_has');
var TAG = require('./_wks')('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};

},{"./_object-dp":"../node_modules/core-js/library/modules/_object-dp.js","./_has":"../node_modules/core-js/library/modules/_has.js","./_wks":"../node_modules/core-js/library/modules/_wks.js"}],"../node_modules/core-js/library/modules/_wks-ext.js":[function(require,module,exports) {
exports.f = require('./_wks');

},{"./_wks":"../node_modules/core-js/library/modules/_wks.js"}],"../node_modules/core-js/library/modules/_wks-define.js":[function(require,module,exports) {

var global = require('./_global');
var core = require('./_core');
var LIBRARY = require('./_library');
var wksExt = require('./_wks-ext');
var defineProperty = require('./_object-dp').f;
module.exports = function (name) {
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
};

},{"./_global":"../node_modules/core-js/library/modules/_global.js","./_core":"../node_modules/core-js/library/modules/_core.js","./_library":"../node_modules/core-js/library/modules/_library.js","./_wks-ext":"../node_modules/core-js/library/modules/_wks-ext.js","./_object-dp":"../node_modules/core-js/library/modules/_object-dp.js"}],"../node_modules/core-js/library/modules/_cof.js":[function(require,module,exports) {
var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};

},{}],"../node_modules/core-js/library/modules/_iobject.js":[function(require,module,exports) {
// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = require('./_cof');
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};

},{"./_cof":"../node_modules/core-js/library/modules/_cof.js"}],"../node_modules/core-js/library/modules/_defined.js":[function(require,module,exports) {
// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};

},{}],"../node_modules/core-js/library/modules/_to-iobject.js":[function(require,module,exports) {
// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = require('./_iobject');
var defined = require('./_defined');
module.exports = function (it) {
  return IObject(defined(it));
};

},{"./_iobject":"../node_modules/core-js/library/modules/_iobject.js","./_defined":"../node_modules/core-js/library/modules/_defined.js"}],"../node_modules/core-js/library/modules/_to-integer.js":[function(require,module,exports) {
// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};

},{}],"../node_modules/core-js/library/modules/_to-length.js":[function(require,module,exports) {
// 7.1.15 ToLength
var toInteger = require('./_to-integer');
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};

},{"./_to-integer":"../node_modules/core-js/library/modules/_to-integer.js"}],"../node_modules/core-js/library/modules/_to-absolute-index.js":[function(require,module,exports) {
var toInteger = require('./_to-integer');
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};

},{"./_to-integer":"../node_modules/core-js/library/modules/_to-integer.js"}],"../node_modules/core-js/library/modules/_array-includes.js":[function(require,module,exports) {
// false -> Array#indexOf
// true  -> Array#includes
var toIObject = require('./_to-iobject');
var toLength = require('./_to-length');
var toAbsoluteIndex = require('./_to-absolute-index');
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

},{"./_to-iobject":"../node_modules/core-js/library/modules/_to-iobject.js","./_to-length":"../node_modules/core-js/library/modules/_to-length.js","./_to-absolute-index":"../node_modules/core-js/library/modules/_to-absolute-index.js"}],"../node_modules/core-js/library/modules/_shared-key.js":[function(require,module,exports) {
var shared = require('./_shared')('keys');
var uid = require('./_uid');
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};

},{"./_shared":"../node_modules/core-js/library/modules/_shared.js","./_uid":"../node_modules/core-js/library/modules/_uid.js"}],"../node_modules/core-js/library/modules/_object-keys-internal.js":[function(require,module,exports) {
var has = require('./_has');
var toIObject = require('./_to-iobject');
var arrayIndexOf = require('./_array-includes')(false);
var IE_PROTO = require('./_shared-key')('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};

},{"./_has":"../node_modules/core-js/library/modules/_has.js","./_to-iobject":"../node_modules/core-js/library/modules/_to-iobject.js","./_array-includes":"../node_modules/core-js/library/modules/_array-includes.js","./_shared-key":"../node_modules/core-js/library/modules/_shared-key.js"}],"../node_modules/core-js/library/modules/_enum-bug-keys.js":[function(require,module,exports) {
// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');

},{}],"../node_modules/core-js/library/modules/_object-keys.js":[function(require,module,exports) {
// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = require('./_object-keys-internal');
var enumBugKeys = require('./_enum-bug-keys');

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};

},{"./_object-keys-internal":"../node_modules/core-js/library/modules/_object-keys-internal.js","./_enum-bug-keys":"../node_modules/core-js/library/modules/_enum-bug-keys.js"}],"../node_modules/core-js/library/modules/_object-gops.js":[function(require,module,exports) {
exports.f = Object.getOwnPropertySymbols;

},{}],"../node_modules/core-js/library/modules/_object-pie.js":[function(require,module,exports) {
exports.f = {}.propertyIsEnumerable;

},{}],"../node_modules/core-js/library/modules/_enum-keys.js":[function(require,module,exports) {
// all enumerable object keys, includes symbols
var getKeys = require('./_object-keys');
var gOPS = require('./_object-gops');
var pIE = require('./_object-pie');
module.exports = function (it) {
  var result = getKeys(it);
  var getSymbols = gOPS.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum = pIE.f;
    var i = 0;
    var key;
    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
  } return result;
};

},{"./_object-keys":"../node_modules/core-js/library/modules/_object-keys.js","./_object-gops":"../node_modules/core-js/library/modules/_object-gops.js","./_object-pie":"../node_modules/core-js/library/modules/_object-pie.js"}],"../node_modules/core-js/library/modules/_is-array.js":[function(require,module,exports) {
// 7.2.2 IsArray(argument)
var cof = require('./_cof');
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};

},{"./_cof":"../node_modules/core-js/library/modules/_cof.js"}],"../node_modules/core-js/library/modules/_to-object.js":[function(require,module,exports) {
// 7.1.13 ToObject(argument)
var defined = require('./_defined');
module.exports = function (it) {
  return Object(defined(it));
};

},{"./_defined":"../node_modules/core-js/library/modules/_defined.js"}],"../node_modules/core-js/library/modules/_object-dps.js":[function(require,module,exports) {
var dP = require('./_object-dp');
var anObject = require('./_an-object');
var getKeys = require('./_object-keys');

module.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};

},{"./_object-dp":"../node_modules/core-js/library/modules/_object-dp.js","./_an-object":"../node_modules/core-js/library/modules/_an-object.js","./_object-keys":"../node_modules/core-js/library/modules/_object-keys.js","./_descriptors":"../node_modules/core-js/library/modules/_descriptors.js"}],"../node_modules/core-js/library/modules/_html.js":[function(require,module,exports) {
var document = require('./_global').document;
module.exports = document && document.documentElement;

},{"./_global":"../node_modules/core-js/library/modules/_global.js"}],"../node_modules/core-js/library/modules/_object-create.js":[function(require,module,exports) {
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = require('./_an-object');
var dPs = require('./_object-dps');
var enumBugKeys = require('./_enum-bug-keys');
var IE_PROTO = require('./_shared-key')('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = require('./_dom-create')('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  require('./_html').appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};

},{"./_an-object":"../node_modules/core-js/library/modules/_an-object.js","./_object-dps":"../node_modules/core-js/library/modules/_object-dps.js","./_enum-bug-keys":"../node_modules/core-js/library/modules/_enum-bug-keys.js","./_shared-key":"../node_modules/core-js/library/modules/_shared-key.js","./_dom-create":"../node_modules/core-js/library/modules/_dom-create.js","./_html":"../node_modules/core-js/library/modules/_html.js"}],"../node_modules/core-js/library/modules/_object-gopn.js":[function(require,module,exports) {
// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys = require('./_object-keys-internal');
var hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys(O, hiddenKeys);
};

},{"./_object-keys-internal":"../node_modules/core-js/library/modules/_object-keys-internal.js","./_enum-bug-keys":"../node_modules/core-js/library/modules/_enum-bug-keys.js"}],"../node_modules/core-js/library/modules/_object-gopn-ext.js":[function(require,module,exports) {
// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = require('./_to-iobject');
var gOPN = require('./_object-gopn').f;
var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return gOPN(it);
  } catch (e) {
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};

},{"./_to-iobject":"../node_modules/core-js/library/modules/_to-iobject.js","./_object-gopn":"../node_modules/core-js/library/modules/_object-gopn.js"}],"../node_modules/core-js/library/modules/_object-gopd.js":[function(require,module,exports) {
var pIE = require('./_object-pie');
var createDesc = require('./_property-desc');
var toIObject = require('./_to-iobject');
var toPrimitive = require('./_to-primitive');
var has = require('./_has');
var IE8_DOM_DEFINE = require('./_ie8-dom-define');
var gOPD = Object.getOwnPropertyDescriptor;

exports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};

},{"./_object-pie":"../node_modules/core-js/library/modules/_object-pie.js","./_property-desc":"../node_modules/core-js/library/modules/_property-desc.js","./_to-iobject":"../node_modules/core-js/library/modules/_to-iobject.js","./_to-primitive":"../node_modules/core-js/library/modules/_to-primitive.js","./_has":"../node_modules/core-js/library/modules/_has.js","./_ie8-dom-define":"../node_modules/core-js/library/modules/_ie8-dom-define.js","./_descriptors":"../node_modules/core-js/library/modules/_descriptors.js"}],"../node_modules/core-js/library/modules/es6.symbol.js":[function(require,module,exports) {

'use strict';
// ECMAScript 6 symbols shim
var global = require('./_global');
var has = require('./_has');
var DESCRIPTORS = require('./_descriptors');
var $export = require('./_export');
var redefine = require('./_redefine');
var META = require('./_meta').KEY;
var $fails = require('./_fails');
var shared = require('./_shared');
var setToStringTag = require('./_set-to-string-tag');
var uid = require('./_uid');
var wks = require('./_wks');
var wksExt = require('./_wks-ext');
var wksDefine = require('./_wks-define');
var enumKeys = require('./_enum-keys');
var isArray = require('./_is-array');
var anObject = require('./_an-object');
var isObject = require('./_is-object');
var toObject = require('./_to-object');
var toIObject = require('./_to-iobject');
var toPrimitive = require('./_to-primitive');
var createDesc = require('./_property-desc');
var _create = require('./_object-create');
var gOPNExt = require('./_object-gopn-ext');
var $GOPD = require('./_object-gopd');
var $GOPS = require('./_object-gops');
var $DP = require('./_object-dp');
var $keys = require('./_object-keys');
var gOPD = $GOPD.f;
var dP = $DP.f;
var gOPN = gOPNExt.f;
var $Symbol = global.Symbol;
var $JSON = global.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE = 'prototype';
var HIDDEN = wks('_hidden');
var TO_PRIMITIVE = wks('toPrimitive');
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = shared('symbol-registry');
var AllSymbols = shared('symbols');
var OPSymbols = shared('op-symbols');
var ObjectProto = Object[PROTOTYPE];
var USE_NATIVE = typeof $Symbol == 'function' && !!$GOPS.f;
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function () {
  return _create(dP({}, 'a', {
    get: function () { return dP(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (it, key, D) {
  var protoDesc = gOPD(ObjectProto, key);
  if (protoDesc) delete ObjectProto[key];
  dP(it, key, D);
  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function (tag) {
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if (has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = _create(D, { enumerable: createDesc(0, false) });
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P) {
  anObject(it);
  var keys = enumKeys(P = toIObject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P) {
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = toIObject(it);
  key = toPrimitive(key, true);
  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
  var D = gOPD(it, key);
  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = gOPN(toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto;
  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if (!USE_NATIVE) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function (value) {
      if (this === ObjectProto) $set.call(OPSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f = $defineProperty;
  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;
  require('./_object-pie').f = $propertyIsEnumerable;
  $GOPS.f = $getOwnPropertySymbols;

  if (DESCRIPTORS && !require('./_library')) {
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function (name) {
    return wrap(wks(name));
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

for (var es6Symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function (key) {
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
  },
  useSetter: function () { setter = true; },
  useSimple: function () { setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
// https://bugs.chromium.org/p/v8/issues/detail?id=3443
var FAILS_ON_PRIMITIVES = $fails(function () { $GOPS.f(1); });

$export($export.S + $export.F * FAILS_ON_PRIMITIVES, 'Object', {
  getOwnPropertySymbols: function getOwnPropertySymbols(it) {
    return $GOPS.f(toObject(it));
  }
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) args.push(arguments[i++]);
    $replacer = replacer = args[1];
    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
    if (!isArray(replacer)) replacer = function (key, value) {
      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);

},{"./_global":"../node_modules/core-js/library/modules/_global.js","./_has":"../node_modules/core-js/library/modules/_has.js","./_descriptors":"../node_modules/core-js/library/modules/_descriptors.js","./_export":"../node_modules/core-js/library/modules/_export.js","./_redefine":"../node_modules/core-js/library/modules/_redefine.js","./_meta":"../node_modules/core-js/library/modules/_meta.js","./_fails":"../node_modules/core-js/library/modules/_fails.js","./_shared":"../node_modules/core-js/library/modules/_shared.js","./_set-to-string-tag":"../node_modules/core-js/library/modules/_set-to-string-tag.js","./_uid":"../node_modules/core-js/library/modules/_uid.js","./_wks":"../node_modules/core-js/library/modules/_wks.js","./_wks-ext":"../node_modules/core-js/library/modules/_wks-ext.js","./_wks-define":"../node_modules/core-js/library/modules/_wks-define.js","./_enum-keys":"../node_modules/core-js/library/modules/_enum-keys.js","./_is-array":"../node_modules/core-js/library/modules/_is-array.js","./_an-object":"../node_modules/core-js/library/modules/_an-object.js","./_is-object":"../node_modules/core-js/library/modules/_is-object.js","./_to-object":"../node_modules/core-js/library/modules/_to-object.js","./_to-iobject":"../node_modules/core-js/library/modules/_to-iobject.js","./_to-primitive":"../node_modules/core-js/library/modules/_to-primitive.js","./_property-desc":"../node_modules/core-js/library/modules/_property-desc.js","./_object-create":"../node_modules/core-js/library/modules/_object-create.js","./_object-gopn-ext":"../node_modules/core-js/library/modules/_object-gopn-ext.js","./_object-gopd":"../node_modules/core-js/library/modules/_object-gopd.js","./_object-gops":"../node_modules/core-js/library/modules/_object-gops.js","./_object-dp":"../node_modules/core-js/library/modules/_object-dp.js","./_object-keys":"../node_modules/core-js/library/modules/_object-keys.js","./_object-gopn":"../node_modules/core-js/library/modules/_object-gopn.js","./_object-pie":"../node_modules/core-js/library/modules/_object-pie.js","./_library":"../node_modules/core-js/library/modules/_library.js","./_hide":"../node_modules/core-js/library/modules/_hide.js"}],"../node_modules/core-js/library/fn/object/get-own-property-symbols.js":[function(require,module,exports) {
require('../../modules/es6.symbol');
module.exports = require('../../modules/_core').Object.getOwnPropertySymbols;

},{"../../modules/es6.symbol":"../node_modules/core-js/library/modules/es6.symbol.js","../../modules/_core":"../node_modules/core-js/library/modules/_core.js"}],"../node_modules/babel-runtime/core-js/object/get-own-property-symbols.js":[function(require,module,exports) {
module.exports = { "default": require("core-js/library/fn/object/get-own-property-symbols"), __esModule: true };
},{"core-js/library/fn/object/get-own-property-symbols":"../node_modules/core-js/library/fn/object/get-own-property-symbols.js"}],"../node_modules/core-js/library/modules/_add-to-unscopables.js":[function(require,module,exports) {
module.exports = function () { /* empty */ };

},{}],"../node_modules/core-js/library/modules/_iter-step.js":[function(require,module,exports) {
module.exports = function (done, value) {
  return { value: value, done: !!done };
};

},{}],"../node_modules/core-js/library/modules/_iterators.js":[function(require,module,exports) {
module.exports = {};

},{}],"../node_modules/core-js/library/modules/_iter-create.js":[function(require,module,exports) {
'use strict';
var create = require('./_object-create');
var descriptor = require('./_property-desc');
var setToStringTag = require('./_set-to-string-tag');
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
require('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};

},{"./_object-create":"../node_modules/core-js/library/modules/_object-create.js","./_property-desc":"../node_modules/core-js/library/modules/_property-desc.js","./_set-to-string-tag":"../node_modules/core-js/library/modules/_set-to-string-tag.js","./_hide":"../node_modules/core-js/library/modules/_hide.js","./_wks":"../node_modules/core-js/library/modules/_wks.js"}],"../node_modules/core-js/library/modules/_object-gpo.js":[function(require,module,exports) {
// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = require('./_has');
var toObject = require('./_to-object');
var IE_PROTO = require('./_shared-key')('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};

},{"./_has":"../node_modules/core-js/library/modules/_has.js","./_to-object":"../node_modules/core-js/library/modules/_to-object.js","./_shared-key":"../node_modules/core-js/library/modules/_shared-key.js"}],"../node_modules/core-js/library/modules/_iter-define.js":[function(require,module,exports) {
'use strict';
var LIBRARY = require('./_library');
var $export = require('./_export');
var redefine = require('./_redefine');
var hide = require('./_hide');
var Iterators = require('./_iterators');
var $iterCreate = require('./_iter-create');
var setToStringTag = require('./_set-to-string-tag');
var getPrototypeOf = require('./_object-gpo');
var ITERATOR = require('./_wks')('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};

},{"./_library":"../node_modules/core-js/library/modules/_library.js","./_export":"../node_modules/core-js/library/modules/_export.js","./_redefine":"../node_modules/core-js/library/modules/_redefine.js","./_hide":"../node_modules/core-js/library/modules/_hide.js","./_iterators":"../node_modules/core-js/library/modules/_iterators.js","./_iter-create":"../node_modules/core-js/library/modules/_iter-create.js","./_set-to-string-tag":"../node_modules/core-js/library/modules/_set-to-string-tag.js","./_object-gpo":"../node_modules/core-js/library/modules/_object-gpo.js","./_wks":"../node_modules/core-js/library/modules/_wks.js"}],"../node_modules/core-js/library/modules/es6.array.iterator.js":[function(require,module,exports) {
'use strict';
var addToUnscopables = require('./_add-to-unscopables');
var step = require('./_iter-step');
var Iterators = require('./_iterators');
var toIObject = require('./_to-iobject');

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');

},{"./_add-to-unscopables":"../node_modules/core-js/library/modules/_add-to-unscopables.js","./_iter-step":"../node_modules/core-js/library/modules/_iter-step.js","./_iterators":"../node_modules/core-js/library/modules/_iterators.js","./_to-iobject":"../node_modules/core-js/library/modules/_to-iobject.js","./_iter-define":"../node_modules/core-js/library/modules/_iter-define.js"}],"../node_modules/core-js/library/modules/web.dom.iterable.js":[function(require,module,exports) {

require('./es6.array.iterator');
var global = require('./_global');
var hide = require('./_hide');
var Iterators = require('./_iterators');
var TO_STRING_TAG = require('./_wks')('toStringTag');

var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
  'TextTrackList,TouchList').split(',');

for (var i = 0; i < DOMIterables.length; i++) {
  var NAME = DOMIterables[i];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
  Iterators[NAME] = Iterators.Array;
}

},{"./es6.array.iterator":"../node_modules/core-js/library/modules/es6.array.iterator.js","./_global":"../node_modules/core-js/library/modules/_global.js","./_hide":"../node_modules/core-js/library/modules/_hide.js","./_iterators":"../node_modules/core-js/library/modules/_iterators.js","./_wks":"../node_modules/core-js/library/modules/_wks.js"}],"../node_modules/core-js/library/modules/_string-at.js":[function(require,module,exports) {
var toInteger = require('./_to-integer');
var defined = require('./_defined');
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};

},{"./_to-integer":"../node_modules/core-js/library/modules/_to-integer.js","./_defined":"../node_modules/core-js/library/modules/_defined.js"}],"../node_modules/core-js/library/modules/es6.string.iterator.js":[function(require,module,exports) {
'use strict';
var $at = require('./_string-at')(true);

// 21.1.3.27 String.prototype[@@iterator]()
require('./_iter-define')(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});

},{"./_string-at":"../node_modules/core-js/library/modules/_string-at.js","./_iter-define":"../node_modules/core-js/library/modules/_iter-define.js"}],"../node_modules/core-js/library/modules/_classof.js":[function(require,module,exports) {
// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = require('./_cof');
var TAG = require('./_wks')('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};

},{"./_cof":"../node_modules/core-js/library/modules/_cof.js","./_wks":"../node_modules/core-js/library/modules/_wks.js"}],"../node_modules/core-js/library/modules/core.get-iterator-method.js":[function(require,module,exports) {
var classof = require('./_classof');
var ITERATOR = require('./_wks')('iterator');
var Iterators = require('./_iterators');
module.exports = require('./_core').getIteratorMethod = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};

},{"./_classof":"../node_modules/core-js/library/modules/_classof.js","./_wks":"../node_modules/core-js/library/modules/_wks.js","./_iterators":"../node_modules/core-js/library/modules/_iterators.js","./_core":"../node_modules/core-js/library/modules/_core.js"}],"../node_modules/core-js/library/modules/core.get-iterator.js":[function(require,module,exports) {
var anObject = require('./_an-object');
var get = require('./core.get-iterator-method');
module.exports = require('./_core').getIterator = function (it) {
  var iterFn = get(it);
  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');
  return anObject(iterFn.call(it));
};

},{"./_an-object":"../node_modules/core-js/library/modules/_an-object.js","./core.get-iterator-method":"../node_modules/core-js/library/modules/core.get-iterator-method.js","./_core":"../node_modules/core-js/library/modules/_core.js"}],"../node_modules/core-js/library/fn/get-iterator.js":[function(require,module,exports) {
require('../modules/web.dom.iterable');
require('../modules/es6.string.iterator');
module.exports = require('../modules/core.get-iterator');

},{"../modules/web.dom.iterable":"../node_modules/core-js/library/modules/web.dom.iterable.js","../modules/es6.string.iterator":"../node_modules/core-js/library/modules/es6.string.iterator.js","../modules/core.get-iterator":"../node_modules/core-js/library/modules/core.get-iterator.js"}],"../node_modules/babel-runtime/core-js/get-iterator.js":[function(require,module,exports) {
module.exports = { "default": require("core-js/library/fn/get-iterator"), __esModule: true };
},{"core-js/library/fn/get-iterator":"../node_modules/core-js/library/fn/get-iterator.js"}],"../node_modules/core-js/library/modules/_object-sap.js":[function(require,module,exports) {
// most Object methods by ES6 should accept primitives
var $export = require('./_export');
var core = require('./_core');
var fails = require('./_fails');
module.exports = function (KEY, exec) {
  var fn = (core.Object || {})[KEY] || Object[KEY];
  var exp = {};
  exp[KEY] = exec(fn);
  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
};

},{"./_export":"../node_modules/core-js/library/modules/_export.js","./_core":"../node_modules/core-js/library/modules/_core.js","./_fails":"../node_modules/core-js/library/modules/_fails.js"}],"../node_modules/core-js/library/modules/es6.object.keys.js":[function(require,module,exports) {
// 19.1.2.14 Object.keys(O)
var toObject = require('./_to-object');
var $keys = require('./_object-keys');

require('./_object-sap')('keys', function () {
  return function keys(it) {
    return $keys(toObject(it));
  };
});

},{"./_to-object":"../node_modules/core-js/library/modules/_to-object.js","./_object-keys":"../node_modules/core-js/library/modules/_object-keys.js","./_object-sap":"../node_modules/core-js/library/modules/_object-sap.js"}],"../node_modules/core-js/library/fn/object/keys.js":[function(require,module,exports) {
require('../../modules/es6.object.keys');
module.exports = require('../../modules/_core').Object.keys;

},{"../../modules/es6.object.keys":"../node_modules/core-js/library/modules/es6.object.keys.js","../../modules/_core":"../node_modules/core-js/library/modules/_core.js"}],"../node_modules/babel-runtime/core-js/object/keys.js":[function(require,module,exports) {
module.exports = { "default": require("core-js/library/fn/object/keys"), __esModule: true };
},{"core-js/library/fn/object/keys":"../node_modules/core-js/library/fn/object/keys.js"}],"../node_modules/core-js/library/fn/json/stringify.js":[function(require,module,exports) {
var core = require('../../modules/_core');
var $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });
module.exports = function stringify(it) { // eslint-disable-line no-unused-vars
  return $JSON.stringify.apply($JSON, arguments);
};

},{"../../modules/_core":"../node_modules/core-js/library/modules/_core.js"}],"../node_modules/babel-runtime/core-js/json/stringify.js":[function(require,module,exports) {
module.exports = { "default": require("core-js/library/fn/json/stringify"), __esModule: true };
},{"core-js/library/fn/json/stringify":"../node_modules/core-js/library/fn/json/stringify.js"}],"../node_modules/core-js/library/fn/symbol/for.js":[function(require,module,exports) {
require('../../modules/es6.symbol');
module.exports = require('../../modules/_core').Symbol['for'];

},{"../../modules/es6.symbol":"../node_modules/core-js/library/modules/es6.symbol.js","../../modules/_core":"../node_modules/core-js/library/modules/_core.js"}],"../node_modules/babel-runtime/core-js/symbol/for.js":[function(require,module,exports) {
module.exports = { "default": require("core-js/library/fn/symbol/for"), __esModule: true };
},{"core-js/library/fn/symbol/for":"../node_modules/core-js/library/fn/symbol/for.js"}],"../node_modules/babel-types/lib/constants.js":[function(require,module,exports) {
"use strict";

exports.__esModule = true;
exports.NOT_LOCAL_BINDING = exports.BLOCK_SCOPED_SYMBOL = exports.INHERIT_KEYS = exports.UNARY_OPERATORS = exports.STRING_UNARY_OPERATORS = exports.NUMBER_UNARY_OPERATORS = exports.BOOLEAN_UNARY_OPERATORS = exports.BINARY_OPERATORS = exports.NUMBER_BINARY_OPERATORS = exports.BOOLEAN_BINARY_OPERATORS = exports.COMPARISON_BINARY_OPERATORS = exports.EQUALITY_BINARY_OPERATORS = exports.BOOLEAN_NUMBER_BINARY_OPERATORS = exports.UPDATE_OPERATORS = exports.LOGICAL_OPERATORS = exports.COMMENT_KEYS = exports.FOR_INIT_KEYS = exports.FLATTENABLE_KEYS = exports.STATEMENT_OR_BLOCK_KEYS = undefined;

var _for = require("babel-runtime/core-js/symbol/for");

var _for2 = _interopRequireDefault(_for);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var STATEMENT_OR_BLOCK_KEYS = exports.STATEMENT_OR_BLOCK_KEYS = ["consequent", "body", "alternate"];
var FLATTENABLE_KEYS = exports.FLATTENABLE_KEYS = ["body", "expressions"];
var FOR_INIT_KEYS = exports.FOR_INIT_KEYS = ["left", "init"];
var COMMENT_KEYS = exports.COMMENT_KEYS = ["leadingComments", "trailingComments", "innerComments"];

var LOGICAL_OPERATORS = exports.LOGICAL_OPERATORS = ["||", "&&"];
var UPDATE_OPERATORS = exports.UPDATE_OPERATORS = ["++", "--"];

var BOOLEAN_NUMBER_BINARY_OPERATORS = exports.BOOLEAN_NUMBER_BINARY_OPERATORS = [">", "<", ">=", "<="];
var EQUALITY_BINARY_OPERATORS = exports.EQUALITY_BINARY_OPERATORS = ["==", "===", "!=", "!=="];
var COMPARISON_BINARY_OPERATORS = exports.COMPARISON_BINARY_OPERATORS = [].concat(EQUALITY_BINARY_OPERATORS, ["in", "instanceof"]);
var BOOLEAN_BINARY_OPERATORS = exports.BOOLEAN_BINARY_OPERATORS = [].concat(COMPARISON_BINARY_OPERATORS, BOOLEAN_NUMBER_BINARY_OPERATORS);
var NUMBER_BINARY_OPERATORS = exports.NUMBER_BINARY_OPERATORS = ["-", "/", "%", "*", "**", "&", "|", ">>", ">>>", "<<", "^"];
var BINARY_OPERATORS = exports.BINARY_OPERATORS = ["+"].concat(NUMBER_BINARY_OPERATORS, BOOLEAN_BINARY_OPERATORS);

var BOOLEAN_UNARY_OPERATORS = exports.BOOLEAN_UNARY_OPERATORS = ["delete", "!"];
var NUMBER_UNARY_OPERATORS = exports.NUMBER_UNARY_OPERATORS = ["+", "-", "++", "--", "~"];
var STRING_UNARY_OPERATORS = exports.STRING_UNARY_OPERATORS = ["typeof"];
var UNARY_OPERATORS = exports.UNARY_OPERATORS = ["void"].concat(BOOLEAN_UNARY_OPERATORS, NUMBER_UNARY_OPERATORS, STRING_UNARY_OPERATORS);

var INHERIT_KEYS = exports.INHERIT_KEYS = {
  optional: ["typeAnnotation", "typeParameters", "returnType"],
  force: ["start", "loc", "end"]
};

var BLOCK_SCOPED_SYMBOL = exports.BLOCK_SCOPED_SYMBOL = (0, _for2.default)("var used to be block scoped");
var NOT_LOCAL_BINDING = exports.NOT_LOCAL_BINDING = (0, _for2.default)("should not be considered a local binding");
},{"babel-runtime/core-js/symbol/for":"../node_modules/babel-runtime/core-js/symbol/for.js"}],"../node_modules/core-js/library/modules/es6.object.create.js":[function(require,module,exports) {
var $export = require('./_export');
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
$export($export.S, 'Object', { create: require('./_object-create') });

},{"./_export":"../node_modules/core-js/library/modules/_export.js","./_object-create":"../node_modules/core-js/library/modules/_object-create.js"}],"../node_modules/core-js/library/fn/object/create.js":[function(require,module,exports) {
require('../../modules/es6.object.create');
var $Object = require('../../modules/_core').Object;
module.exports = function create(P, D) {
  return $Object.create(P, D);
};

},{"../../modules/es6.object.create":"../node_modules/core-js/library/modules/es6.object.create.js","../../modules/_core":"../node_modules/core-js/library/modules/_core.js"}],"../node_modules/babel-runtime/core-js/object/create.js":[function(require,module,exports) {
module.exports = { "default": require("core-js/library/fn/object/create"), __esModule: true };
},{"core-js/library/fn/object/create":"../node_modules/core-js/library/fn/object/create.js"}],"../node_modules/babel-types/lib/retrievers.js":[function(require,module,exports) {
"use strict";

exports.__esModule = true;

var _create = require("babel-runtime/core-js/object/create");

var _create2 = _interopRequireDefault(_create);

exports.getBindingIdentifiers = getBindingIdentifiers;
exports.getOuterBindingIdentifiers = getOuterBindingIdentifiers;

var _index = require("./index");

var t = _interopRequireWildcard(_index);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getBindingIdentifiers(node, duplicates, outerOnly) {
  var search = [].concat(node);
  var ids = (0, _create2.default)(null);

  while (search.length) {
    var id = search.shift();
    if (!id) continue;

    var keys = t.getBindingIdentifiers.keys[id.type];

    if (t.isIdentifier(id)) {
      if (duplicates) {
        var _ids = ids[id.name] = ids[id.name] || [];
        _ids.push(id);
      } else {
        ids[id.name] = id;
      }
      continue;
    }

    if (t.isExportDeclaration(id)) {
      if (t.isDeclaration(id.declaration)) {
        search.push(id.declaration);
      }
      continue;
    }

    if (outerOnly) {
      if (t.isFunctionDeclaration(id)) {
        search.push(id.id);
        continue;
      }

      if (t.isFunctionExpression(id)) {
        continue;
      }
    }

    if (keys) {
      for (var i = 0; i < keys.length; i++) {
        var key = keys[i];
        if (id[key]) {
          search = search.concat(id[key]);
        }
      }
    }
  }

  return ids;
}

getBindingIdentifiers.keys = {
  DeclareClass: ["id"],
  DeclareFunction: ["id"],
  DeclareModule: ["id"],
  DeclareVariable: ["id"],
  InterfaceDeclaration: ["id"],
  TypeAlias: ["id"],
  OpaqueType: ["id"],

  CatchClause: ["param"],
  LabeledStatement: ["label"],
  UnaryExpression: ["argument"],
  AssignmentExpression: ["left"],

  ImportSpecifier: ["local"],
  ImportNamespaceSpecifier: ["local"],
  ImportDefaultSpecifier: ["local"],
  ImportDeclaration: ["specifiers"],

  ExportSpecifier: ["exported"],
  ExportNamespaceSpecifier: ["exported"],
  ExportDefaultSpecifier: ["exported"],

  FunctionDeclaration: ["id", "params"],
  FunctionExpression: ["id", "params"],

  ClassDeclaration: ["id"],
  ClassExpression: ["id"],

  RestElement: ["argument"],
  UpdateExpression: ["argument"],

  RestProperty: ["argument"],
  ObjectProperty: ["value"],

  AssignmentPattern: ["left"],
  ArrayPattern: ["elements"],
  ObjectPattern: ["properties"],

  VariableDeclaration: ["declarations"],
  VariableDeclarator: ["id"]
};

function getOuterBindingIdentifiers(node, duplicates) {
  return getBindingIdentifiers(node, duplicates, true);
}
},{"babel-runtime/core-js/object/create":"../node_modules/babel-runtime/core-js/object/create.js","./index":"../node_modules/babel-types/lib/index.js"}],"../node_modules/core-js/library/fn/symbol/iterator.js":[function(require,module,exports) {
require('../../modules/es6.string.iterator');
require('../../modules/web.dom.iterable');
module.exports = require('../../modules/_wks-ext').f('iterator');

},{"../../modules/es6.string.iterator":"../node_modules/core-js/library/modules/es6.string.iterator.js","../../modules/web.dom.iterable":"../node_modules/core-js/library/modules/web.dom.iterable.js","../../modules/_wks-ext":"../node_modules/core-js/library/modules/_wks-ext.js"}],"../node_modules/babel-runtime/core-js/symbol/iterator.js":[function(require,module,exports) {
module.exports = { "default": require("core-js/library/fn/symbol/iterator"), __esModule: true };
},{"core-js/library/fn/symbol/iterator":"../node_modules/core-js/library/fn/symbol/iterator.js"}],"../node_modules/core-js/library/modules/es6.object.to-string.js":[function(require,module,exports) {

},{}],"../node_modules/core-js/library/modules/es7.symbol.async-iterator.js":[function(require,module,exports) {
require('./_wks-define')('asyncIterator');

},{"./_wks-define":"../node_modules/core-js/library/modules/_wks-define.js"}],"../node_modules/core-js/library/modules/es7.symbol.observable.js":[function(require,module,exports) {
require('./_wks-define')('observable');

},{"./_wks-define":"../node_modules/core-js/library/modules/_wks-define.js"}],"../node_modules/core-js/library/fn/symbol/index.js":[function(require,module,exports) {
require('../../modules/es6.symbol');
require('../../modules/es6.object.to-string');
require('../../modules/es7.symbol.async-iterator');
require('../../modules/es7.symbol.observable');
module.exports = require('../../modules/_core').Symbol;

},{"../../modules/es6.symbol":"../node_modules/core-js/library/modules/es6.symbol.js","../../modules/es6.object.to-string":"../node_modules/core-js/library/modules/es6.object.to-string.js","../../modules/es7.symbol.async-iterator":"../node_modules/core-js/library/modules/es7.symbol.async-iterator.js","../../modules/es7.symbol.observable":"../node_modules/core-js/library/modules/es7.symbol.observable.js","../../modules/_core":"../node_modules/core-js/library/modules/_core.js"}],"../node_modules/babel-runtime/core-js/symbol.js":[function(require,module,exports) {
module.exports = { "default": require("core-js/library/fn/symbol"), __esModule: true };
},{"core-js/library/fn/symbol":"../node_modules/core-js/library/fn/symbol/index.js"}],"../node_modules/babel-runtime/helpers/typeof.js":[function(require,module,exports) {
"use strict";

exports.__esModule = true;

var _iterator = require("../core-js/symbol/iterator");

var _iterator2 = _interopRequireDefault(_iterator);

var _symbol = require("../core-js/symbol");

var _symbol2 = _interopRequireDefault(_symbol);

var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
} : function (obj) {
  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
};
},{"../core-js/symbol/iterator":"../node_modules/babel-runtime/core-js/symbol/iterator.js","../core-js/symbol":"../node_modules/babel-runtime/core-js/symbol.js"}],"../node_modules/esutils/lib/ast.js":[function(require,module,exports) {
/*
  Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/
(function () {
  'use strict';

  function isExpression(node) {
    if (node == null) {
      return false;
    }

    switch (node.type) {
      case 'ArrayExpression':
      case 'AssignmentExpression':
      case 'BinaryExpression':
      case 'CallExpression':
      case 'ConditionalExpression':
      case 'FunctionExpression':
      case 'Identifier':
      case 'Literal':
      case 'LogicalExpression':
      case 'MemberExpression':
      case 'NewExpression':
      case 'ObjectExpression':
      case 'SequenceExpression':
      case 'ThisExpression':
      case 'UnaryExpression':
      case 'UpdateExpression':
        return true;
    }

    return false;
  }

  function isIterationStatement(node) {
    if (node == null) {
      return false;
    }

    switch (node.type) {
      case 'DoWhileStatement':
      case 'ForInStatement':
      case 'ForStatement':
      case 'WhileStatement':
        return true;
    }

    return false;
  }

  function isStatement(node) {
    if (node == null) {
      return false;
    }

    switch (node.type) {
      case 'BlockStatement':
      case 'BreakStatement':
      case 'ContinueStatement':
      case 'DebuggerStatement':
      case 'DoWhileStatement':
      case 'EmptyStatement':
      case 'ExpressionStatement':
      case 'ForInStatement':
      case 'ForStatement':
      case 'IfStatement':
      case 'LabeledStatement':
      case 'ReturnStatement':
      case 'SwitchStatement':
      case 'ThrowStatement':
      case 'TryStatement':
      case 'VariableDeclaration':
      case 'WhileStatement':
      case 'WithStatement':
        return true;
    }

    return false;
  }

  function isSourceElement(node) {
    return isStatement(node) || node != null && node.type === 'FunctionDeclaration';
  }

  function trailingStatement(node) {
    switch (node.type) {
      case 'IfStatement':
        if (node.alternate != null) {
          return node.alternate;
        }

        return node.consequent;

      case 'LabeledStatement':
      case 'ForStatement':
      case 'ForInStatement':
      case 'WhileStatement':
      case 'WithStatement':
        return node.body;
    }

    return null;
  }

  function isProblematicIfStatement(node) {
    var current;

    if (node.type !== 'IfStatement') {
      return false;
    }

    if (node.alternate == null) {
      return false;
    }

    current = node.consequent;

    do {
      if (current.type === 'IfStatement') {
        if (current.alternate == null) {
          return true;
        }
      }

      current = trailingStatement(current);
    } while (current);

    return false;
  }

  module.exports = {
    isExpression: isExpression,
    isStatement: isStatement,
    isIterationStatement: isIterationStatement,
    isSourceElement: isSourceElement,
    isProblematicIfStatement: isProblematicIfStatement,
    trailingStatement: trailingStatement
  };
})();
/* vim: set sw=4 ts=4 et tw=80 : */
},{}],"../node_modules/esutils/lib/code.js":[function(require,module,exports) {
/*
  Copyright (C) 2013-2014 Yusuke Suzuki <utatane.tea@gmail.com>
  Copyright (C) 2014 Ivan Nikulin <ifaaan@gmail.com>

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/
(function () {
  'use strict';

  var ES6Regex, ES5Regex, NON_ASCII_WHITESPACES, IDENTIFIER_START, IDENTIFIER_PART, ch; // See `tools/generate-identifier-regex.js`.

  ES5Regex = {
    // ECMAScript 5.1/Unicode v9.0.0 NonAsciiIdentifierStart:
    NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,
    // ECMAScript 5.1/Unicode v9.0.0 NonAsciiIdentifierPart:
    NonAsciiIdentifierPart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/
  };
  ES6Regex = {
    // ECMAScript 6/Unicode v9.0.0 NonAsciiIdentifierStart:
    NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]/,
    // ECMAScript 6/Unicode v9.0.0 NonAsciiIdentifierPart:
    NonAsciiIdentifierPart: /[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE3E\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC00-\uDC4A\uDC50-\uDC59\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC36\uDC38-\uDC40\uDC50-\uDC59\uDC72-\uDC8F\uDC92-\uDCA7\uDCA9-\uDCB6]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F\uDFE0]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6\uDD00-\uDD4A\uDD50-\uDD59]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/
  };

  function isDecimalDigit(ch) {
    return 0x30 <= ch && ch <= 0x39; // 0..9
  }

  function isHexDigit(ch) {
    return 0x30 <= ch && ch <= 0x39 || // 0..9
    0x61 <= ch && ch <= 0x66 || // a..f
    0x41 <= ch && ch <= 0x46; // A..F
  }

  function isOctalDigit(ch) {
    return ch >= 0x30 && ch <= 0x37; // 0..7
  } // 7.2 White Space


  NON_ASCII_WHITESPACES = [0x1680, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF];

  function isWhiteSpace(ch) {
    return ch === 0x20 || ch === 0x09 || ch === 0x0B || ch === 0x0C || ch === 0xA0 || ch >= 0x1680 && NON_ASCII_WHITESPACES.indexOf(ch) >= 0;
  } // 7.3 Line Terminators


  function isLineTerminator(ch) {
    return ch === 0x0A || ch === 0x0D || ch === 0x2028 || ch === 0x2029;
  } // 7.6 Identifier Names and Identifiers


  function fromCodePoint(cp) {
    if (cp <= 0xFFFF) {
      return String.fromCharCode(cp);
    }

    var cu1 = String.fromCharCode(Math.floor((cp - 0x10000) / 0x400) + 0xD800);
    var cu2 = String.fromCharCode((cp - 0x10000) % 0x400 + 0xDC00);
    return cu1 + cu2;
  }

  IDENTIFIER_START = new Array(0x80);

  for (ch = 0; ch < 0x80; ++ch) {
    IDENTIFIER_START[ch] = ch >= 0x61 && ch <= 0x7A || // a..z
    ch >= 0x41 && ch <= 0x5A || // A..Z
    ch === 0x24 || ch === 0x5F; // $ (dollar) and _ (underscore)
  }

  IDENTIFIER_PART = new Array(0x80);

  for (ch = 0; ch < 0x80; ++ch) {
    IDENTIFIER_PART[ch] = ch >= 0x61 && ch <= 0x7A || // a..z
    ch >= 0x41 && ch <= 0x5A || // A..Z
    ch >= 0x30 && ch <= 0x39 || // 0..9
    ch === 0x24 || ch === 0x5F; // $ (dollar) and _ (underscore)
  }

  function isIdentifierStartES5(ch) {
    return ch < 0x80 ? IDENTIFIER_START[ch] : ES5Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch));
  }

  function isIdentifierPartES5(ch) {
    return ch < 0x80 ? IDENTIFIER_PART[ch] : ES5Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch));
  }

  function isIdentifierStartES6(ch) {
    return ch < 0x80 ? IDENTIFIER_START[ch] : ES6Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch));
  }

  function isIdentifierPartES6(ch) {
    return ch < 0x80 ? IDENTIFIER_PART[ch] : ES6Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch));
  }

  module.exports = {
    isDecimalDigit: isDecimalDigit,
    isHexDigit: isHexDigit,
    isOctalDigit: isOctalDigit,
    isWhiteSpace: isWhiteSpace,
    isLineTerminator: isLineTerminator,
    isIdentifierStartES5: isIdentifierStartES5,
    isIdentifierPartES5: isIdentifierPartES5,
    isIdentifierStartES6: isIdentifierStartES6,
    isIdentifierPartES6: isIdentifierPartES6
  };
})();
/* vim: set sw=4 ts=4 et tw=80 : */
},{}],"../node_modules/esutils/lib/keyword.js":[function(require,module,exports) {
/*
  Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/
(function () {
  'use strict';

  var code = require('./code');

  function isStrictModeReservedWordES6(id) {
    switch (id) {
      case 'implements':
      case 'interface':
      case 'package':
      case 'private':
      case 'protected':
      case 'public':
      case 'static':
      case 'let':
        return true;

      default:
        return false;
    }
  }

  function isKeywordES5(id, strict) {
    // yield should not be treated as keyword under non-strict mode.
    if (!strict && id === 'yield') {
      return false;
    }

    return isKeywordES6(id, strict);
  }

  function isKeywordES6(id, strict) {
    if (strict && isStrictModeReservedWordES6(id)) {
      return true;
    }

    switch (id.length) {
      case 2:
        return id === 'if' || id === 'in' || id === 'do';

      case 3:
        return id === 'var' || id === 'for' || id === 'new' || id === 'try';

      case 4:
        return id === 'this' || id === 'else' || id === 'case' || id === 'void' || id === 'with' || id === 'enum';

      case 5:
        return id === 'while' || id === 'break' || id === 'catch' || id === 'throw' || id === 'const' || id === 'yield' || id === 'class' || id === 'super';

      case 6:
        return id === 'return' || id === 'typeof' || id === 'delete' || id === 'switch' || id === 'export' || id === 'import';

      case 7:
        return id === 'default' || id === 'finally' || id === 'extends';

      case 8:
        return id === 'function' || id === 'continue' || id === 'debugger';

      case 10:
        return id === 'instanceof';

      default:
        return false;
    }
  }

  function isReservedWordES5(id, strict) {
    return id === 'null' || id === 'true' || id === 'false' || isKeywordES5(id, strict);
  }

  function isReservedWordES6(id, strict) {
    return id === 'null' || id === 'true' || id === 'false' || isKeywordES6(id, strict);
  }

  function isRestrictedWord(id) {
    return id === 'eval' || id === 'arguments';
  }

  function isIdentifierNameES5(id) {
    var i, iz, ch;

    if (id.length === 0) {
      return false;
    }

    ch = id.charCodeAt(0);

    if (!code.isIdentifierStartES5(ch)) {
      return false;
    }

    for (i = 1, iz = id.length; i < iz; ++i) {
      ch = id.charCodeAt(i);

      if (!code.isIdentifierPartES5(ch)) {
        return false;
      }
    }

    return true;
  }

  function decodeUtf16(lead, trail) {
    return (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;
  }

  function isIdentifierNameES6(id) {
    var i, iz, ch, lowCh, check;

    if (id.length === 0) {
      return false;
    }

    check = code.isIdentifierStartES6;

    for (i = 0, iz = id.length; i < iz; ++i) {
      ch = id.charCodeAt(i);

      if (0xD800 <= ch && ch <= 0xDBFF) {
        ++i;

        if (i >= iz) {
          return false;
        }

        lowCh = id.charCodeAt(i);

        if (!(0xDC00 <= lowCh && lowCh <= 0xDFFF)) {
          return false;
        }

        ch = decodeUtf16(ch, lowCh);
      }

      if (!check(ch)) {
        return false;
      }

      check = code.isIdentifierPartES6;
    }

    return true;
  }

  function isIdentifierES5(id, strict) {
    return isIdentifierNameES5(id) && !isReservedWordES5(id, strict);
  }

  function isIdentifierES6(id, strict) {
    return isIdentifierNameES6(id) && !isReservedWordES6(id, strict);
  }

  module.exports = {
    isKeywordES5: isKeywordES5,
    isKeywordES6: isKeywordES6,
    isReservedWordES5: isReservedWordES5,
    isReservedWordES6: isReservedWordES6,
    isRestrictedWord: isRestrictedWord,
    isIdentifierNameES5: isIdentifierNameES5,
    isIdentifierNameES6: isIdentifierNameES6,
    isIdentifierES5: isIdentifierES5,
    isIdentifierES6: isIdentifierES6
  };
})();
/* vim: set sw=4 ts=4 et tw=80 : */
},{"./code":"../node_modules/esutils/lib/code.js"}],"../node_modules/esutils/lib/utils.js":[function(require,module,exports) {
/*
  Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/
(function () {
  'use strict';

  exports.ast = require('./ast');
  exports.code = require('./code');
  exports.keyword = require('./keyword');
})();
/* vim: set sw=4 ts=4 et tw=80 : */
},{"./ast":"../node_modules/esutils/lib/ast.js","./code":"../node_modules/esutils/lib/code.js","./keyword":"../node_modules/esutils/lib/keyword.js"}],"../node_modules/babel-types/lib/validators.js":[function(require,module,exports) {
"use strict";

exports.__esModule = true;

var _keys = require("babel-runtime/core-js/object/keys");

var _keys2 = _interopRequireDefault(_keys);

var _typeof2 = require("babel-runtime/helpers/typeof");

var _typeof3 = _interopRequireDefault(_typeof2);

var _getIterator2 = require("babel-runtime/core-js/get-iterator");

var _getIterator3 = _interopRequireDefault(_getIterator2);

exports.isBinding = isBinding;
exports.isReferenced = isReferenced;
exports.isValidIdentifier = isValidIdentifier;
exports.isLet = isLet;
exports.isBlockScoped = isBlockScoped;
exports.isVar = isVar;
exports.isSpecifierDefault = isSpecifierDefault;
exports.isScope = isScope;
exports.isImmutable = isImmutable;
exports.isNodesEquivalent = isNodesEquivalent;

var _retrievers = require("./retrievers");

var _esutils = require("esutils");

var _esutils2 = _interopRequireDefault(_esutils);

var _index = require("./index");

var t = _interopRequireWildcard(_index);

var _constants = require("./constants");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isBinding(node, parent) {
  var keys = _retrievers.getBindingIdentifiers.keys[parent.type];
  if (keys) {
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      var val = parent[key];
      if (Array.isArray(val)) {
        if (val.indexOf(node) >= 0) return true;
      } else {
        if (val === node) return true;
      }
    }
  }

  return false;
}

function isReferenced(node, parent) {
  switch (parent.type) {
    case "BindExpression":
      return parent.object === node || parent.callee === node;

    case "MemberExpression":
    case "JSXMemberExpression":
      if (parent.property === node && parent.computed) {
        return true;
      } else if (parent.object === node) {
        return true;
      } else {
        return false;
      }

    case "MetaProperty":
      return false;

    case "ObjectProperty":
      if (parent.key === node) {
        return parent.computed;
      }

    case "VariableDeclarator":
      return parent.id !== node;

    case "ArrowFunctionExpression":
    case "FunctionDeclaration":
    case "FunctionExpression":
      for (var _iterator = parent.params, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {
        var _ref;

        if (_isArray) {
          if (_i >= _iterator.length) break;
          _ref = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref = _i.value;
        }

        var param = _ref;

        if (param === node) return false;
      }

      return parent.id !== node;

    case "ExportSpecifier":
      if (parent.source) {
        return false;
      } else {
        return parent.local === node;
      }

    case "ExportNamespaceSpecifier":
    case "ExportDefaultSpecifier":
      return false;

    case "JSXAttribute":
      return parent.name !== node;

    case "ClassProperty":
      if (parent.key === node) {
        return parent.computed;
      } else {
        return parent.value === node;
      }

    case "ImportDefaultSpecifier":
    case "ImportNamespaceSpecifier":
    case "ImportSpecifier":
      return false;

    case "ClassDeclaration":
    case "ClassExpression":
      return parent.id !== node;

    case "ClassMethod":
    case "ObjectMethod":
      return parent.key === node && parent.computed;

    case "LabeledStatement":
      return false;

    case "CatchClause":
      return parent.param !== node;

    case "RestElement":
      return false;

    case "AssignmentExpression":
      return parent.right === node;

    case "AssignmentPattern":
      return parent.right === node;

    case "ObjectPattern":
    case "ArrayPattern":
      return false;
  }

  return true;
}

function isValidIdentifier(name) {
  if (typeof name !== "string" || _esutils2.default.keyword.isReservedWordES6(name, true)) {
    return false;
  } else if (name === "await") {
    return false;
  } else {
    return _esutils2.default.keyword.isIdentifierNameES6(name);
  }
}

function isLet(node) {
  return t.isVariableDeclaration(node) && (node.kind !== "var" || node[_constants.BLOCK_SCOPED_SYMBOL]);
}

function isBlockScoped(node) {
  return t.isFunctionDeclaration(node) || t.isClassDeclaration(node) || t.isLet(node);
}

function isVar(node) {
  return t.isVariableDeclaration(node, { kind: "var" }) && !node[_constants.BLOCK_SCOPED_SYMBOL];
}

function isSpecifierDefault(specifier) {
  return t.isImportDefaultSpecifier(specifier) || t.isIdentifier(specifier.imported || specifier.exported, { name: "default" });
}

function isScope(node, parent) {
  if (t.isBlockStatement(node) && t.isFunction(parent, { body: node })) {
    return false;
  }

  return t.isScopable(node);
}

function isImmutable(node) {
  if (t.isType(node.type, "Immutable")) return true;

  if (t.isIdentifier(node)) {
    if (node.name === "undefined") {
      return true;
    } else {
      return false;
    }
  }

  return false;
}

function isNodesEquivalent(a, b) {
  if ((typeof a === "undefined" ? "undefined" : (0, _typeof3.default)(a)) !== "object" || (typeof a === "undefined" ? "undefined" : (0, _typeof3.default)(a)) !== "object" || a == null || b == null) {
    return a === b;
  }

  if (a.type !== b.type) {
    return false;
  }

  var fields = (0, _keys2.default)(t.NODE_FIELDS[a.type] || a.type);

  for (var _iterator2 = fields, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {
    var _ref2;

    if (_isArray2) {
      if (_i2 >= _iterator2.length) break;
      _ref2 = _iterator2[_i2++];
    } else {
      _i2 = _iterator2.next();
      if (_i2.done) break;
      _ref2 = _i2.value;
    }

    var field = _ref2;

    if ((0, _typeof3.default)(a[field]) !== (0, _typeof3.default)(b[field])) {
      return false;
    }

    if (Array.isArray(a[field])) {
      if (!Array.isArray(b[field])) {
        return false;
      }
      if (a[field].length !== b[field].length) {
        return false;
      }

      for (var i = 0; i < a[field].length; i++) {
        if (!isNodesEquivalent(a[field][i], b[field][i])) {
          return false;
        }
      }
      continue;
    }

    if (!isNodesEquivalent(a[field], b[field])) {
      return false;
    }
  }

  return true;
}
},{"babel-runtime/core-js/object/keys":"../node_modules/babel-runtime/core-js/object/keys.js","babel-runtime/helpers/typeof":"../node_modules/babel-runtime/helpers/typeof.js","babel-runtime/core-js/get-iterator":"../node_modules/babel-runtime/core-js/get-iterator.js","./retrievers":"../node_modules/babel-types/lib/retrievers.js","esutils":"../node_modules/esutils/lib/utils.js","./index":"../node_modules/babel-types/lib/index.js","./constants":"../node_modules/babel-types/lib/constants.js"}],"../node_modules/core-js/library/modules/es6.number.max-safe-integer.js":[function(require,module,exports) {
// 20.1.2.6 Number.MAX_SAFE_INTEGER
var $export = require('./_export');

$export($export.S, 'Number', { MAX_SAFE_INTEGER: 0x1fffffffffffff });

},{"./_export":"../node_modules/core-js/library/modules/_export.js"}],"../node_modules/core-js/library/fn/number/max-safe-integer.js":[function(require,module,exports) {
require('../../modules/es6.number.max-safe-integer');
module.exports = 0x1fffffffffffff;

},{"../../modules/es6.number.max-safe-integer":"../node_modules/core-js/library/modules/es6.number.max-safe-integer.js"}],"../node_modules/babel-runtime/core-js/number/max-safe-integer.js":[function(require,module,exports) {
module.exports = { "default": require("core-js/library/fn/number/max-safe-integer"), __esModule: true };
},{"core-js/library/fn/number/max-safe-integer":"../node_modules/core-js/library/fn/number/max-safe-integer.js"}],"../node_modules/lodash/_freeGlobal.js":[function(require,module,exports) {
var global = arguments[3];
/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

module.exports = freeGlobal;

},{}],"../node_modules/lodash/_root.js":[function(require,module,exports) {
var freeGlobal = require('./_freeGlobal');

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

module.exports = root;

},{"./_freeGlobal":"../node_modules/lodash/_freeGlobal.js"}],"../node_modules/lodash/_Symbol.js":[function(require,module,exports) {
var root = require('./_root');

/** Built-in value references. */
var Symbol = root.Symbol;

module.exports = Symbol;

},{"./_root":"../node_modules/lodash/_root.js"}],"../node_modules/lodash/_getRawTag.js":[function(require,module,exports) {
var Symbol = require('./_Symbol');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

module.exports = getRawTag;

},{"./_Symbol":"../node_modules/lodash/_Symbol.js"}],"../node_modules/lodash/_objectToString.js":[function(require,module,exports) {
/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return nativeObjectToString.call(value);
}

module.exports = objectToString;

},{}],"../node_modules/lodash/_baseGetTag.js":[function(require,module,exports) {
var Symbol = require('./_Symbol'),
    getRawTag = require('./_getRawTag'),
    objectToString = require('./_objectToString');

/** `Object#toString` result references. */
var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (symToStringTag && symToStringTag in Object(value))
    ? getRawTag(value)
    : objectToString(value);
}

module.exports = baseGetTag;

},{"./_Symbol":"../node_modules/lodash/_Symbol.js","./_getRawTag":"../node_modules/lodash/_getRawTag.js","./_objectToString":"../node_modules/lodash/_objectToString.js"}],"../node_modules/lodash/_overArg.js":[function(require,module,exports) {
/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

module.exports = overArg;

},{}],"../node_modules/lodash/_getPrototype.js":[function(require,module,exports) {
var overArg = require('./_overArg');

/** Built-in value references. */
var getPrototype = overArg(Object.getPrototypeOf, Object);

module.exports = getPrototype;

},{"./_overArg":"../node_modules/lodash/_overArg.js"}],"../node_modules/lodash/isObjectLike.js":[function(require,module,exports) {
/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

module.exports = isObjectLike;

},{}],"../node_modules/lodash/isPlainObject.js":[function(require,module,exports) {
var baseGetTag = require('./_baseGetTag'),
    getPrototype = require('./_getPrototype'),
    isObjectLike = require('./isObjectLike');

/** `Object#toString` result references. */
var objectTag = '[object Object]';

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to infer the `Object` constructor. */
var objectCtorString = funcToString.call(Object);

/**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * @static
 * @memberOf _
 * @since 0.8.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */
function isPlainObject(value) {
  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
    return false;
  }
  var proto = getPrototype(value);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
    funcToString.call(Ctor) == objectCtorString;
}

module.exports = isPlainObject;

},{"./_baseGetTag":"../node_modules/lodash/_baseGetTag.js","./_getPrototype":"../node_modules/lodash/_getPrototype.js","./isObjectLike":"../node_modules/lodash/isObjectLike.js"}],"../node_modules/lodash/_baseIsRegExp.js":[function(require,module,exports) {
var baseGetTag = require('./_baseGetTag'),
    isObjectLike = require('./isObjectLike');

/** `Object#toString` result references. */
var regexpTag = '[object RegExp]';

/**
 * The base implementation of `_.isRegExp` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
 */
function baseIsRegExp(value) {
  return isObjectLike(value) && baseGetTag(value) == regexpTag;
}

module.exports = baseIsRegExp;

},{"./_baseGetTag":"../node_modules/lodash/_baseGetTag.js","./isObjectLike":"../node_modules/lodash/isObjectLike.js"}],"../node_modules/lodash/_baseUnary.js":[function(require,module,exports) {
/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}

module.exports = baseUnary;

},{}],"../node_modules/lodash/_nodeUtil.js":[function(require,module,exports) {
var freeGlobal = require('./_freeGlobal');

/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Detect free variable `process` from Node.js. */
var freeProcess = moduleExports && freeGlobal.process;

/** Used to access faster Node.js helpers. */
var nodeUtil = (function() {
  try {
    // Use `util.types` for Node.js 10+.
    var types = freeModule && freeModule.require && freeModule.require('util').types;

    if (types) {
      return types;
    }

    // Legacy `process.binding('util')` for Node.js < 10.
    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}());

module.exports = nodeUtil;

},{"./_freeGlobal":"../node_modules/lodash/_freeGlobal.js"}],"../node_modules/lodash/isRegExp.js":[function(require,module,exports) {
var baseIsRegExp = require('./_baseIsRegExp'),
    baseUnary = require('./_baseUnary'),
    nodeUtil = require('./_nodeUtil');

/* Node.js helper references. */
var nodeIsRegExp = nodeUtil && nodeUtil.isRegExp;

/**
 * Checks if `value` is classified as a `RegExp` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
 * @example
 *
 * _.isRegExp(/abc/);
 * // => true
 *
 * _.isRegExp('/abc/');
 * // => false
 */
var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;

module.exports = isRegExp;

},{"./_baseIsRegExp":"../node_modules/lodash/_baseIsRegExp.js","./_baseUnary":"../node_modules/lodash/_baseUnary.js","./_nodeUtil":"../node_modules/lodash/_nodeUtil.js"}],"../node_modules/babel-types/lib/converters.js":[function(require,module,exports) {
"use strict";

exports.__esModule = true;

var _maxSafeInteger = require("babel-runtime/core-js/number/max-safe-integer");

var _maxSafeInteger2 = _interopRequireDefault(_maxSafeInteger);

var _stringify = require("babel-runtime/core-js/json/stringify");

var _stringify2 = _interopRequireDefault(_stringify);

var _getIterator2 = require("babel-runtime/core-js/get-iterator");

var _getIterator3 = _interopRequireDefault(_getIterator2);

exports.toComputedKey = toComputedKey;
exports.toSequenceExpression = toSequenceExpression;
exports.toKeyAlias = toKeyAlias;
exports.toIdentifier = toIdentifier;
exports.toBindingIdentifierName = toBindingIdentifierName;
exports.toStatement = toStatement;
exports.toExpression = toExpression;
exports.toBlock = toBlock;
exports.valueToNode = valueToNode;

var _isPlainObject = require("lodash/isPlainObject");

var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

var _isRegExp = require("lodash/isRegExp");

var _isRegExp2 = _interopRequireDefault(_isRegExp);

var _index = require("./index");

var t = _interopRequireWildcard(_index);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function toComputedKey(node) {
  var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : node.key || node.property;

  if (!node.computed) {
    if (t.isIdentifier(key)) key = t.stringLiteral(key.name);
  }
  return key;
}

function gatherSequenceExpressions(nodes, scope, declars) {
  var exprs = [];
  var ensureLastUndefined = true;

  for (var _iterator = nodes, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {
    var _ref;

    if (_isArray) {
      if (_i >= _iterator.length) break;
      _ref = _iterator[_i++];
    } else {
      _i = _iterator.next();
      if (_i.done) break;
      _ref = _i.value;
    }

    var node = _ref;

    ensureLastUndefined = false;

    if (t.isExpression(node)) {
      exprs.push(node);
    } else if (t.isExpressionStatement(node)) {
      exprs.push(node.expression);
    } else if (t.isVariableDeclaration(node)) {
      if (node.kind !== "var") return;

      for (var _iterator2 = node.declarations, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {
        var _ref2;

        if (_isArray2) {
          if (_i2 >= _iterator2.length) break;
          _ref2 = _iterator2[_i2++];
        } else {
          _i2 = _iterator2.next();
          if (_i2.done) break;
          _ref2 = _i2.value;
        }

        var declar = _ref2;

        var bindings = t.getBindingIdentifiers(declar);
        for (var key in bindings) {
          declars.push({
            kind: node.kind,
            id: bindings[key]
          });
        }

        if (declar.init) {
          exprs.push(t.assignmentExpression("=", declar.id, declar.init));
        }
      }

      ensureLastUndefined = true;
    } else if (t.isIfStatement(node)) {
      var consequent = node.consequent ? gatherSequenceExpressions([node.consequent], scope, declars) : scope.buildUndefinedNode();
      var alternate = node.alternate ? gatherSequenceExpressions([node.alternate], scope, declars) : scope.buildUndefinedNode();
      if (!consequent || !alternate) return;

      exprs.push(t.conditionalExpression(node.test, consequent, alternate));
    } else if (t.isBlockStatement(node)) {
      var body = gatherSequenceExpressions(node.body, scope, declars);
      if (!body) return;

      exprs.push(body);
    } else if (t.isEmptyStatement(node)) {
      ensureLastUndefined = true;
    } else {
      return;
    }
  }

  if (ensureLastUndefined) {
    exprs.push(scope.buildUndefinedNode());
  }

  if (exprs.length === 1) {
    return exprs[0];
  } else {
    return t.sequenceExpression(exprs);
  }
}

function toSequenceExpression(nodes, scope) {
  if (!nodes || !nodes.length) return;

  var declars = [];
  var result = gatherSequenceExpressions(nodes, scope, declars);
  if (!result) return;

  for (var _iterator3 = declars, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {
    var _ref3;

    if (_isArray3) {
      if (_i3 >= _iterator3.length) break;
      _ref3 = _iterator3[_i3++];
    } else {
      _i3 = _iterator3.next();
      if (_i3.done) break;
      _ref3 = _i3.value;
    }

    var declar = _ref3;

    scope.push(declar);
  }

  return result;
}

function toKeyAlias(node) {
  var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : node.key;

  var alias = void 0;

  if (node.kind === "method") {
    return toKeyAlias.increment() + "";
  } else if (t.isIdentifier(key)) {
    alias = key.name;
  } else if (t.isStringLiteral(key)) {
    alias = (0, _stringify2.default)(key.value);
  } else {
    alias = (0, _stringify2.default)(t.removePropertiesDeep(t.cloneDeep(key)));
  }

  if (node.computed) {
    alias = "[" + alias + "]";
  }

  if (node.static) {
    alias = "static:" + alias;
  }

  return alias;
}

toKeyAlias.uid = 0;

toKeyAlias.increment = function () {
  if (toKeyAlias.uid >= _maxSafeInteger2.default) {
    return toKeyAlias.uid = 0;
  } else {
    return toKeyAlias.uid++;
  }
};

function toIdentifier(name) {
  name = name + "";

  name = name.replace(/[^a-zA-Z0-9$_]/g, "-");

  name = name.replace(/^[-0-9]+/, "");

  name = name.replace(/[-\s]+(.)?/g, function (match, c) {
    return c ? c.toUpperCase() : "";
  });

  if (!t.isValidIdentifier(name)) {
    name = "_" + name;
  }

  return name || "_";
}

function toBindingIdentifierName(name) {
  name = toIdentifier(name);
  if (name === "eval" || name === "arguments") name = "_" + name;
  return name;
}

function toStatement(node, ignore) {
  if (t.isStatement(node)) {
    return node;
  }

  var mustHaveId = false;
  var newType = void 0;

  if (t.isClass(node)) {
    mustHaveId = true;
    newType = "ClassDeclaration";
  } else if (t.isFunction(node)) {
    mustHaveId = true;
    newType = "FunctionDeclaration";
  } else if (t.isAssignmentExpression(node)) {
    return t.expressionStatement(node);
  }

  if (mustHaveId && !node.id) {
    newType = false;
  }

  if (!newType) {
    if (ignore) {
      return false;
    } else {
      throw new Error("cannot turn " + node.type + " to a statement");
    }
  }

  node.type = newType;

  return node;
}

function toExpression(node) {
  if (t.isExpressionStatement(node)) {
    node = node.expression;
  }

  if (t.isExpression(node)) {
    return node;
  }

  if (t.isClass(node)) {
    node.type = "ClassExpression";
  } else if (t.isFunction(node)) {
    node.type = "FunctionExpression";
  }

  if (!t.isExpression(node)) {
    throw new Error("cannot turn " + node.type + " to an expression");
  }

  return node;
}

function toBlock(node, parent) {
  if (t.isBlockStatement(node)) {
    return node;
  }

  if (t.isEmptyStatement(node)) {
    node = [];
  }

  if (!Array.isArray(node)) {
    if (!t.isStatement(node)) {
      if (t.isFunction(parent)) {
        node = t.returnStatement(node);
      } else {
        node = t.expressionStatement(node);
      }
    }

    node = [node];
  }

  return t.blockStatement(node);
}

function valueToNode(value) {
  if (value === undefined) {
    return t.identifier("undefined");
  }

  if (value === true || value === false) {
    return t.booleanLiteral(value);
  }

  if (value === null) {
    return t.nullLiteral();
  }

  if (typeof value === "string") {
    return t.stringLiteral(value);
  }

  if (typeof value === "number") {
    return t.numericLiteral(value);
  }

  if ((0, _isRegExp2.default)(value)) {
    var pattern = value.source;
    var flags = value.toString().match(/\/([a-z]+|)$/)[1];
    return t.regExpLiteral(pattern, flags);
  }

  if (Array.isArray(value)) {
    return t.arrayExpression(value.map(t.valueToNode));
  }

  if ((0, _isPlainObject2.default)(value)) {
    var props = [];
    for (var key in value) {
      var nodeKey = void 0;
      if (t.isValidIdentifier(key)) {
        nodeKey = t.identifier(key);
      } else {
        nodeKey = t.stringLiteral(key);
      }
      props.push(t.objectProperty(nodeKey, t.valueToNode(value[key])));
    }
    return t.objectExpression(props);
  }

  throw new Error("don't know how to turn this value into a node");
}
},{"babel-runtime/core-js/number/max-safe-integer":"../node_modules/babel-runtime/core-js/number/max-safe-integer.js","babel-runtime/core-js/json/stringify":"../node_modules/babel-runtime/core-js/json/stringify.js","babel-runtime/core-js/get-iterator":"../node_modules/babel-runtime/core-js/get-iterator.js","lodash/isPlainObject":"../node_modules/lodash/isPlainObject.js","lodash/isRegExp":"../node_modules/lodash/isRegExp.js","./index":"../node_modules/babel-types/lib/index.js"}],"../node_modules/babel-types/lib/flow.js":[function(require,module,exports) {
"use strict";

exports.__esModule = true;
exports.createUnionTypeAnnotation = createUnionTypeAnnotation;
exports.removeTypeDuplicates = removeTypeDuplicates;
exports.createTypeAnnotationBasedOnTypeof = createTypeAnnotationBasedOnTypeof;

var _index = require("./index");

var t = _interopRequireWildcard(_index);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function createUnionTypeAnnotation(types) {
  var flattened = removeTypeDuplicates(types);

  if (flattened.length === 1) {
    return flattened[0];
  } else {
    return t.unionTypeAnnotation(flattened);
  }
}

function removeTypeDuplicates(nodes) {
  var generics = {};
  var bases = {};

  var typeGroups = [];

  var types = [];

  for (var i = 0; i < nodes.length; i++) {
    var node = nodes[i];
    if (!node) continue;

    if (types.indexOf(node) >= 0) {
      continue;
    }

    if (t.isAnyTypeAnnotation(node)) {
      return [node];
    }

    if (t.isFlowBaseAnnotation(node)) {
      bases[node.type] = node;
      continue;
    }

    if (t.isUnionTypeAnnotation(node)) {
      if (typeGroups.indexOf(node.types) < 0) {
        nodes = nodes.concat(node.types);
        typeGroups.push(node.types);
      }
      continue;
    }

    if (t.isGenericTypeAnnotation(node)) {
      var name = node.id.name;

      if (generics[name]) {
        var existing = generics[name];
        if (existing.typeParameters) {
          if (node.typeParameters) {
            existing.typeParameters.params = removeTypeDuplicates(existing.typeParameters.params.concat(node.typeParameters.params));
          }
        } else {
          existing = node.typeParameters;
        }
      } else {
        generics[name] = node;
      }

      continue;
    }

    types.push(node);
  }

  for (var type in bases) {
    types.push(bases[type]);
  }

  for (var _name in generics) {
    types.push(generics[_name]);
  }

  return types;
}

function createTypeAnnotationBasedOnTypeof(type) {
  if (type === "string") {
    return t.stringTypeAnnotation();
  } else if (type === "number") {
    return t.numberTypeAnnotation();
  } else if (type === "undefined") {
    return t.voidTypeAnnotation();
  } else if (type === "boolean") {
    return t.booleanTypeAnnotation();
  } else if (type === "function") {
    return t.genericTypeAnnotation(t.identifier("Function"));
  } else if (type === "object") {
    return t.genericTypeAnnotation(t.identifier("Object"));
  } else if (type === "symbol") {
    return t.genericTypeAnnotation(t.identifier("Symbol"));
  } else {
    throw new Error("Invalid typeof value");
  }
}
},{"./index":"../node_modules/babel-types/lib/index.js"}],"../node_modules/babel-types/node_modules/to-fast-properties/index.js":[function(require,module,exports) {
'use strict';

module.exports = function toFastproperties(o) {
  function Sub() {}

  Sub.prototype = o;
  var receiver = new Sub(); // create an instance

  function ic() {
    return typeof receiver.foo;
  } // perform access


  ic();
  ic();
  return o;
  eval("o" + o); // ensure no dead code elimination
};
},{}],"../node_modules/lodash/_listCacheClear.js":[function(require,module,exports) {
/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}

module.exports = listCacheClear;

},{}],"../node_modules/lodash/eq.js":[function(require,module,exports) {
/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

module.exports = eq;

},{}],"../node_modules/lodash/_assocIndexOf.js":[function(require,module,exports) {
var eq = require('./eq');

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

module.exports = assocIndexOf;

},{"./eq":"../node_modules/lodash/eq.js"}],"../node_modules/lodash/_listCacheDelete.js":[function(require,module,exports) {
var assocIndexOf = require('./_assocIndexOf');

/** Used for built-in method references. */
var arrayProto = Array.prototype;

/** Built-in value references. */
var splice = arrayProto.splice;

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}

module.exports = listCacheDelete;

},{"./_assocIndexOf":"../node_modules/lodash/_assocIndexOf.js"}],"../node_modules/lodash/_listCacheGet.js":[function(require,module,exports) {
var assocIndexOf = require('./_assocIndexOf');

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

module.exports = listCacheGet;

},{"./_assocIndexOf":"../node_modules/lodash/_assocIndexOf.js"}],"../node_modules/lodash/_listCacheHas.js":[function(require,module,exports) {
var assocIndexOf = require('./_assocIndexOf');

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

module.exports = listCacheHas;

},{"./_assocIndexOf":"../node_modules/lodash/_assocIndexOf.js"}],"../node_modules/lodash/_listCacheSet.js":[function(require,module,exports) {
var assocIndexOf = require('./_assocIndexOf');

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

module.exports = listCacheSet;

},{"./_assocIndexOf":"../node_modules/lodash/_assocIndexOf.js"}],"../node_modules/lodash/_ListCache.js":[function(require,module,exports) {
var listCacheClear = require('./_listCacheClear'),
    listCacheDelete = require('./_listCacheDelete'),
    listCacheGet = require('./_listCacheGet'),
    listCacheHas = require('./_listCacheHas'),
    listCacheSet = require('./_listCacheSet');

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

module.exports = ListCache;

},{"./_listCacheClear":"../node_modules/lodash/_listCacheClear.js","./_listCacheDelete":"../node_modules/lodash/_listCacheDelete.js","./_listCacheGet":"../node_modules/lodash/_listCacheGet.js","./_listCacheHas":"../node_modules/lodash/_listCacheHas.js","./_listCacheSet":"../node_modules/lodash/_listCacheSet.js"}],"../node_modules/lodash/_stackClear.js":[function(require,module,exports) {
var ListCache = require('./_ListCache');

/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */
function stackClear() {
  this.__data__ = new ListCache;
  this.size = 0;
}

module.exports = stackClear;

},{"./_ListCache":"../node_modules/lodash/_ListCache.js"}],"../node_modules/lodash/_stackDelete.js":[function(require,module,exports) {
/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function stackDelete(key) {
  var data = this.__data__,
      result = data['delete'](key);

  this.size = data.size;
  return result;
}

module.exports = stackDelete;

},{}],"../node_modules/lodash/_stackGet.js":[function(require,module,exports) {
/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function stackGet(key) {
  return this.__data__.get(key);
}

module.exports = stackGet;

},{}],"../node_modules/lodash/_stackHas.js":[function(require,module,exports) {
/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function stackHas(key) {
  return this.__data__.has(key);
}

module.exports = stackHas;

},{}],"../node_modules/lodash/isObject.js":[function(require,module,exports) {
/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

module.exports = isObject;

},{}],"../node_modules/lodash/isFunction.js":[function(require,module,exports) {
var baseGetTag = require('./_baseGetTag'),
    isObject = require('./isObject');

/** `Object#toString` result references. */
var asyncTag = '[object AsyncFunction]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    proxyTag = '[object Proxy]';

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  if (!isObject(value)) {
    return false;
  }
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.
  var tag = baseGetTag(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}

module.exports = isFunction;

},{"./_baseGetTag":"../node_modules/lodash/_baseGetTag.js","./isObject":"../node_modules/lodash/isObject.js"}],"../node_modules/lodash/_coreJsData.js":[function(require,module,exports) {
var root = require('./_root');

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

module.exports = coreJsData;

},{"./_root":"../node_modules/lodash/_root.js"}],"../node_modules/lodash/_isMasked.js":[function(require,module,exports) {
var coreJsData = require('./_coreJsData');

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

module.exports = isMasked;

},{"./_coreJsData":"../node_modules/lodash/_coreJsData.js"}],"../node_modules/lodash/_toSource.js":[function(require,module,exports) {
/** Used for built-in method references. */
var funcProto = Function.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

module.exports = toSource;

},{}],"../node_modules/lodash/_baseIsNative.js":[function(require,module,exports) {
var isFunction = require('./isFunction'),
    isMasked = require('./_isMasked'),
    isObject = require('./isObject'),
    toSource = require('./_toSource');

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

module.exports = baseIsNative;

},{"./isFunction":"../node_modules/lodash/isFunction.js","./_isMasked":"../node_modules/lodash/_isMasked.js","./isObject":"../node_modules/lodash/isObject.js","./_toSource":"../node_modules/lodash/_toSource.js"}],"../node_modules/lodash/_getValue.js":[function(require,module,exports) {
/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

module.exports = getValue;

},{}],"../node_modules/lodash/_getNative.js":[function(require,module,exports) {
var baseIsNative = require('./_baseIsNative'),
    getValue = require('./_getValue');

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

module.exports = getNative;

},{"./_baseIsNative":"../node_modules/lodash/_baseIsNative.js","./_getValue":"../node_modules/lodash/_getValue.js"}],"../node_modules/lodash/_Map.js":[function(require,module,exports) {
var getNative = require('./_getNative'),
    root = require('./_root');

/* Built-in method references that are verified to be native. */
var Map = getNative(root, 'Map');

module.exports = Map;

},{"./_getNative":"../node_modules/lodash/_getNative.js","./_root":"../node_modules/lodash/_root.js"}],"../node_modules/lodash/_nativeCreate.js":[function(require,module,exports) {
var getNative = require('./_getNative');

/* Built-in method references that are verified to be native. */
var nativeCreate = getNative(Object, 'create');

module.exports = nativeCreate;

},{"./_getNative":"../node_modules/lodash/_getNative.js"}],"../node_modules/lodash/_hashClear.js":[function(require,module,exports) {
var nativeCreate = require('./_nativeCreate');

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
  this.size = 0;
}

module.exports = hashClear;

},{"./_nativeCreate":"../node_modules/lodash/_nativeCreate.js"}],"../node_modules/lodash/_hashDelete.js":[function(require,module,exports) {
/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = hashDelete;

},{}],"../node_modules/lodash/_hashGet.js":[function(require,module,exports) {
var nativeCreate = require('./_nativeCreate');

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

module.exports = hashGet;

},{"./_nativeCreate":"../node_modules/lodash/_nativeCreate.js"}],"../node_modules/lodash/_hashHas.js":[function(require,module,exports) {
var nativeCreate = require('./_nativeCreate');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
}

module.exports = hashHas;

},{"./_nativeCreate":"../node_modules/lodash/_nativeCreate.js"}],"../node_modules/lodash/_hashSet.js":[function(require,module,exports) {
var nativeCreate = require('./_nativeCreate');

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

module.exports = hashSet;

},{"./_nativeCreate":"../node_modules/lodash/_nativeCreate.js"}],"../node_modules/lodash/_Hash.js":[function(require,module,exports) {
var hashClear = require('./_hashClear'),
    hashDelete = require('./_hashDelete'),
    hashGet = require('./_hashGet'),
    hashHas = require('./_hashHas'),
    hashSet = require('./_hashSet');

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

module.exports = Hash;

},{"./_hashClear":"../node_modules/lodash/_hashClear.js","./_hashDelete":"../node_modules/lodash/_hashDelete.js","./_hashGet":"../node_modules/lodash/_hashGet.js","./_hashHas":"../node_modules/lodash/_hashHas.js","./_hashSet":"../node_modules/lodash/_hashSet.js"}],"../node_modules/lodash/_mapCacheClear.js":[function(require,module,exports) {
var Hash = require('./_Hash'),
    ListCache = require('./_ListCache'),
    Map = require('./_Map');

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    'hash': new Hash,
    'map': new (Map || ListCache),
    'string': new Hash
  };
}

module.exports = mapCacheClear;

},{"./_Hash":"../node_modules/lodash/_Hash.js","./_ListCache":"../node_modules/lodash/_ListCache.js","./_Map":"../node_modules/lodash/_Map.js"}],"../node_modules/lodash/_isKeyable.js":[function(require,module,exports) {
/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

module.exports = isKeyable;

},{}],"../node_modules/lodash/_getMapData.js":[function(require,module,exports) {
var isKeyable = require('./_isKeyable');

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

module.exports = getMapData;

},{"./_isKeyable":"../node_modules/lodash/_isKeyable.js"}],"../node_modules/lodash/_mapCacheDelete.js":[function(require,module,exports) {
var getMapData = require('./_getMapData');

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  var result = getMapData(this, key)['delete'](key);
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = mapCacheDelete;

},{"./_getMapData":"../node_modules/lodash/_getMapData.js"}],"../node_modules/lodash/_mapCacheGet.js":[function(require,module,exports) {
var getMapData = require('./_getMapData');

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

module.exports = mapCacheGet;

},{"./_getMapData":"../node_modules/lodash/_getMapData.js"}],"../node_modules/lodash/_mapCacheHas.js":[function(require,module,exports) {
var getMapData = require('./_getMapData');

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

module.exports = mapCacheHas;

},{"./_getMapData":"../node_modules/lodash/_getMapData.js"}],"../node_modules/lodash/_mapCacheSet.js":[function(require,module,exports) {
var getMapData = require('./_getMapData');

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  var data = getMapData(this, key),
      size = data.size;

  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}

module.exports = mapCacheSet;

},{"./_getMapData":"../node_modules/lodash/_getMapData.js"}],"../node_modules/lodash/_MapCache.js":[function(require,module,exports) {
var mapCacheClear = require('./_mapCacheClear'),
    mapCacheDelete = require('./_mapCacheDelete'),
    mapCacheGet = require('./_mapCacheGet'),
    mapCacheHas = require('./_mapCacheHas'),
    mapCacheSet = require('./_mapCacheSet');

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

module.exports = MapCache;

},{"./_mapCacheClear":"../node_modules/lodash/_mapCacheClear.js","./_mapCacheDelete":"../node_modules/lodash/_mapCacheDelete.js","./_mapCacheGet":"../node_modules/lodash/_mapCacheGet.js","./_mapCacheHas":"../node_modules/lodash/_mapCacheHas.js","./_mapCacheSet":"../node_modules/lodash/_mapCacheSet.js"}],"../node_modules/lodash/_stackSet.js":[function(require,module,exports) {
var ListCache = require('./_ListCache'),
    Map = require('./_Map'),
    MapCache = require('./_MapCache');

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */
function stackSet(key, value) {
  var data = this.__data__;
  if (data instanceof ListCache) {
    var pairs = data.__data__;
    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new MapCache(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}

module.exports = stackSet;

},{"./_ListCache":"../node_modules/lodash/_ListCache.js","./_Map":"../node_modules/lodash/_Map.js","./_MapCache":"../node_modules/lodash/_MapCache.js"}],"../node_modules/lodash/_Stack.js":[function(require,module,exports) {
var ListCache = require('./_ListCache'),
    stackClear = require('./_stackClear'),
    stackDelete = require('./_stackDelete'),
    stackGet = require('./_stackGet'),
    stackHas = require('./_stackHas'),
    stackSet = require('./_stackSet');

/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Stack(entries) {
  var data = this.__data__ = new ListCache(entries);
  this.size = data.size;
}

// Add methods to `Stack`.
Stack.prototype.clear = stackClear;
Stack.prototype['delete'] = stackDelete;
Stack.prototype.get = stackGet;
Stack.prototype.has = stackHas;
Stack.prototype.set = stackSet;

module.exports = Stack;

},{"./_ListCache":"../node_modules/lodash/_ListCache.js","./_stackClear":"../node_modules/lodash/_stackClear.js","./_stackDelete":"../node_modules/lodash/_stackDelete.js","./_stackGet":"../node_modules/lodash/_stackGet.js","./_stackHas":"../node_modules/lodash/_stackHas.js","./_stackSet":"../node_modules/lodash/_stackSet.js"}],"../node_modules/lodash/_arrayEach.js":[function(require,module,exports) {
/**
 * A specialized version of `_.forEach` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns `array`.
 */
function arrayEach(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (iteratee(array[index], index, array) === false) {
      break;
    }
  }
  return array;
}

module.exports = arrayEach;

},{}],"../node_modules/lodash/_defineProperty.js":[function(require,module,exports) {
var getNative = require('./_getNative');

var defineProperty = (function() {
  try {
    var func = getNative(Object, 'defineProperty');
    func({}, '', {});
    return func;
  } catch (e) {}
}());

module.exports = defineProperty;

},{"./_getNative":"../node_modules/lodash/_getNative.js"}],"../node_modules/lodash/_baseAssignValue.js":[function(require,module,exports) {
var defineProperty = require('./_defineProperty');

/**
 * The base implementation of `assignValue` and `assignMergeValue` without
 * value checks.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function baseAssignValue(object, key, value) {
  if (key == '__proto__' && defineProperty) {
    defineProperty(object, key, {
      'configurable': true,
      'enumerable': true,
      'value': value,
      'writable': true
    });
  } else {
    object[key] = value;
  }
}

module.exports = baseAssignValue;

},{"./_defineProperty":"../node_modules/lodash/_defineProperty.js"}],"../node_modules/lodash/_assignValue.js":[function(require,module,exports) {
var baseAssignValue = require('./_baseAssignValue'),
    eq = require('./eq');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Assigns `value` to `key` of `object` if the existing value is not equivalent
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
      (value === undefined && !(key in object))) {
    baseAssignValue(object, key, value);
  }
}

module.exports = assignValue;

},{"./_baseAssignValue":"../node_modules/lodash/_baseAssignValue.js","./eq":"../node_modules/lodash/eq.js"}],"../node_modules/lodash/_copyObject.js":[function(require,module,exports) {
var assignValue = require('./_assignValue'),
    baseAssignValue = require('./_baseAssignValue');

/**
 * Copies properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy properties from.
 * @param {Array} props The property identifiers to copy.
 * @param {Object} [object={}] The object to copy properties to.
 * @param {Function} [customizer] The function to customize copied values.
 * @returns {Object} Returns `object`.
 */
function copyObject(source, props, object, customizer) {
  var isNew = !object;
  object || (object = {});

  var index = -1,
      length = props.length;

  while (++index < length) {
    var key = props[index];

    var newValue = customizer
      ? customizer(object[key], source[key], key, object, source)
      : undefined;

    if (newValue === undefined) {
      newValue = source[key];
    }
    if (isNew) {
      baseAssignValue(object, key, newValue);
    } else {
      assignValue(object, key, newValue);
    }
  }
  return object;
}

module.exports = copyObject;

},{"./_assignValue":"../node_modules/lodash/_assignValue.js","./_baseAssignValue":"../node_modules/lodash/_baseAssignValue.js"}],"../node_modules/lodash/_baseTimes.js":[function(require,module,exports) {
/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

module.exports = baseTimes;

},{}],"../node_modules/lodash/_baseIsArguments.js":[function(require,module,exports) {
var baseGetTag = require('./_baseGetTag'),
    isObjectLike = require('./isObjectLike');

/** `Object#toString` result references. */
var argsTag = '[object Arguments]';

/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */
function baseIsArguments(value) {
  return isObjectLike(value) && baseGetTag(value) == argsTag;
}

module.exports = baseIsArguments;

},{"./_baseGetTag":"../node_modules/lodash/_baseGetTag.js","./isObjectLike":"../node_modules/lodash/isObjectLike.js"}],"../node_modules/lodash/isArguments.js":[function(require,module,exports) {
var baseIsArguments = require('./_baseIsArguments'),
    isObjectLike = require('./isObjectLike');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
    !propertyIsEnumerable.call(value, 'callee');
};

module.exports = isArguments;

},{"./_baseIsArguments":"../node_modules/lodash/_baseIsArguments.js","./isObjectLike":"../node_modules/lodash/isObjectLike.js"}],"../node_modules/lodash/isArray.js":[function(require,module,exports) {
/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

module.exports = isArray;

},{}],"../node_modules/lodash/stubFalse.js":[function(require,module,exports) {
/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

module.exports = stubFalse;

},{}],"../node_modules/lodash/isBuffer.js":[function(require,module,exports) {

var root = require('./_root'),
    stubFalse = require('./stubFalse');

/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */
var isBuffer = nativeIsBuffer || stubFalse;

module.exports = isBuffer;

},{"./_root":"../node_modules/lodash/_root.js","./stubFalse":"../node_modules/lodash/stubFalse.js"}],"../node_modules/lodash/_isIndex.js":[function(require,module,exports) {
/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER : length;

  return !!length &&
    (type == 'number' ||
      (type != 'symbol' && reIsUint.test(value))) &&
        (value > -1 && value % 1 == 0 && value < length);
}

module.exports = isIndex;

},{}],"../node_modules/lodash/isLength.js":[function(require,module,exports) {
/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

module.exports = isLength;

},{}],"../node_modules/lodash/_baseIsTypedArray.js":[function(require,module,exports) {
var baseGetTag = require('./_baseGetTag'),
    isLength = require('./isLength'),
    isObjectLike = require('./isObjectLike');

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values of typed arrays. */
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
typedArrayTags[errorTag] = typedArrayTags[funcTag] =
typedArrayTags[mapTag] = typedArrayTags[numberTag] =
typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
typedArrayTags[setTag] = typedArrayTags[stringTag] =
typedArrayTags[weakMapTag] = false;

/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */
function baseIsTypedArray(value) {
  return isObjectLike(value) &&
    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
}

module.exports = baseIsTypedArray;

},{"./_baseGetTag":"../node_modules/lodash/_baseGetTag.js","./isLength":"../node_modules/lodash/isLength.js","./isObjectLike":"../node_modules/lodash/isObjectLike.js"}],"../node_modules/lodash/isTypedArray.js":[function(require,module,exports) {
var baseIsTypedArray = require('./_baseIsTypedArray'),
    baseUnary = require('./_baseUnary'),
    nodeUtil = require('./_nodeUtil');

/* Node.js helper references. */
var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

module.exports = isTypedArray;

},{"./_baseIsTypedArray":"../node_modules/lodash/_baseIsTypedArray.js","./_baseUnary":"../node_modules/lodash/_baseUnary.js","./_nodeUtil":"../node_modules/lodash/_nodeUtil.js"}],"../node_modules/lodash/_arrayLikeKeys.js":[function(require,module,exports) {
var baseTimes = require('./_baseTimes'),
    isArguments = require('./isArguments'),
    isArray = require('./isArray'),
    isBuffer = require('./isBuffer'),
    isIndex = require('./_isIndex'),
    isTypedArray = require('./isTypedArray');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  var isArr = isArray(value),
      isArg = !isArr && isArguments(value),
      isBuff = !isArr && !isArg && isBuffer(value),
      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? baseTimes(value.length, String) : [],
      length = result.length;

  for (var key in value) {
    if ((inherited || hasOwnProperty.call(value, key)) &&
        !(skipIndexes && (
           // Safari 9 has enumerable `arguments.length` in strict mode.
           key == 'length' ||
           // Node.js 0.10 has enumerable non-index properties on buffers.
           (isBuff && (key == 'offset' || key == 'parent')) ||
           // PhantomJS 2 has enumerable non-index properties on typed arrays.
           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
           // Skip index properties.
           isIndex(key, length)
        ))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = arrayLikeKeys;

},{"./_baseTimes":"../node_modules/lodash/_baseTimes.js","./isArguments":"../node_modules/lodash/isArguments.js","./isArray":"../node_modules/lodash/isArray.js","./isBuffer":"../node_modules/lodash/isBuffer.js","./_isIndex":"../node_modules/lodash/_isIndex.js","./isTypedArray":"../node_modules/lodash/isTypedArray.js"}],"../node_modules/lodash/_isPrototype.js":[function(require,module,exports) {
/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

  return value === proto;
}

module.exports = isPrototype;

},{}],"../node_modules/lodash/_nativeKeys.js":[function(require,module,exports) {
var overArg = require('./_overArg');

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeKeys = overArg(Object.keys, Object);

module.exports = nativeKeys;

},{"./_overArg":"../node_modules/lodash/_overArg.js"}],"../node_modules/lodash/_baseKeys.js":[function(require,module,exports) {
var isPrototype = require('./_isPrototype'),
    nativeKeys = require('./_nativeKeys');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeys(object) {
  if (!isPrototype(object)) {
    return nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeys;

},{"./_isPrototype":"../node_modules/lodash/_isPrototype.js","./_nativeKeys":"../node_modules/lodash/_nativeKeys.js"}],"../node_modules/lodash/isArrayLike.js":[function(require,module,exports) {
var isFunction = require('./isFunction'),
    isLength = require('./isLength');

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

module.exports = isArrayLike;

},{"./isFunction":"../node_modules/lodash/isFunction.js","./isLength":"../node_modules/lodash/isLength.js"}],"../node_modules/lodash/keys.js":[function(require,module,exports) {
var arrayLikeKeys = require('./_arrayLikeKeys'),
    baseKeys = require('./_baseKeys'),
    isArrayLike = require('./isArrayLike');

/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
function keys(object) {
  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}

module.exports = keys;

},{"./_arrayLikeKeys":"../node_modules/lodash/_arrayLikeKeys.js","./_baseKeys":"../node_modules/lodash/_baseKeys.js","./isArrayLike":"../node_modules/lodash/isArrayLike.js"}],"../node_modules/lodash/_baseAssign.js":[function(require,module,exports) {
var copyObject = require('./_copyObject'),
    keys = require('./keys');

/**
 * The base implementation of `_.assign` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssign(object, source) {
  return object && copyObject(source, keys(source), object);
}

module.exports = baseAssign;

},{"./_copyObject":"../node_modules/lodash/_copyObject.js","./keys":"../node_modules/lodash/keys.js"}],"../node_modules/lodash/_nativeKeysIn.js":[function(require,module,exports) {
/**
 * This function is like
 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * except that it includes inherited enumerable properties.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function nativeKeysIn(object) {
  var result = [];
  if (object != null) {
    for (var key in Object(object)) {
      result.push(key);
    }
  }
  return result;
}

module.exports = nativeKeysIn;

},{}],"../node_modules/lodash/_baseKeysIn.js":[function(require,module,exports) {
var isObject = require('./isObject'),
    isPrototype = require('./_isPrototype'),
    nativeKeysIn = require('./_nativeKeysIn');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeysIn(object) {
  if (!isObject(object)) {
    return nativeKeysIn(object);
  }
  var isProto = isPrototype(object),
      result = [];

  for (var key in object) {
    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeysIn;

},{"./isObject":"../node_modules/lodash/isObject.js","./_isPrototype":"../node_modules/lodash/_isPrototype.js","./_nativeKeysIn":"../node_modules/lodash/_nativeKeysIn.js"}],"../node_modules/lodash/keysIn.js":[function(require,module,exports) {
var arrayLikeKeys = require('./_arrayLikeKeys'),
    baseKeysIn = require('./_baseKeysIn'),
    isArrayLike = require('./isArrayLike');

/**
 * Creates an array of the own and inherited enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keysIn(new Foo);
 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
 */
function keysIn(object) {
  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
}

module.exports = keysIn;

},{"./_arrayLikeKeys":"../node_modules/lodash/_arrayLikeKeys.js","./_baseKeysIn":"../node_modules/lodash/_baseKeysIn.js","./isArrayLike":"../node_modules/lodash/isArrayLike.js"}],"../node_modules/lodash/_baseAssignIn.js":[function(require,module,exports) {
var copyObject = require('./_copyObject'),
    keysIn = require('./keysIn');

/**
 * The base implementation of `_.assignIn` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssignIn(object, source) {
  return object && copyObject(source, keysIn(source), object);
}

module.exports = baseAssignIn;

},{"./_copyObject":"../node_modules/lodash/_copyObject.js","./keysIn":"../node_modules/lodash/keysIn.js"}],"../node_modules/lodash/_cloneBuffer.js":[function(require,module,exports) {

var root = require('./_root');

/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined,
    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;

/**
 * Creates a clone of  `buffer`.
 *
 * @private
 * @param {Buffer} buffer The buffer to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Buffer} Returns the cloned buffer.
 */
function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }
  var length = buffer.length,
      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

  buffer.copy(result);
  return result;
}

module.exports = cloneBuffer;

},{"./_root":"../node_modules/lodash/_root.js"}],"../node_modules/lodash/_copyArray.js":[function(require,module,exports) {
/**
 * Copies the values of `source` to `array`.
 *
 * @private
 * @param {Array} source The array to copy values from.
 * @param {Array} [array=[]] The array to copy values to.
 * @returns {Array} Returns `array`.
 */
function copyArray(source, array) {
  var index = -1,
      length = source.length;

  array || (array = Array(length));
  while (++index < length) {
    array[index] = source[index];
  }
  return array;
}

module.exports = copyArray;

},{}],"../node_modules/lodash/_arrayFilter.js":[function(require,module,exports) {
/**
 * A specialized version of `_.filter` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */
function arrayFilter(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result[resIndex++] = value;
    }
  }
  return result;
}

module.exports = arrayFilter;

},{}],"../node_modules/lodash/stubArray.js":[function(require,module,exports) {
/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */
function stubArray() {
  return [];
}

module.exports = stubArray;

},{}],"../node_modules/lodash/_getSymbols.js":[function(require,module,exports) {
var arrayFilter = require('./_arrayFilter'),
    stubArray = require('./stubArray');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return arrayFilter(nativeGetSymbols(object), function(symbol) {
    return propertyIsEnumerable.call(object, symbol);
  });
};

module.exports = getSymbols;

},{"./_arrayFilter":"../node_modules/lodash/_arrayFilter.js","./stubArray":"../node_modules/lodash/stubArray.js"}],"../node_modules/lodash/_copySymbols.js":[function(require,module,exports) {
var copyObject = require('./_copyObject'),
    getSymbols = require('./_getSymbols');

/**
 * Copies own symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbols(source, object) {
  return copyObject(source, getSymbols(source), object);
}

module.exports = copySymbols;

},{"./_copyObject":"../node_modules/lodash/_copyObject.js","./_getSymbols":"../node_modules/lodash/_getSymbols.js"}],"../node_modules/lodash/_arrayPush.js":[function(require,module,exports) {
/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */
function arrayPush(array, values) {
  var index = -1,
      length = values.length,
      offset = array.length;

  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}

module.exports = arrayPush;

},{}],"../node_modules/lodash/_getSymbolsIn.js":[function(require,module,exports) {
var arrayPush = require('./_arrayPush'),
    getPrototype = require('./_getPrototype'),
    getSymbols = require('./_getSymbols'),
    stubArray = require('./stubArray');

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own and inherited enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
  var result = [];
  while (object) {
    arrayPush(result, getSymbols(object));
    object = getPrototype(object);
  }
  return result;
};

module.exports = getSymbolsIn;

},{"./_arrayPush":"../node_modules/lodash/_arrayPush.js","./_getPrototype":"../node_modules/lodash/_getPrototype.js","./_getSymbols":"../node_modules/lodash/_getSymbols.js","./stubArray":"../node_modules/lodash/stubArray.js"}],"../node_modules/lodash/_copySymbolsIn.js":[function(require,module,exports) {
var copyObject = require('./_copyObject'),
    getSymbolsIn = require('./_getSymbolsIn');

/**
 * Copies own and inherited symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbolsIn(source, object) {
  return copyObject(source, getSymbolsIn(source), object);
}

module.exports = copySymbolsIn;

},{"./_copyObject":"../node_modules/lodash/_copyObject.js","./_getSymbolsIn":"../node_modules/lodash/_getSymbolsIn.js"}],"../node_modules/lodash/_baseGetAllKeys.js":[function(require,module,exports) {
var arrayPush = require('./_arrayPush'),
    isArray = require('./isArray');

/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */
function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
}

module.exports = baseGetAllKeys;

},{"./_arrayPush":"../node_modules/lodash/_arrayPush.js","./isArray":"../node_modules/lodash/isArray.js"}],"../node_modules/lodash/_getAllKeys.js":[function(require,module,exports) {
var baseGetAllKeys = require('./_baseGetAllKeys'),
    getSymbols = require('./_getSymbols'),
    keys = require('./keys');

/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeys(object) {
  return baseGetAllKeys(object, keys, getSymbols);
}

module.exports = getAllKeys;

},{"./_baseGetAllKeys":"../node_modules/lodash/_baseGetAllKeys.js","./_getSymbols":"../node_modules/lodash/_getSymbols.js","./keys":"../node_modules/lodash/keys.js"}],"../node_modules/lodash/_getAllKeysIn.js":[function(require,module,exports) {
var baseGetAllKeys = require('./_baseGetAllKeys'),
    getSymbolsIn = require('./_getSymbolsIn'),
    keysIn = require('./keysIn');

/**
 * Creates an array of own and inherited enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeysIn(object) {
  return baseGetAllKeys(object, keysIn, getSymbolsIn);
}

module.exports = getAllKeysIn;

},{"./_baseGetAllKeys":"../node_modules/lodash/_baseGetAllKeys.js","./_getSymbolsIn":"../node_modules/lodash/_getSymbolsIn.js","./keysIn":"../node_modules/lodash/keysIn.js"}],"../node_modules/lodash/_DataView.js":[function(require,module,exports) {
var getNative = require('./_getNative'),
    root = require('./_root');

/* Built-in method references that are verified to be native. */
var DataView = getNative(root, 'DataView');

module.exports = DataView;

},{"./_getNative":"../node_modules/lodash/_getNative.js","./_root":"../node_modules/lodash/_root.js"}],"../node_modules/lodash/_Promise.js":[function(require,module,exports) {
var getNative = require('./_getNative'),
    root = require('./_root');

/* Built-in method references that are verified to be native. */
var Promise = getNative(root, 'Promise');

module.exports = Promise;

},{"./_getNative":"../node_modules/lodash/_getNative.js","./_root":"../node_modules/lodash/_root.js"}],"../node_modules/lodash/_Set.js":[function(require,module,exports) {
var getNative = require('./_getNative'),
    root = require('./_root');

/* Built-in method references that are verified to be native. */
var Set = getNative(root, 'Set');

module.exports = Set;

},{"./_getNative":"../node_modules/lodash/_getNative.js","./_root":"../node_modules/lodash/_root.js"}],"../node_modules/lodash/_WeakMap.js":[function(require,module,exports) {
var getNative = require('./_getNative'),
    root = require('./_root');

/* Built-in method references that are verified to be native. */
var WeakMap = getNative(root, 'WeakMap');

module.exports = WeakMap;

},{"./_getNative":"../node_modules/lodash/_getNative.js","./_root":"../node_modules/lodash/_root.js"}],"../node_modules/lodash/_getTag.js":[function(require,module,exports) {
var DataView = require('./_DataView'),
    Map = require('./_Map'),
    Promise = require('./_Promise'),
    Set = require('./_Set'),
    WeakMap = require('./_WeakMap'),
    baseGetTag = require('./_baseGetTag'),
    toSource = require('./_toSource');

/** `Object#toString` result references. */
var mapTag = '[object Map]',
    objectTag = '[object Object]',
    promiseTag = '[object Promise]',
    setTag = '[object Set]',
    weakMapTag = '[object WeakMap]';

var dataViewTag = '[object DataView]';

/** Used to detect maps, sets, and weakmaps. */
var dataViewCtorString = toSource(DataView),
    mapCtorString = toSource(Map),
    promiseCtorString = toSource(Promise),
    setCtorString = toSource(Set),
    weakMapCtorString = toSource(WeakMap);

/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
var getTag = baseGetTag;

// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
    (Map && getTag(new Map) != mapTag) ||
    (Promise && getTag(Promise.resolve()) != promiseTag) ||
    (Set && getTag(new Set) != setTag) ||
    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
  getTag = function(value) {
    var result = baseGetTag(value),
        Ctor = result == objectTag ? value.constructor : undefined,
        ctorString = Ctor ? toSource(Ctor) : '';

    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString: return dataViewTag;
        case mapCtorString: return mapTag;
        case promiseCtorString: return promiseTag;
        case setCtorString: return setTag;
        case weakMapCtorString: return weakMapTag;
      }
    }
    return result;
  };
}

module.exports = getTag;

},{"./_DataView":"../node_modules/lodash/_DataView.js","./_Map":"../node_modules/lodash/_Map.js","./_Promise":"../node_modules/lodash/_Promise.js","./_Set":"../node_modules/lodash/_Set.js","./_WeakMap":"../node_modules/lodash/_WeakMap.js","./_baseGetTag":"../node_modules/lodash/_baseGetTag.js","./_toSource":"../node_modules/lodash/_toSource.js"}],"../node_modules/lodash/_initCloneArray.js":[function(require,module,exports) {
/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Initializes an array clone.
 *
 * @private
 * @param {Array} array The array to clone.
 * @returns {Array} Returns the initialized clone.
 */
function initCloneArray(array) {
  var length = array.length,
      result = new array.constructor(length);

  // Add properties assigned by `RegExp#exec`.
  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
    result.index = array.index;
    result.input = array.input;
  }
  return result;
}

module.exports = initCloneArray;

},{}],"../node_modules/lodash/_Uint8Array.js":[function(require,module,exports) {
var root = require('./_root');

/** Built-in value references. */
var Uint8Array = root.Uint8Array;

module.exports = Uint8Array;

},{"./_root":"../node_modules/lodash/_root.js"}],"../node_modules/lodash/_cloneArrayBuffer.js":[function(require,module,exports) {
var Uint8Array = require('./_Uint8Array');

/**
 * Creates a clone of `arrayBuffer`.
 *
 * @private
 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
 * @returns {ArrayBuffer} Returns the cloned array buffer.
 */
function cloneArrayBuffer(arrayBuffer) {
  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
  return result;
}

module.exports = cloneArrayBuffer;

},{"./_Uint8Array":"../node_modules/lodash/_Uint8Array.js"}],"../node_modules/lodash/_cloneDataView.js":[function(require,module,exports) {
var cloneArrayBuffer = require('./_cloneArrayBuffer');

/**
 * Creates a clone of `dataView`.
 *
 * @private
 * @param {Object} dataView The data view to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned data view.
 */
function cloneDataView(dataView, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
}

module.exports = cloneDataView;

},{"./_cloneArrayBuffer":"../node_modules/lodash/_cloneArrayBuffer.js"}],"../node_modules/lodash/_cloneRegExp.js":[function(require,module,exports) {
/** Used to match `RegExp` flags from their coerced string values. */
var reFlags = /\w*$/;

/**
 * Creates a clone of `regexp`.
 *
 * @private
 * @param {Object} regexp The regexp to clone.
 * @returns {Object} Returns the cloned regexp.
 */
function cloneRegExp(regexp) {
  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
  result.lastIndex = regexp.lastIndex;
  return result;
}

module.exports = cloneRegExp;

},{}],"../node_modules/lodash/_cloneSymbol.js":[function(require,module,exports) {
var Symbol = require('./_Symbol');

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

/**
 * Creates a clone of the `symbol` object.
 *
 * @private
 * @param {Object} symbol The symbol object to clone.
 * @returns {Object} Returns the cloned symbol object.
 */
function cloneSymbol(symbol) {
  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
}

module.exports = cloneSymbol;

},{"./_Symbol":"../node_modules/lodash/_Symbol.js"}],"../node_modules/lodash/_cloneTypedArray.js":[function(require,module,exports) {
var cloneArrayBuffer = require('./_cloneArrayBuffer');

/**
 * Creates a clone of `typedArray`.
 *
 * @private
 * @param {Object} typedArray The typed array to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned typed array.
 */
function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}

module.exports = cloneTypedArray;

},{"./_cloneArrayBuffer":"../node_modules/lodash/_cloneArrayBuffer.js"}],"../node_modules/lodash/_initCloneByTag.js":[function(require,module,exports) {
var cloneArrayBuffer = require('./_cloneArrayBuffer'),
    cloneDataView = require('./_cloneDataView'),
    cloneRegExp = require('./_cloneRegExp'),
    cloneSymbol = require('./_cloneSymbol'),
    cloneTypedArray = require('./_cloneTypedArray');

/** `Object#toString` result references. */
var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/**
 * Initializes an object clone based on its `toStringTag`.
 *
 * **Note:** This function only supports cloning values with tags of
 * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
 *
 * @private
 * @param {Object} object The object to clone.
 * @param {string} tag The `toStringTag` of the object to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneByTag(object, tag, isDeep) {
  var Ctor = object.constructor;
  switch (tag) {
    case arrayBufferTag:
      return cloneArrayBuffer(object);

    case boolTag:
    case dateTag:
      return new Ctor(+object);

    case dataViewTag:
      return cloneDataView(object, isDeep);

    case float32Tag: case float64Tag:
    case int8Tag: case int16Tag: case int32Tag:
    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
      return cloneTypedArray(object, isDeep);

    case mapTag:
      return new Ctor;

    case numberTag:
    case stringTag:
      return new Ctor(object);

    case regexpTag:
      return cloneRegExp(object);

    case setTag:
      return new Ctor;

    case symbolTag:
      return cloneSymbol(object);
  }
}

module.exports = initCloneByTag;

},{"./_cloneArrayBuffer":"../node_modules/lodash/_cloneArrayBuffer.js","./_cloneDataView":"../node_modules/lodash/_cloneDataView.js","./_cloneRegExp":"../node_modules/lodash/_cloneRegExp.js","./_cloneSymbol":"../node_modules/lodash/_cloneSymbol.js","./_cloneTypedArray":"../node_modules/lodash/_cloneTypedArray.js"}],"../node_modules/lodash/_baseCreate.js":[function(require,module,exports) {
var isObject = require('./isObject');

/** Built-in value references. */
var objectCreate = Object.create;

/**
 * The base implementation of `_.create` without support for assigning
 * properties to the created object.
 *
 * @private
 * @param {Object} proto The object to inherit from.
 * @returns {Object} Returns the new object.
 */
var baseCreate = (function() {
  function object() {}
  return function(proto) {
    if (!isObject(proto)) {
      return {};
    }
    if (objectCreate) {
      return objectCreate(proto);
    }
    object.prototype = proto;
    var result = new object;
    object.prototype = undefined;
    return result;
  };
}());

module.exports = baseCreate;

},{"./isObject":"../node_modules/lodash/isObject.js"}],"../node_modules/lodash/_initCloneObject.js":[function(require,module,exports) {
var baseCreate = require('./_baseCreate'),
    getPrototype = require('./_getPrototype'),
    isPrototype = require('./_isPrototype');

/**
 * Initializes an object clone.
 *
 * @private
 * @param {Object} object The object to clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneObject(object) {
  return (typeof object.constructor == 'function' && !isPrototype(object))
    ? baseCreate(getPrototype(object))
    : {};
}

module.exports = initCloneObject;

},{"./_baseCreate":"../node_modules/lodash/_baseCreate.js","./_getPrototype":"../node_modules/lodash/_getPrototype.js","./_isPrototype":"../node_modules/lodash/_isPrototype.js"}],"../node_modules/lodash/_baseIsMap.js":[function(require,module,exports) {
var getTag = require('./_getTag'),
    isObjectLike = require('./isObjectLike');

/** `Object#toString` result references. */
var mapTag = '[object Map]';

/**
 * The base implementation of `_.isMap` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
 */
function baseIsMap(value) {
  return isObjectLike(value) && getTag(value) == mapTag;
}

module.exports = baseIsMap;

},{"./_getTag":"../node_modules/lodash/_getTag.js","./isObjectLike":"../node_modules/lodash/isObjectLike.js"}],"../node_modules/lodash/isMap.js":[function(require,module,exports) {
var baseIsMap = require('./_baseIsMap'),
    baseUnary = require('./_baseUnary'),
    nodeUtil = require('./_nodeUtil');

/* Node.js helper references. */
var nodeIsMap = nodeUtil && nodeUtil.isMap;

/**
 * Checks if `value` is classified as a `Map` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
 * @example
 *
 * _.isMap(new Map);
 * // => true
 *
 * _.isMap(new WeakMap);
 * // => false
 */
var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

module.exports = isMap;

},{"./_baseIsMap":"../node_modules/lodash/_baseIsMap.js","./_baseUnary":"../node_modules/lodash/_baseUnary.js","./_nodeUtil":"../node_modules/lodash/_nodeUtil.js"}],"../node_modules/lodash/_baseIsSet.js":[function(require,module,exports) {
var getTag = require('./_getTag'),
    isObjectLike = require('./isObjectLike');

/** `Object#toString` result references. */
var setTag = '[object Set]';

/**
 * The base implementation of `_.isSet` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
 */
function baseIsSet(value) {
  return isObjectLike(value) && getTag(value) == setTag;
}

module.exports = baseIsSet;

},{"./_getTag":"../node_modules/lodash/_getTag.js","./isObjectLike":"../node_modules/lodash/isObjectLike.js"}],"../node_modules/lodash/isSet.js":[function(require,module,exports) {
var baseIsSet = require('./_baseIsSet'),
    baseUnary = require('./_baseUnary'),
    nodeUtil = require('./_nodeUtil');

/* Node.js helper references. */
var nodeIsSet = nodeUtil && nodeUtil.isSet;

/**
 * Checks if `value` is classified as a `Set` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
 * @example
 *
 * _.isSet(new Set);
 * // => true
 *
 * _.isSet(new WeakSet);
 * // => false
 */
var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

module.exports = isSet;

},{"./_baseIsSet":"../node_modules/lodash/_baseIsSet.js","./_baseUnary":"../node_modules/lodash/_baseUnary.js","./_nodeUtil":"../node_modules/lodash/_nodeUtil.js"}],"../node_modules/lodash/_baseClone.js":[function(require,module,exports) {
var Stack = require('./_Stack'),
    arrayEach = require('./_arrayEach'),
    assignValue = require('./_assignValue'),
    baseAssign = require('./_baseAssign'),
    baseAssignIn = require('./_baseAssignIn'),
    cloneBuffer = require('./_cloneBuffer'),
    copyArray = require('./_copyArray'),
    copySymbols = require('./_copySymbols'),
    copySymbolsIn = require('./_copySymbolsIn'),
    getAllKeys = require('./_getAllKeys'),
    getAllKeysIn = require('./_getAllKeysIn'),
    getTag = require('./_getTag'),
    initCloneArray = require('./_initCloneArray'),
    initCloneByTag = require('./_initCloneByTag'),
    initCloneObject = require('./_initCloneObject'),
    isArray = require('./isArray'),
    isBuffer = require('./isBuffer'),
    isMap = require('./isMap'),
    isObject = require('./isObject'),
    isSet = require('./isSet'),
    keys = require('./keys');

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1,
    CLONE_FLAT_FLAG = 2,
    CLONE_SYMBOLS_FLAG = 4;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values supported by `_.clone`. */
var cloneableTags = {};
cloneableTags[argsTag] = cloneableTags[arrayTag] =
cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
cloneableTags[boolTag] = cloneableTags[dateTag] =
cloneableTags[float32Tag] = cloneableTags[float64Tag] =
cloneableTags[int8Tag] = cloneableTags[int16Tag] =
cloneableTags[int32Tag] = cloneableTags[mapTag] =
cloneableTags[numberTag] = cloneableTags[objectTag] =
cloneableTags[regexpTag] = cloneableTags[setTag] =
cloneableTags[stringTag] = cloneableTags[symbolTag] =
cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
cloneableTags[errorTag] = cloneableTags[funcTag] =
cloneableTags[weakMapTag] = false;

/**
 * The base implementation of `_.clone` and `_.cloneDeep` which tracks
 * traversed objects.
 *
 * @private
 * @param {*} value The value to clone.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Deep clone
 *  2 - Flatten inherited properties
 *  4 - Clone symbols
 * @param {Function} [customizer] The function to customize cloning.
 * @param {string} [key] The key of `value`.
 * @param {Object} [object] The parent object of `value`.
 * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
 * @returns {*} Returns the cloned value.
 */
function baseClone(value, bitmask, customizer, key, object, stack) {
  var result,
      isDeep = bitmask & CLONE_DEEP_FLAG,
      isFlat = bitmask & CLONE_FLAT_FLAG,
      isFull = bitmask & CLONE_SYMBOLS_FLAG;

  if (customizer) {
    result = object ? customizer(value, key, object, stack) : customizer(value);
  }
  if (result !== undefined) {
    return result;
  }
  if (!isObject(value)) {
    return value;
  }
  var isArr = isArray(value);
  if (isArr) {
    result = initCloneArray(value);
    if (!isDeep) {
      return copyArray(value, result);
    }
  } else {
    var tag = getTag(value),
        isFunc = tag == funcTag || tag == genTag;

    if (isBuffer(value)) {
      return cloneBuffer(value, isDeep);
    }
    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
      result = (isFlat || isFunc) ? {} : initCloneObject(value);
      if (!isDeep) {
        return isFlat
          ? copySymbolsIn(value, baseAssignIn(result, value))
          : copySymbols(value, baseAssign(result, value));
      }
    } else {
      if (!cloneableTags[tag]) {
        return object ? value : {};
      }
      result = initCloneByTag(value, tag, isDeep);
    }
  }
  // Check for circular references and return its corresponding clone.
  stack || (stack = new Stack);
  var stacked = stack.get(value);
  if (stacked) {
    return stacked;
  }
  stack.set(value, result);

  if (isSet(value)) {
    value.forEach(function(subValue) {
      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
    });
  } else if (isMap(value)) {
    value.forEach(function(subValue, key) {
      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
    });
  }

  var keysFunc = isFull
    ? (isFlat ? getAllKeysIn : getAllKeys)
    : (isFlat ? keysIn : keys);

  var props = isArr ? undefined : keysFunc(value);
  arrayEach(props || value, function(subValue, key) {
    if (props) {
      key = subValue;
      subValue = value[key];
    }
    // Recursively populate clone (susceptible to call stack limits).
    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
  });
  return result;
}

module.exports = baseClone;

},{"./_Stack":"../node_modules/lodash/_Stack.js","./_arrayEach":"../node_modules/lodash/_arrayEach.js","./_assignValue":"../node_modules/lodash/_assignValue.js","./_baseAssign":"../node_modules/lodash/_baseAssign.js","./_baseAssignIn":"../node_modules/lodash/_baseAssignIn.js","./_cloneBuffer":"../node_modules/lodash/_cloneBuffer.js","./_copyArray":"../node_modules/lodash/_copyArray.js","./_copySymbols":"../node_modules/lodash/_copySymbols.js","./_copySymbolsIn":"../node_modules/lodash/_copySymbolsIn.js","./_getAllKeys":"../node_modules/lodash/_getAllKeys.js","./_getAllKeysIn":"../node_modules/lodash/_getAllKeysIn.js","./_getTag":"../node_modules/lodash/_getTag.js","./_initCloneArray":"../node_modules/lodash/_initCloneArray.js","./_initCloneByTag":"../node_modules/lodash/_initCloneByTag.js","./_initCloneObject":"../node_modules/lodash/_initCloneObject.js","./isArray":"../node_modules/lodash/isArray.js","./isBuffer":"../node_modules/lodash/isBuffer.js","./isMap":"../node_modules/lodash/isMap.js","./isObject":"../node_modules/lodash/isObject.js","./isSet":"../node_modules/lodash/isSet.js","./keys":"../node_modules/lodash/keys.js"}],"../node_modules/lodash/clone.js":[function(require,module,exports) {
var baseClone = require('./_baseClone');

/** Used to compose bitmasks for cloning. */
var CLONE_SYMBOLS_FLAG = 4;

/**
 * Creates a shallow clone of `value`.
 *
 * **Note:** This method is loosely based on the
 * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
 * and supports cloning arrays, array buffers, booleans, date objects, maps,
 * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
 * arrays. The own enumerable properties of `arguments` objects are cloned
 * as plain objects. An empty object is returned for uncloneable values such
 * as error objects, functions, DOM nodes, and WeakMaps.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to clone.
 * @returns {*} Returns the cloned value.
 * @see _.cloneDeep
 * @example
 *
 * var objects = [{ 'a': 1 }, { 'b': 2 }];
 *
 * var shallow = _.clone(objects);
 * console.log(shallow[0] === objects[0]);
 * // => true
 */
function clone(value) {
  return baseClone(value, CLONE_SYMBOLS_FLAG);
}

module.exports = clone;

},{"./_baseClone":"../node_modules/lodash/_baseClone.js"}],"../node_modules/lodash/_setCacheAdd.js":[function(require,module,exports) {
/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Adds `value` to the array cache.
 *
 * @private
 * @name add
 * @memberOf SetCache
 * @alias push
 * @param {*} value The value to cache.
 * @returns {Object} Returns the cache instance.
 */
function setCacheAdd(value) {
  this.__data__.set(value, HASH_UNDEFINED);
  return this;
}

module.exports = setCacheAdd;

},{}],"../node_modules/lodash/_setCacheHas.js":[function(require,module,exports) {
/**
 * Checks if `value` is in the array cache.
 *
 * @private
 * @name has
 * @memberOf SetCache
 * @param {*} value The value to search for.
 * @returns {number} Returns `true` if `value` is found, else `false`.
 */
function setCacheHas(value) {
  return this.__data__.has(value);
}

module.exports = setCacheHas;

},{}],"../node_modules/lodash/_SetCache.js":[function(require,module,exports) {
var MapCache = require('./_MapCache'),
    setCacheAdd = require('./_setCacheAdd'),
    setCacheHas = require('./_setCacheHas');

/**
 *
 * Creates an array cache object to store unique values.
 *
 * @private
 * @constructor
 * @param {Array} [values] The values to cache.
 */
function SetCache(values) {
  var index = -1,
      length = values == null ? 0 : values.length;

  this.__data__ = new MapCache;
  while (++index < length) {
    this.add(values[index]);
  }
}

// Add methods to `SetCache`.
SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
SetCache.prototype.has = setCacheHas;

module.exports = SetCache;

},{"./_MapCache":"../node_modules/lodash/_MapCache.js","./_setCacheAdd":"../node_modules/lodash/_setCacheAdd.js","./_setCacheHas":"../node_modules/lodash/_setCacheHas.js"}],"../node_modules/lodash/_baseFindIndex.js":[function(require,module,exports) {
/**
 * The base implementation of `_.findIndex` and `_.findLastIndex` without
 * support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} predicate The function invoked per iteration.
 * @param {number} fromIndex The index to search from.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseFindIndex(array, predicate, fromIndex, fromRight) {
  var length = array.length,
      index = fromIndex + (fromRight ? 1 : -1);

  while ((fromRight ? index-- : ++index < length)) {
    if (predicate(array[index], index, array)) {
      return index;
    }
  }
  return -1;
}

module.exports = baseFindIndex;

},{}],"../node_modules/lodash/_baseIsNaN.js":[function(require,module,exports) {
/**
 * The base implementation of `_.isNaN` without support for number objects.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
 */
function baseIsNaN(value) {
  return value !== value;
}

module.exports = baseIsNaN;

},{}],"../node_modules/lodash/_strictIndexOf.js":[function(require,module,exports) {
/**
 * A specialized version of `_.indexOf` which performs strict equality
 * comparisons of values, i.e. `===`.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function strictIndexOf(array, value, fromIndex) {
  var index = fromIndex - 1,
      length = array.length;

  while (++index < length) {
    if (array[index] === value) {
      return index;
    }
  }
  return -1;
}

module.exports = strictIndexOf;

},{}],"../node_modules/lodash/_baseIndexOf.js":[function(require,module,exports) {
var baseFindIndex = require('./_baseFindIndex'),
    baseIsNaN = require('./_baseIsNaN'),
    strictIndexOf = require('./_strictIndexOf');

/**
 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseIndexOf(array, value, fromIndex) {
  return value === value
    ? strictIndexOf(array, value, fromIndex)
    : baseFindIndex(array, baseIsNaN, fromIndex);
}

module.exports = baseIndexOf;

},{"./_baseFindIndex":"../node_modules/lodash/_baseFindIndex.js","./_baseIsNaN":"../node_modules/lodash/_baseIsNaN.js","./_strictIndexOf":"../node_modules/lodash/_strictIndexOf.js"}],"../node_modules/lodash/_arrayIncludes.js":[function(require,module,exports) {
var baseIndexOf = require('./_baseIndexOf');

/**
 * A specialized version of `_.includes` for arrays without support for
 * specifying an index to search from.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludes(array, value) {
  var length = array == null ? 0 : array.length;
  return !!length && baseIndexOf(array, value, 0) > -1;
}

module.exports = arrayIncludes;

},{"./_baseIndexOf":"../node_modules/lodash/_baseIndexOf.js"}],"../node_modules/lodash/_arrayIncludesWith.js":[function(require,module,exports) {
/**
 * This function is like `arrayIncludes` except that it accepts a comparator.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @param {Function} comparator The comparator invoked per element.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludesWith(array, value, comparator) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (comparator(value, array[index])) {
      return true;
    }
  }
  return false;
}

module.exports = arrayIncludesWith;

},{}],"../node_modules/lodash/_cacheHas.js":[function(require,module,exports) {
/**
 * Checks if a `cache` value for `key` exists.
 *
 * @private
 * @param {Object} cache The cache to query.
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function cacheHas(cache, key) {
  return cache.has(key);
}

module.exports = cacheHas;

},{}],"../node_modules/lodash/noop.js":[function(require,module,exports) {
/**
 * This method returns `undefined`.
 *
 * @static
 * @memberOf _
 * @since 2.3.0
 * @category Util
 * @example
 *
 * _.times(2, _.noop);
 * // => [undefined, undefined]
 */
function noop() {
  // No operation performed.
}

module.exports = noop;

},{}],"../node_modules/lodash/_setToArray.js":[function(require,module,exports) {
/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */
function setToArray(set) {
  var index = -1,
      result = Array(set.size);

  set.forEach(function(value) {
    result[++index] = value;
  });
  return result;
}

module.exports = setToArray;

},{}],"../node_modules/lodash/_createSet.js":[function(require,module,exports) {
var Set = require('./_Set'),
    noop = require('./noop'),
    setToArray = require('./_setToArray');

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/**
 * Creates a set object of `values`.
 *
 * @private
 * @param {Array} values The values to add to the set.
 * @returns {Object} Returns the new set.
 */
var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
  return new Set(values);
};

module.exports = createSet;

},{"./_Set":"../node_modules/lodash/_Set.js","./noop":"../node_modules/lodash/noop.js","./_setToArray":"../node_modules/lodash/_setToArray.js"}],"../node_modules/lodash/_baseUniq.js":[function(require,module,exports) {
var SetCache = require('./_SetCache'),
    arrayIncludes = require('./_arrayIncludes'),
    arrayIncludesWith = require('./_arrayIncludesWith'),
    cacheHas = require('./_cacheHas'),
    createSet = require('./_createSet'),
    setToArray = require('./_setToArray');

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * The base implementation of `_.uniqBy` without support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new duplicate free array.
 */
function baseUniq(array, iteratee, comparator) {
  var index = -1,
      includes = arrayIncludes,
      length = array.length,
      isCommon = true,
      result = [],
      seen = result;

  if (comparator) {
    isCommon = false;
    includes = arrayIncludesWith;
  }
  else if (length >= LARGE_ARRAY_SIZE) {
    var set = iteratee ? null : createSet(array);
    if (set) {
      return setToArray(set);
    }
    isCommon = false;
    includes = cacheHas;
    seen = new SetCache;
  }
  else {
    seen = iteratee ? [] : result;
  }
  outer:
  while (++index < length) {
    var value = array[index],
        computed = iteratee ? iteratee(value) : value;

    value = (comparator || value !== 0) ? value : 0;
    if (isCommon && computed === computed) {
      var seenIndex = seen.length;
      while (seenIndex--) {
        if (seen[seenIndex] === computed) {
          continue outer;
        }
      }
      if (iteratee) {
        seen.push(computed);
      }
      result.push(value);
    }
    else if (!includes(seen, computed, comparator)) {
      if (seen !== result) {
        seen.push(computed);
      }
      result.push(value);
    }
  }
  return result;
}

module.exports = baseUniq;

},{"./_SetCache":"../node_modules/lodash/_SetCache.js","./_arrayIncludes":"../node_modules/lodash/_arrayIncludes.js","./_arrayIncludesWith":"../node_modules/lodash/_arrayIncludesWith.js","./_cacheHas":"../node_modules/lodash/_cacheHas.js","./_createSet":"../node_modules/lodash/_createSet.js","./_setToArray":"../node_modules/lodash/_setToArray.js"}],"../node_modules/lodash/uniq.js":[function(require,module,exports) {
var baseUniq = require('./_baseUniq');

/**
 * Creates a duplicate-free version of an array, using
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons, in which only the first occurrence of each element
 * is kept. The order of result values is determined by the order they occur
 * in the array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @returns {Array} Returns the new duplicate free array.
 * @example
 *
 * _.uniq([2, 1, 2]);
 * // => [2, 1]
 */
function uniq(array) {
  return (array && array.length) ? baseUniq(array) : [];
}

module.exports = uniq;

},{"./_baseUniq":"../node_modules/lodash/_baseUniq.js"}],"../node_modules/babel-types/lib/definitions/index.js":[function(require,module,exports) {
"use strict";

exports.__esModule = true;
exports.DEPRECATED_KEYS = exports.BUILDER_KEYS = exports.NODE_FIELDS = exports.ALIAS_KEYS = exports.VISITOR_KEYS = undefined;

var _getIterator2 = require("babel-runtime/core-js/get-iterator");

var _getIterator3 = _interopRequireDefault(_getIterator2);

var _stringify = require("babel-runtime/core-js/json/stringify");

var _stringify2 = _interopRequireDefault(_stringify);

var _typeof2 = require("babel-runtime/helpers/typeof");

var _typeof3 = _interopRequireDefault(_typeof2);

exports.assertEach = assertEach;
exports.assertOneOf = assertOneOf;
exports.assertNodeType = assertNodeType;
exports.assertNodeOrValueType = assertNodeOrValueType;
exports.assertValueType = assertValueType;
exports.chain = chain;
exports.default = defineType;

var _index = require("../index");

var t = _interopRequireWildcard(_index);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var VISITOR_KEYS = exports.VISITOR_KEYS = {};
var ALIAS_KEYS = exports.ALIAS_KEYS = {};
var NODE_FIELDS = exports.NODE_FIELDS = {};
var BUILDER_KEYS = exports.BUILDER_KEYS = {};
var DEPRECATED_KEYS = exports.DEPRECATED_KEYS = {};

function getType(val) {
  if (Array.isArray(val)) {
    return "array";
  } else if (val === null) {
    return "null";
  } else if (val === undefined) {
    return "undefined";
  } else {
    return typeof val === "undefined" ? "undefined" : (0, _typeof3.default)(val);
  }
}

function assertEach(callback) {
  function validator(node, key, val) {
    if (!Array.isArray(val)) return;

    for (var i = 0; i < val.length; i++) {
      callback(node, key + "[" + i + "]", val[i]);
    }
  }
  validator.each = callback;
  return validator;
}

function assertOneOf() {
  for (var _len = arguments.length, vals = Array(_len), _key = 0; _key < _len; _key++) {
    vals[_key] = arguments[_key];
  }

  function validate(node, key, val) {
    if (vals.indexOf(val) < 0) {
      throw new TypeError("Property " + key + " expected value to be one of " + (0, _stringify2.default)(vals) + " but got " + (0, _stringify2.default)(val));
    }
  }

  validate.oneOf = vals;

  return validate;
}

function assertNodeType() {
  for (var _len2 = arguments.length, types = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    types[_key2] = arguments[_key2];
  }

  function validate(node, key, val) {
    var valid = false;

    for (var _iterator = types, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {
      var _ref;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var type = _ref;

      if (t.is(type, val)) {
        valid = true;
        break;
      }
    }

    if (!valid) {
      throw new TypeError("Property " + key + " of " + node.type + " expected node to be of a type " + (0, _stringify2.default)(types) + " " + ("but instead got " + (0, _stringify2.default)(val && val.type)));
    }
  }

  validate.oneOfNodeTypes = types;

  return validate;
}

function assertNodeOrValueType() {
  for (var _len3 = arguments.length, types = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
    types[_key3] = arguments[_key3];
  }

  function validate(node, key, val) {
    var valid = false;

    for (var _iterator2 = types, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {
      var _ref2;

      if (_isArray2) {
        if (_i2 >= _iterator2.length) break;
        _ref2 = _iterator2[_i2++];
      } else {
        _i2 = _iterator2.next();
        if (_i2.done) break;
        _ref2 = _i2.value;
      }

      var type = _ref2;

      if (getType(val) === type || t.is(type, val)) {
        valid = true;
        break;
      }
    }

    if (!valid) {
      throw new TypeError("Property " + key + " of " + node.type + " expected node to be of a type " + (0, _stringify2.default)(types) + " " + ("but instead got " + (0, _stringify2.default)(val && val.type)));
    }
  }

  validate.oneOfNodeOrValueTypes = types;

  return validate;
}

function assertValueType(type) {
  function validate(node, key, val) {
    var valid = getType(val) === type;

    if (!valid) {
      throw new TypeError("Property " + key + " expected type of " + type + " but got " + getType(val));
    }
  }

  validate.type = type;

  return validate;
}

function chain() {
  for (var _len4 = arguments.length, fns = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
    fns[_key4] = arguments[_key4];
  }

  function validate() {
    for (var _iterator3 = fns, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {
      var _ref3;

      if (_isArray3) {
        if (_i3 >= _iterator3.length) break;
        _ref3 = _iterator3[_i3++];
      } else {
        _i3 = _iterator3.next();
        if (_i3.done) break;
        _ref3 = _i3.value;
      }

      var fn = _ref3;

      fn.apply(undefined, arguments);
    }
  }
  validate.chainOf = fns;
  return validate;
}

function defineType(type) {
  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  var inherits = opts.inherits && store[opts.inherits] || {};

  opts.fields = opts.fields || inherits.fields || {};
  opts.visitor = opts.visitor || inherits.visitor || [];
  opts.aliases = opts.aliases || inherits.aliases || [];
  opts.builder = opts.builder || inherits.builder || opts.visitor || [];

  if (opts.deprecatedAlias) {
    DEPRECATED_KEYS[opts.deprecatedAlias] = type;
  }

  for (var _iterator4 = opts.visitor.concat(opts.builder), _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : (0, _getIterator3.default)(_iterator4);;) {
    var _ref4;

    if (_isArray4) {
      if (_i4 >= _iterator4.length) break;
      _ref4 = _iterator4[_i4++];
    } else {
      _i4 = _iterator4.next();
      if (_i4.done) break;
      _ref4 = _i4.value;
    }

    var _key5 = _ref4;

    opts.fields[_key5] = opts.fields[_key5] || {};
  }

  for (var key in opts.fields) {
    var field = opts.fields[key];

    if (opts.builder.indexOf(key) === -1) {
      field.optional = true;
    }
    if (field.default === undefined) {
      field.default = null;
    } else if (!field.validate) {
      field.validate = assertValueType(getType(field.default));
    }
  }

  VISITOR_KEYS[type] = opts.visitor;
  BUILDER_KEYS[type] = opts.builder;
  NODE_FIELDS[type] = opts.fields;
  ALIAS_KEYS[type] = opts.aliases;

  store[type] = opts;
}

var store = {};
},{"babel-runtime/core-js/get-iterator":"../node_modules/babel-runtime/core-js/get-iterator.js","babel-runtime/core-js/json/stringify":"../node_modules/babel-runtime/core-js/json/stringify.js","babel-runtime/helpers/typeof":"../node_modules/babel-runtime/helpers/typeof.js","../index":"../node_modules/babel-types/lib/index.js"}],"../node_modules/babel-types/lib/definitions/core.js":[function(require,module,exports) {
"use strict";

var _index = require("../index");

var t = _interopRequireWildcard(_index);

var _constants = require("../constants");

var _index2 = require("./index");

var _index3 = _interopRequireDefault(_index2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

(0, _index3.default)("ArrayExpression", {
  fields: {
    elements: {
      validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeOrValueType)("null", "Expression", "SpreadElement"))),
      default: []
    }
  },
  visitor: ["elements"],
  aliases: ["Expression"]
});

(0, _index3.default)("AssignmentExpression", {
  fields: {
    operator: {
      validate: (0, _index2.assertValueType)("string")
    },
    left: {
      validate: (0, _index2.assertNodeType)("LVal")
    },
    right: {
      validate: (0, _index2.assertNodeType)("Expression")
    }
  },
  builder: ["operator", "left", "right"],
  visitor: ["left", "right"],
  aliases: ["Expression"]
});

(0, _index3.default)("BinaryExpression", {
  builder: ["operator", "left", "right"],
  fields: {
    operator: {
      validate: _index2.assertOneOf.apply(undefined, _constants.BINARY_OPERATORS)
    },
    left: {
      validate: (0, _index2.assertNodeType)("Expression")
    },
    right: {
      validate: (0, _index2.assertNodeType)("Expression")
    }
  },
  visitor: ["left", "right"],
  aliases: ["Binary", "Expression"]
});

(0, _index3.default)("Directive", {
  visitor: ["value"],
  fields: {
    value: {
      validate: (0, _index2.assertNodeType)("DirectiveLiteral")
    }
  }
});

(0, _index3.default)("DirectiveLiteral", {
  builder: ["value"],
  fields: {
    value: {
      validate: (0, _index2.assertValueType)("string")
    }
  }
});

(0, _index3.default)("BlockStatement", {
  builder: ["body", "directives"],
  visitor: ["directives", "body"],
  fields: {
    directives: {
      validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Directive"))),
      default: []
    },
    body: {
      validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Statement")))
    }
  },
  aliases: ["Scopable", "BlockParent", "Block", "Statement"]
});

(0, _index3.default)("BreakStatement", {
  visitor: ["label"],
  fields: {
    label: {
      validate: (0, _index2.assertNodeType)("Identifier"),
      optional: true
    }
  },
  aliases: ["Statement", "Terminatorless", "CompletionStatement"]
});

(0, _index3.default)("CallExpression", {
  visitor: ["callee", "arguments"],
  fields: {
    callee: {
      validate: (0, _index2.assertNodeType)("Expression")
    },
    arguments: {
      validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Expression", "SpreadElement")))
    }
  },
  aliases: ["Expression"]
});

(0, _index3.default)("CatchClause", {
  visitor: ["param", "body"],
  fields: {
    param: {
      validate: (0, _index2.assertNodeType)("Identifier")
    },
    body: {
      validate: (0, _index2.assertNodeType)("BlockStatement")
    }
  },
  aliases: ["Scopable"]
});

(0, _index3.default)("ConditionalExpression", {
  visitor: ["test", "consequent", "alternate"],
  fields: {
    test: {
      validate: (0, _index2.assertNodeType)("Expression")
    },
    consequent: {
      validate: (0, _index2.assertNodeType)("Expression")
    },
    alternate: {
      validate: (0, _index2.assertNodeType)("Expression")
    }
  },
  aliases: ["Expression", "Conditional"]
});

(0, _index3.default)("ContinueStatement", {
  visitor: ["label"],
  fields: {
    label: {
      validate: (0, _index2.assertNodeType)("Identifier"),
      optional: true
    }
  },
  aliases: ["Statement", "Terminatorless", "CompletionStatement"]
});

(0, _index3.default)("DebuggerStatement", {
  aliases: ["Statement"]
});

(0, _index3.default)("DoWhileStatement", {
  visitor: ["test", "body"],
  fields: {
    test: {
      validate: (0, _index2.assertNodeType)("Expression")
    },
    body: {
      validate: (0, _index2.assertNodeType)("Statement")
    }
  },
  aliases: ["Statement", "BlockParent", "Loop", "While", "Scopable"]
});

(0, _index3.default)("EmptyStatement", {
  aliases: ["Statement"]
});

(0, _index3.default)("ExpressionStatement", {
  visitor: ["expression"],
  fields: {
    expression: {
      validate: (0, _index2.assertNodeType)("Expression")
    }
  },
  aliases: ["Statement", "ExpressionWrapper"]
});

(0, _index3.default)("File", {
  builder: ["program", "comments", "tokens"],
  visitor: ["program"],
  fields: {
    program: {
      validate: (0, _index2.assertNodeType)("Program")
    }
  }
});

(0, _index3.default)("ForInStatement", {
  visitor: ["left", "right", "body"],
  aliases: ["Scopable", "Statement", "For", "BlockParent", "Loop", "ForXStatement"],
  fields: {
    left: {
      validate: (0, _index2.assertNodeType)("VariableDeclaration", "LVal")
    },
    right: {
      validate: (0, _index2.assertNodeType)("Expression")
    },
    body: {
      validate: (0, _index2.assertNodeType)("Statement")
    }
  }
});

(0, _index3.default)("ForStatement", {
  visitor: ["init", "test", "update", "body"],
  aliases: ["Scopable", "Statement", "For", "BlockParent", "Loop"],
  fields: {
    init: {
      validate: (0, _index2.assertNodeType)("VariableDeclaration", "Expression"),
      optional: true
    },
    test: {
      validate: (0, _index2.assertNodeType)("Expression"),
      optional: true
    },
    update: {
      validate: (0, _index2.assertNodeType)("Expression"),
      optional: true
    },
    body: {
      validate: (0, _index2.assertNodeType)("Statement")
    }
  }
});

(0, _index3.default)("FunctionDeclaration", {
  builder: ["id", "params", "body", "generator", "async"],
  visitor: ["id", "params", "body", "returnType", "typeParameters"],
  fields: {
    id: {
      validate: (0, _index2.assertNodeType)("Identifier")
    },
    params: {
      validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("LVal")))
    },
    body: {
      validate: (0, _index2.assertNodeType)("BlockStatement")
    },
    generator: {
      default: false,
      validate: (0, _index2.assertValueType)("boolean")
    },
    async: {
      default: false,
      validate: (0, _index2.assertValueType)("boolean")
    }
  },
  aliases: ["Scopable", "Function", "BlockParent", "FunctionParent", "Statement", "Pureish", "Declaration"]
});

(0, _index3.default)("FunctionExpression", {
  inherits: "FunctionDeclaration",
  aliases: ["Scopable", "Function", "BlockParent", "FunctionParent", "Expression", "Pureish"],
  fields: {
    id: {
      validate: (0, _index2.assertNodeType)("Identifier"),
      optional: true
    },
    params: {
      validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("LVal")))
    },
    body: {
      validate: (0, _index2.assertNodeType)("BlockStatement")
    },
    generator: {
      default: false,
      validate: (0, _index2.assertValueType)("boolean")
    },
    async: {
      default: false,
      validate: (0, _index2.assertValueType)("boolean")
    }
  }
});

(0, _index3.default)("Identifier", {
  builder: ["name"],
  visitor: ["typeAnnotation"],
  aliases: ["Expression", "LVal"],
  fields: {
    name: {
      validate: function validate(node, key, val) {
        if (!t.isValidIdentifier(val)) {}
      }
    },
    decorators: {
      validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Decorator")))
    }
  }
});

(0, _index3.default)("IfStatement", {
  visitor: ["test", "consequent", "alternate"],
  aliases: ["Statement", "Conditional"],
  fields: {
    test: {
      validate: (0, _index2.assertNodeType)("Expression")
    },
    consequent: {
      validate: (0, _index2.assertNodeType)("Statement")
    },
    alternate: {
      optional: true,
      validate: (0, _index2.assertNodeType)("Statement")
    }
  }
});

(0, _index3.default)("LabeledStatement", {
  visitor: ["label", "body"],
  aliases: ["Statement"],
  fields: {
    label: {
      validate: (0, _index2.assertNodeType)("Identifier")
    },
    body: {
      validate: (0, _index2.assertNodeType)("Statement")
    }
  }
});

(0, _index3.default)("StringLiteral", {
  builder: ["value"],
  fields: {
    value: {
      validate: (0, _index2.assertValueType)("string")
    }
  },
  aliases: ["Expression", "Pureish", "Literal", "Immutable"]
});

(0, _index3.default)("NumericLiteral", {
  builder: ["value"],
  deprecatedAlias: "NumberLiteral",
  fields: {
    value: {
      validate: (0, _index2.assertValueType)("number")
    }
  },
  aliases: ["Expression", "Pureish", "Literal", "Immutable"]
});

(0, _index3.default)("NullLiteral", {
  aliases: ["Expression", "Pureish", "Literal", "Immutable"]
});

(0, _index3.default)("BooleanLiteral", {
  builder: ["value"],
  fields: {
    value: {
      validate: (0, _index2.assertValueType)("boolean")
    }
  },
  aliases: ["Expression", "Pureish", "Literal", "Immutable"]
});

(0, _index3.default)("RegExpLiteral", {
  builder: ["pattern", "flags"],
  deprecatedAlias: "RegexLiteral",
  aliases: ["Expression", "Literal"],
  fields: {
    pattern: {
      validate: (0, _index2.assertValueType)("string")
    },
    flags: {
      validate: (0, _index2.assertValueType)("string"),
      default: ""
    }
  }
});

(0, _index3.default)("LogicalExpression", {
  builder: ["operator", "left", "right"],
  visitor: ["left", "right"],
  aliases: ["Binary", "Expression"],
  fields: {
    operator: {
      validate: _index2.assertOneOf.apply(undefined, _constants.LOGICAL_OPERATORS)
    },
    left: {
      validate: (0, _index2.assertNodeType)("Expression")
    },
    right: {
      validate: (0, _index2.assertNodeType)("Expression")
    }
  }
});

(0, _index3.default)("MemberExpression", {
  builder: ["object", "property", "computed"],
  visitor: ["object", "property"],
  aliases: ["Expression", "LVal"],
  fields: {
    object: {
      validate: (0, _index2.assertNodeType)("Expression")
    },
    property: {
      validate: function validate(node, key, val) {
        var expectedType = node.computed ? "Expression" : "Identifier";
        (0, _index2.assertNodeType)(expectedType)(node, key, val);
      }
    },
    computed: {
      default: false
    }
  }
});

(0, _index3.default)("NewExpression", {
  visitor: ["callee", "arguments"],
  aliases: ["Expression"],
  fields: {
    callee: {
      validate: (0, _index2.assertNodeType)("Expression")
    },
    arguments: {
      validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Expression", "SpreadElement")))
    }
  }
});

(0, _index3.default)("Program", {
  visitor: ["directives", "body"],
  builder: ["body", "directives"],
  fields: {
    directives: {
      validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Directive"))),
      default: []
    },
    body: {
      validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Statement")))
    }
  },
  aliases: ["Scopable", "BlockParent", "Block", "FunctionParent"]
});

(0, _index3.default)("ObjectExpression", {
  visitor: ["properties"],
  aliases: ["Expression"],
  fields: {
    properties: {
      validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("ObjectMethod", "ObjectProperty", "SpreadProperty")))
    }
  }
});

(0, _index3.default)("ObjectMethod", {
  builder: ["kind", "key", "params", "body", "computed"],
  fields: {
    kind: {
      validate: (0, _index2.chain)((0, _index2.assertValueType)("string"), (0, _index2.assertOneOf)("method", "get", "set")),
      default: "method"
    },
    computed: {
      validate: (0, _index2.assertValueType)("boolean"),
      default: false
    },
    key: {
      validate: function validate(node, key, val) {
        var expectedTypes = node.computed ? ["Expression"] : ["Identifier", "StringLiteral", "NumericLiteral"];
        _index2.assertNodeType.apply(undefined, expectedTypes)(node, key, val);
      }
    },
    decorators: {
      validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Decorator")))
    },
    body: {
      validate: (0, _index2.assertNodeType)("BlockStatement")
    },
    generator: {
      default: false,
      validate: (0, _index2.assertValueType)("boolean")
    },
    async: {
      default: false,
      validate: (0, _index2.assertValueType)("boolean")
    }
  },
  visitor: ["key", "params", "body", "decorators", "returnType", "typeParameters"],
  aliases: ["UserWhitespacable", "Function", "Scopable", "BlockParent", "FunctionParent", "Method", "ObjectMember"]
});

(0, _index3.default)("ObjectProperty", {
  builder: ["key", "value", "computed", "shorthand", "decorators"],
  fields: {
    computed: {
      validate: (0, _index2.assertValueType)("boolean"),
      default: false
    },
    key: {
      validate: function validate(node, key, val) {
        var expectedTypes = node.computed ? ["Expression"] : ["Identifier", "StringLiteral", "NumericLiteral"];
        _index2.assertNodeType.apply(undefined, expectedTypes)(node, key, val);
      }
    },
    value: {
      validate: (0, _index2.assertNodeType)("Expression", "Pattern", "RestElement")
    },
    shorthand: {
      validate: (0, _index2.assertValueType)("boolean"),
      default: false
    },
    decorators: {
      validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Decorator"))),
      optional: true
    }
  },
  visitor: ["key", "value", "decorators"],
  aliases: ["UserWhitespacable", "Property", "ObjectMember"]
});

(0, _index3.default)("RestElement", {
  visitor: ["argument", "typeAnnotation"],
  aliases: ["LVal"],
  fields: {
    argument: {
      validate: (0, _index2.assertNodeType)("LVal")
    },
    decorators: {
      validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Decorator")))
    }
  }
});

(0, _index3.default)("ReturnStatement", {
  visitor: ["argument"],
  aliases: ["Statement", "Terminatorless", "CompletionStatement"],
  fields: {
    argument: {
      validate: (0, _index2.assertNodeType)("Expression"),
      optional: true
    }
  }
});

(0, _index3.default)("SequenceExpression", {
  visitor: ["expressions"],
  fields: {
    expressions: {
      validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Expression")))
    }
  },
  aliases: ["Expression"]
});

(0, _index3.default)("SwitchCase", {
  visitor: ["test", "consequent"],
  fields: {
    test: {
      validate: (0, _index2.assertNodeType)("Expression"),
      optional: true
    },
    consequent: {
      validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Statement")))
    }
  }
});

(0, _index3.default)("SwitchStatement", {
  visitor: ["discriminant", "cases"],
  aliases: ["Statement", "BlockParent", "Scopable"],
  fields: {
    discriminant: {
      validate: (0, _index2.assertNodeType)("Expression")
    },
    cases: {
      validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("SwitchCase")))
    }
  }
});

(0, _index3.default)("ThisExpression", {
  aliases: ["Expression"]
});

(0, _index3.default)("ThrowStatement", {
  visitor: ["argument"],
  aliases: ["Statement", "Terminatorless", "CompletionStatement"],
  fields: {
    argument: {
      validate: (0, _index2.assertNodeType)("Expression")
    }
  }
});

(0, _index3.default)("TryStatement", {
  visitor: ["block", "handler", "finalizer"],
  aliases: ["Statement"],
  fields: {
    body: {
      validate: (0, _index2.assertNodeType)("BlockStatement")
    },
    handler: {
      optional: true,
      handler: (0, _index2.assertNodeType)("BlockStatement")
    },
    finalizer: {
      optional: true,
      validate: (0, _index2.assertNodeType)("BlockStatement")
    }
  }
});

(0, _index3.default)("UnaryExpression", {
  builder: ["operator", "argument", "prefix"],
  fields: {
    prefix: {
      default: true
    },
    argument: {
      validate: (0, _index2.assertNodeType)("Expression")
    },
    operator: {
      validate: _index2.assertOneOf.apply(undefined, _constants.UNARY_OPERATORS)
    }
  },
  visitor: ["argument"],
  aliases: ["UnaryLike", "Expression"]
});

(0, _index3.default)("UpdateExpression", {
  builder: ["operator", "argument", "prefix"],
  fields: {
    prefix: {
      default: false
    },
    argument: {
      validate: (0, _index2.assertNodeType)("Expression")
    },
    operator: {
      validate: _index2.assertOneOf.apply(undefined, _constants.UPDATE_OPERATORS)
    }
  },
  visitor: ["argument"],
  aliases: ["Expression"]
});

(0, _index3.default)("VariableDeclaration", {
  builder: ["kind", "declarations"],
  visitor: ["declarations"],
  aliases: ["Statement", "Declaration"],
  fields: {
    kind: {
      validate: (0, _index2.chain)((0, _index2.assertValueType)("string"), (0, _index2.assertOneOf)("var", "let", "const"))
    },
    declarations: {
      validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("VariableDeclarator")))
    }
  }
});

(0, _index3.default)("VariableDeclarator", {
  visitor: ["id", "init"],
  fields: {
    id: {
      validate: (0, _index2.assertNodeType)("LVal")
    },
    init: {
      optional: true,
      validate: (0, _index2.assertNodeType)("Expression")
    }
  }
});

(0, _index3.default)("WhileStatement", {
  visitor: ["test", "body"],
  aliases: ["Statement", "BlockParent", "Loop", "While", "Scopable"],
  fields: {
    test: {
      validate: (0, _index2.assertNodeType)("Expression")
    },
    body: {
      validate: (0, _index2.assertNodeType)("BlockStatement", "Statement")
    }
  }
});

(0, _index3.default)("WithStatement", {
  visitor: ["object", "body"],
  aliases: ["Statement"],
  fields: {
    object: {
      object: (0, _index2.assertNodeType)("Expression")
    },
    body: {
      validate: (0, _index2.assertNodeType)("BlockStatement", "Statement")
    }
  }
});
},{"../index":"../node_modules/babel-types/lib/index.js","../constants":"../node_modules/babel-types/lib/constants.js","./index":"../node_modules/babel-types/lib/definitions/index.js"}],"../node_modules/babel-types/lib/definitions/es2015.js":[function(require,module,exports) {
"use strict";

var _index = require("./index");

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _index2.default)("AssignmentPattern", {
  visitor: ["left", "right"],
  aliases: ["Pattern", "LVal"],
  fields: {
    left: {
      validate: (0, _index.assertNodeType)("Identifier")
    },
    right: {
      validate: (0, _index.assertNodeType)("Expression")
    },
    decorators: {
      validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("Decorator")))
    }
  }
});

(0, _index2.default)("ArrayPattern", {
  visitor: ["elements", "typeAnnotation"],
  aliases: ["Pattern", "LVal"],
  fields: {
    elements: {
      validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("Identifier", "Pattern", "RestElement")))
    },
    decorators: {
      validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("Decorator")))
    }
  }
});

(0, _index2.default)("ArrowFunctionExpression", {
  builder: ["params", "body", "async"],
  visitor: ["params", "body", "returnType", "typeParameters"],
  aliases: ["Scopable", "Function", "BlockParent", "FunctionParent", "Expression", "Pureish"],
  fields: {
    params: {
      validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("LVal")))
    },
    body: {
      validate: (0, _index.assertNodeType)("BlockStatement", "Expression")
    },
    async: {
      validate: (0, _index.assertValueType)("boolean"),
      default: false
    }
  }
});

(0, _index2.default)("ClassBody", {
  visitor: ["body"],
  fields: {
    body: {
      validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("ClassMethod", "ClassProperty")))
    }
  }
});

(0, _index2.default)("ClassDeclaration", {
  builder: ["id", "superClass", "body", "decorators"],
  visitor: ["id", "body", "superClass", "mixins", "typeParameters", "superTypeParameters", "implements", "decorators"],
  aliases: ["Scopable", "Class", "Statement", "Declaration", "Pureish"],
  fields: {
    id: {
      validate: (0, _index.assertNodeType)("Identifier")
    },
    body: {
      validate: (0, _index.assertNodeType)("ClassBody")
    },
    superClass: {
      optional: true,
      validate: (0, _index.assertNodeType)("Expression")
    },
    decorators: {
      validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("Decorator")))
    }
  }
});

(0, _index2.default)("ClassExpression", {
  inherits: "ClassDeclaration",
  aliases: ["Scopable", "Class", "Expression", "Pureish"],
  fields: {
    id: {
      optional: true,
      validate: (0, _index.assertNodeType)("Identifier")
    },
    body: {
      validate: (0, _index.assertNodeType)("ClassBody")
    },
    superClass: {
      optional: true,
      validate: (0, _index.assertNodeType)("Expression")
    },
    decorators: {
      validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("Decorator")))
    }
  }
});

(0, _index2.default)("ExportAllDeclaration", {
  visitor: ["source"],
  aliases: ["Statement", "Declaration", "ModuleDeclaration", "ExportDeclaration"],
  fields: {
    source: {
      validate: (0, _index.assertNodeType)("StringLiteral")
    }
  }
});

(0, _index2.default)("ExportDefaultDeclaration", {
  visitor: ["declaration"],
  aliases: ["Statement", "Declaration", "ModuleDeclaration", "ExportDeclaration"],
  fields: {
    declaration: {
      validate: (0, _index.assertNodeType)("FunctionDeclaration", "ClassDeclaration", "Expression")
    }
  }
});

(0, _index2.default)("ExportNamedDeclaration", {
  visitor: ["declaration", "specifiers", "source"],
  aliases: ["Statement", "Declaration", "ModuleDeclaration", "ExportDeclaration"],
  fields: {
    declaration: {
      validate: (0, _index.assertNodeType)("Declaration"),
      optional: true
    },
    specifiers: {
      validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("ExportSpecifier")))
    },
    source: {
      validate: (0, _index.assertNodeType)("StringLiteral"),
      optional: true
    }
  }
});

(0, _index2.default)("ExportSpecifier", {
  visitor: ["local", "exported"],
  aliases: ["ModuleSpecifier"],
  fields: {
    local: {
      validate: (0, _index.assertNodeType)("Identifier")
    },
    exported: {
      validate: (0, _index.assertNodeType)("Identifier")
    }
  }
});

(0, _index2.default)("ForOfStatement", {
  visitor: ["left", "right", "body"],
  aliases: ["Scopable", "Statement", "For", "BlockParent", "Loop", "ForXStatement"],
  fields: {
    left: {
      validate: (0, _index.assertNodeType)("VariableDeclaration", "LVal")
    },
    right: {
      validate: (0, _index.assertNodeType)("Expression")
    },
    body: {
      validate: (0, _index.assertNodeType)("Statement")
    }
  }
});

(0, _index2.default)("ImportDeclaration", {
  visitor: ["specifiers", "source"],
  aliases: ["Statement", "Declaration", "ModuleDeclaration"],
  fields: {
    specifiers: {
      validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("ImportSpecifier", "ImportDefaultSpecifier", "ImportNamespaceSpecifier")))
    },
    source: {
      validate: (0, _index.assertNodeType)("StringLiteral")
    }
  }
});

(0, _index2.default)("ImportDefaultSpecifier", {
  visitor: ["local"],
  aliases: ["ModuleSpecifier"],
  fields: {
    local: {
      validate: (0, _index.assertNodeType)("Identifier")
    }
  }
});

(0, _index2.default)("ImportNamespaceSpecifier", {
  visitor: ["local"],
  aliases: ["ModuleSpecifier"],
  fields: {
    local: {
      validate: (0, _index.assertNodeType)("Identifier")
    }
  }
});

(0, _index2.default)("ImportSpecifier", {
  visitor: ["local", "imported"],
  aliases: ["ModuleSpecifier"],
  fields: {
    local: {
      validate: (0, _index.assertNodeType)("Identifier")
    },
    imported: {
      validate: (0, _index.assertNodeType)("Identifier")
    },
    importKind: {
      validate: (0, _index.assertOneOf)(null, "type", "typeof")
    }
  }
});

(0, _index2.default)("MetaProperty", {
  visitor: ["meta", "property"],
  aliases: ["Expression"],
  fields: {
    meta: {
      validate: (0, _index.assertValueType)("string")
    },
    property: {
      validate: (0, _index.assertValueType)("string")
    }
  }
});

(0, _index2.default)("ClassMethod", {
  aliases: ["Function", "Scopable", "BlockParent", "FunctionParent", "Method"],
  builder: ["kind", "key", "params", "body", "computed", "static"],
  visitor: ["key", "params", "body", "decorators", "returnType", "typeParameters"],
  fields: {
    kind: {
      validate: (0, _index.chain)((0, _index.assertValueType)("string"), (0, _index.assertOneOf)("get", "set", "method", "constructor")),
      default: "method"
    },
    computed: {
      default: false,
      validate: (0, _index.assertValueType)("boolean")
    },
    static: {
      default: false,
      validate: (0, _index.assertValueType)("boolean")
    },
    key: {
      validate: function validate(node, key, val) {
        var expectedTypes = node.computed ? ["Expression"] : ["Identifier", "StringLiteral", "NumericLiteral"];
        _index.assertNodeType.apply(undefined, expectedTypes)(node, key, val);
      }
    },
    params: {
      validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("LVal")))
    },
    body: {
      validate: (0, _index.assertNodeType)("BlockStatement")
    },
    generator: {
      default: false,
      validate: (0, _index.assertValueType)("boolean")
    },
    async: {
      default: false,
      validate: (0, _index.assertValueType)("boolean")
    }
  }
});

(0, _index2.default)("ObjectPattern", {
  visitor: ["properties", "typeAnnotation"],
  aliases: ["Pattern", "LVal"],
  fields: {
    properties: {
      validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("RestProperty", "Property")))
    },
    decorators: {
      validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("Decorator")))
    }
  }
});

(0, _index2.default)("SpreadElement", {
  visitor: ["argument"],
  aliases: ["UnaryLike"],
  fields: {
    argument: {
      validate: (0, _index.assertNodeType)("Expression")
    }
  }
});

(0, _index2.default)("Super", {
  aliases: ["Expression"]
});

(0, _index2.default)("TaggedTemplateExpression", {
  visitor: ["tag", "quasi"],
  aliases: ["Expression"],
  fields: {
    tag: {
      validate: (0, _index.assertNodeType)("Expression")
    },
    quasi: {
      validate: (0, _index.assertNodeType)("TemplateLiteral")
    }
  }
});

(0, _index2.default)("TemplateElement", {
  builder: ["value", "tail"],
  fields: {
    value: {},
    tail: {
      validate: (0, _index.assertValueType)("boolean"),
      default: false
    }
  }
});

(0, _index2.default)("TemplateLiteral", {
  visitor: ["quasis", "expressions"],
  aliases: ["Expression", "Literal"],
  fields: {
    quasis: {
      validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("TemplateElement")))
    },
    expressions: {
      validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("Expression")))
    }
  }
});

(0, _index2.default)("YieldExpression", {
  builder: ["argument", "delegate"],
  visitor: ["argument"],
  aliases: ["Expression", "Terminatorless"],
  fields: {
    delegate: {
      validate: (0, _index.assertValueType)("boolean"),
      default: false
    },
    argument: {
      optional: true,
      validate: (0, _index.assertNodeType)("Expression")
    }
  }
});
},{"./index":"../node_modules/babel-types/lib/definitions/index.js"}],"../node_modules/babel-types/lib/definitions/flow.js":[function(require,module,exports) {
"use strict";

var _index = require("./index");

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _index2.default)("AnyTypeAnnotation", {
  aliases: ["Flow", "FlowBaseAnnotation"],
  fields: {}
});

(0, _index2.default)("ArrayTypeAnnotation", {
  visitor: ["elementType"],
  aliases: ["Flow"],
  fields: {}
});

(0, _index2.default)("BooleanTypeAnnotation", {
  aliases: ["Flow", "FlowBaseAnnotation"],
  fields: {}
});

(0, _index2.default)("BooleanLiteralTypeAnnotation", {
  aliases: ["Flow"],
  fields: {}
});

(0, _index2.default)("NullLiteralTypeAnnotation", {
  aliases: ["Flow", "FlowBaseAnnotation"],
  fields: {}
});

(0, _index2.default)("ClassImplements", {
  visitor: ["id", "typeParameters"],
  aliases: ["Flow"],
  fields: {}
});

(0, _index2.default)("ClassProperty", {
  visitor: ["key", "value", "typeAnnotation", "decorators"],
  builder: ["key", "value", "typeAnnotation", "decorators", "computed"],
  aliases: ["Property"],
  fields: {
    computed: {
      validate: (0, _index.assertValueType)("boolean"),
      default: false
    }
  }
});

(0, _index2.default)("DeclareClass", {
  visitor: ["id", "typeParameters", "extends", "body"],
  aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
  fields: {}
});

(0, _index2.default)("DeclareFunction", {
  visitor: ["id"],
  aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
  fields: {}
});

(0, _index2.default)("DeclareInterface", {
  visitor: ["id", "typeParameters", "extends", "body"],
  aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
  fields: {}
});

(0, _index2.default)("DeclareModule", {
  visitor: ["id", "body"],
  aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
  fields: {}
});

(0, _index2.default)("DeclareModuleExports", {
  visitor: ["typeAnnotation"],
  aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
  fields: {}
});

(0, _index2.default)("DeclareTypeAlias", {
  visitor: ["id", "typeParameters", "right"],
  aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
  fields: {}
});

(0, _index2.default)("DeclareOpaqueType", {
  visitor: ["id", "typeParameters", "supertype"],
  aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
  fields: {}
});

(0, _index2.default)("DeclareVariable", {
  visitor: ["id"],
  aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
  fields: {}
});

(0, _index2.default)("DeclareExportDeclaration", {
  visitor: ["declaration", "specifiers", "source"],
  aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
  fields: {}
});

(0, _index2.default)("ExistentialTypeParam", {
  aliases: ["Flow"]
});

(0, _index2.default)("FunctionTypeAnnotation", {
  visitor: ["typeParameters", "params", "rest", "returnType"],
  aliases: ["Flow"],
  fields: {}
});

(0, _index2.default)("FunctionTypeParam", {
  visitor: ["name", "typeAnnotation"],
  aliases: ["Flow"],
  fields: {}
});

(0, _index2.default)("GenericTypeAnnotation", {
  visitor: ["id", "typeParameters"],
  aliases: ["Flow"],
  fields: {}
});

(0, _index2.default)("InterfaceExtends", {
  visitor: ["id", "typeParameters"],
  aliases: ["Flow"],
  fields: {}
});

(0, _index2.default)("InterfaceDeclaration", {
  visitor: ["id", "typeParameters", "extends", "body"],
  aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
  fields: {}
});

(0, _index2.default)("IntersectionTypeAnnotation", {
  visitor: ["types"],
  aliases: ["Flow"],
  fields: {}
});

(0, _index2.default)("MixedTypeAnnotation", {
  aliases: ["Flow", "FlowBaseAnnotation"]
});

(0, _index2.default)("EmptyTypeAnnotation", {
  aliases: ["Flow", "FlowBaseAnnotation"]
});

(0, _index2.default)("NullableTypeAnnotation", {
  visitor: ["typeAnnotation"],
  aliases: ["Flow"],
  fields: {}
});

(0, _index2.default)("NumericLiteralTypeAnnotation", {
  aliases: ["Flow"],
  fields: {}
});

(0, _index2.default)("NumberTypeAnnotation", {
  aliases: ["Flow", "FlowBaseAnnotation"],
  fields: {}
});

(0, _index2.default)("StringLiteralTypeAnnotation", {
  aliases: ["Flow"],
  fields: {}
});

(0, _index2.default)("StringTypeAnnotation", {
  aliases: ["Flow", "FlowBaseAnnotation"],
  fields: {}
});

(0, _index2.default)("ThisTypeAnnotation", {
  aliases: ["Flow", "FlowBaseAnnotation"],
  fields: {}
});

(0, _index2.default)("TupleTypeAnnotation", {
  visitor: ["types"],
  aliases: ["Flow"],
  fields: {}
});

(0, _index2.default)("TypeofTypeAnnotation", {
  visitor: ["argument"],
  aliases: ["Flow"],
  fields: {}
});

(0, _index2.default)("TypeAlias", {
  visitor: ["id", "typeParameters", "right"],
  aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
  fields: {}
});

(0, _index2.default)("OpaqueType", {
  visitor: ["id", "typeParameters", "impltype", "supertype"],
  aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
  fields: {}
});

(0, _index2.default)("TypeAnnotation", {
  visitor: ["typeAnnotation"],
  aliases: ["Flow"],
  fields: {}
});

(0, _index2.default)("TypeCastExpression", {
  visitor: ["expression", "typeAnnotation"],
  aliases: ["Flow", "ExpressionWrapper", "Expression"],
  fields: {}
});

(0, _index2.default)("TypeParameter", {
  visitor: ["bound"],
  aliases: ["Flow"],
  fields: {}
});

(0, _index2.default)("TypeParameterDeclaration", {
  visitor: ["params"],
  aliases: ["Flow"],
  fields: {}
});

(0, _index2.default)("TypeParameterInstantiation", {
  visitor: ["params"],
  aliases: ["Flow"],
  fields: {}
});

(0, _index2.default)("ObjectTypeAnnotation", {
  visitor: ["properties", "indexers", "callProperties"],
  aliases: ["Flow"],
  fields: {}
});

(0, _index2.default)("ObjectTypeCallProperty", {
  visitor: ["value"],
  aliases: ["Flow", "UserWhitespacable"],
  fields: {}
});

(0, _index2.default)("ObjectTypeIndexer", {
  visitor: ["id", "key", "value"],
  aliases: ["Flow", "UserWhitespacable"],
  fields: {}
});

(0, _index2.default)("ObjectTypeProperty", {
  visitor: ["key", "value"],
  aliases: ["Flow", "UserWhitespacable"],
  fields: {}
});

(0, _index2.default)("ObjectTypeSpreadProperty", {
  visitor: ["argument"],
  aliases: ["Flow", "UserWhitespacable"],
  fields: {}
});

(0, _index2.default)("QualifiedTypeIdentifier", {
  visitor: ["id", "qualification"],
  aliases: ["Flow"],
  fields: {}
});

(0, _index2.default)("UnionTypeAnnotation", {
  visitor: ["types"],
  aliases: ["Flow"],
  fields: {}
});

(0, _index2.default)("VoidTypeAnnotation", {
  aliases: ["Flow", "FlowBaseAnnotation"],
  fields: {}
});
},{"./index":"../node_modules/babel-types/lib/definitions/index.js"}],"../node_modules/babel-types/lib/definitions/jsx.js":[function(require,module,exports) {
"use strict";

var _index = require("./index");

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _index2.default)("JSXAttribute", {
  visitor: ["name", "value"],
  aliases: ["JSX", "Immutable"],
  fields: {
    name: {
      validate: (0, _index.assertNodeType)("JSXIdentifier", "JSXNamespacedName")
    },
    value: {
      optional: true,
      validate: (0, _index.assertNodeType)("JSXElement", "StringLiteral", "JSXExpressionContainer")
    }
  }
});

(0, _index2.default)("JSXClosingElement", {
  visitor: ["name"],
  aliases: ["JSX", "Immutable"],
  fields: {
    name: {
      validate: (0, _index.assertNodeType)("JSXIdentifier", "JSXMemberExpression")
    }
  }
});

(0, _index2.default)("JSXElement", {
  builder: ["openingElement", "closingElement", "children", "selfClosing"],
  visitor: ["openingElement", "children", "closingElement"],
  aliases: ["JSX", "Immutable", "Expression"],
  fields: {
    openingElement: {
      validate: (0, _index.assertNodeType)("JSXOpeningElement")
    },
    closingElement: {
      optional: true,
      validate: (0, _index.assertNodeType)("JSXClosingElement")
    },
    children: {
      validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("JSXText", "JSXExpressionContainer", "JSXSpreadChild", "JSXElement")))
    }
  }
});

(0, _index2.default)("JSXEmptyExpression", {
  aliases: ["JSX", "Expression"]
});

(0, _index2.default)("JSXExpressionContainer", {
  visitor: ["expression"],
  aliases: ["JSX", "Immutable"],
  fields: {
    expression: {
      validate: (0, _index.assertNodeType)("Expression")
    }
  }
});

(0, _index2.default)("JSXSpreadChild", {
  visitor: ["expression"],
  aliases: ["JSX", "Immutable"],
  fields: {
    expression: {
      validate: (0, _index.assertNodeType)("Expression")
    }
  }
});

(0, _index2.default)("JSXIdentifier", {
  builder: ["name"],
  aliases: ["JSX", "Expression"],
  fields: {
    name: {
      validate: (0, _index.assertValueType)("string")
    }
  }
});

(0, _index2.default)("JSXMemberExpression", {
  visitor: ["object", "property"],
  aliases: ["JSX", "Expression"],
  fields: {
    object: {
      validate: (0, _index.assertNodeType)("JSXMemberExpression", "JSXIdentifier")
    },
    property: {
      validate: (0, _index.assertNodeType)("JSXIdentifier")
    }
  }
});

(0, _index2.default)("JSXNamespacedName", {
  visitor: ["namespace", "name"],
  aliases: ["JSX"],
  fields: {
    namespace: {
      validate: (0, _index.assertNodeType)("JSXIdentifier")
    },
    name: {
      validate: (0, _index.assertNodeType)("JSXIdentifier")
    }
  }
});

(0, _index2.default)("JSXOpeningElement", {
  builder: ["name", "attributes", "selfClosing"],
  visitor: ["name", "attributes"],
  aliases: ["JSX", "Immutable"],
  fields: {
    name: {
      validate: (0, _index.assertNodeType)("JSXIdentifier", "JSXMemberExpression")
    },
    selfClosing: {
      default: false,
      validate: (0, _index.assertValueType)("boolean")
    },
    attributes: {
      validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("JSXAttribute", "JSXSpreadAttribute")))
    }
  }
});

(0, _index2.default)("JSXSpreadAttribute", {
  visitor: ["argument"],
  aliases: ["JSX"],
  fields: {
    argument: {
      validate: (0, _index.assertNodeType)("Expression")
    }
  }
});

(0, _index2.default)("JSXText", {
  aliases: ["JSX", "Immutable"],
  builder: ["value"],
  fields: {
    value: {
      validate: (0, _index.assertValueType)("string")
    }
  }
});
},{"./index":"../node_modules/babel-types/lib/definitions/index.js"}],"../node_modules/babel-types/lib/definitions/misc.js":[function(require,module,exports) {
"use strict";

var _index = require("./index");

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _index2.default)("Noop", {
  visitor: []
});

(0, _index2.default)("ParenthesizedExpression", {
  visitor: ["expression"],
  aliases: ["Expression", "ExpressionWrapper"],
  fields: {
    expression: {
      validate: (0, _index.assertNodeType)("Expression")
    }
  }
});
},{"./index":"../node_modules/babel-types/lib/definitions/index.js"}],"../node_modules/babel-types/lib/definitions/experimental.js":[function(require,module,exports) {
"use strict";

var _index = require("./index");

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _index2.default)("AwaitExpression", {
  builder: ["argument"],
  visitor: ["argument"],
  aliases: ["Expression", "Terminatorless"],
  fields: {
    argument: {
      validate: (0, _index.assertNodeType)("Expression")
    }
  }
});

(0, _index2.default)("ForAwaitStatement", {
  visitor: ["left", "right", "body"],
  aliases: ["Scopable", "Statement", "For", "BlockParent", "Loop", "ForXStatement"],
  fields: {
    left: {
      validate: (0, _index.assertNodeType)("VariableDeclaration", "LVal")
    },
    right: {
      validate: (0, _index.assertNodeType)("Expression")
    },
    body: {
      validate: (0, _index.assertNodeType)("Statement")
    }
  }
});

(0, _index2.default)("BindExpression", {
  visitor: ["object", "callee"],
  aliases: ["Expression"],
  fields: {}
});

(0, _index2.default)("Import", {
  aliases: ["Expression"]
});

(0, _index2.default)("Decorator", {
  visitor: ["expression"],
  fields: {
    expression: {
      validate: (0, _index.assertNodeType)("Expression")
    }
  }
});

(0, _index2.default)("DoExpression", {
  visitor: ["body"],
  aliases: ["Expression"],
  fields: {
    body: {
      validate: (0, _index.assertNodeType)("BlockStatement")
    }
  }
});

(0, _index2.default)("ExportDefaultSpecifier", {
  visitor: ["exported"],
  aliases: ["ModuleSpecifier"],
  fields: {
    exported: {
      validate: (0, _index.assertNodeType)("Identifier")
    }
  }
});

(0, _index2.default)("ExportNamespaceSpecifier", {
  visitor: ["exported"],
  aliases: ["ModuleSpecifier"],
  fields: {
    exported: {
      validate: (0, _index.assertNodeType)("Identifier")
    }
  }
});

(0, _index2.default)("RestProperty", {
  visitor: ["argument"],
  aliases: ["UnaryLike"],
  fields: {
    argument: {
      validate: (0, _index.assertNodeType)("LVal")
    }
  }
});

(0, _index2.default)("SpreadProperty", {
  visitor: ["argument"],
  aliases: ["UnaryLike"],
  fields: {
    argument: {
      validate: (0, _index.assertNodeType)("Expression")
    }
  }
});
},{"./index":"../node_modules/babel-types/lib/definitions/index.js"}],"../node_modules/babel-types/lib/definitions/init.js":[function(require,module,exports) {
"use strict";

require("./index");

require("./core");

require("./es2015");

require("./flow");

require("./jsx");

require("./misc");

require("./experimental");
},{"./index":"../node_modules/babel-types/lib/definitions/index.js","./core":"../node_modules/babel-types/lib/definitions/core.js","./es2015":"../node_modules/babel-types/lib/definitions/es2015.js","./flow":"../node_modules/babel-types/lib/definitions/flow.js","./jsx":"../node_modules/babel-types/lib/definitions/jsx.js","./misc":"../node_modules/babel-types/lib/definitions/misc.js","./experimental":"../node_modules/babel-types/lib/definitions/experimental.js"}],"../node_modules/babel-types/lib/react.js":[function(require,module,exports) {
"use strict";

exports.__esModule = true;
exports.isReactComponent = undefined;
exports.isCompatTag = isCompatTag;
exports.buildChildren = buildChildren;

var _index = require("./index");

var t = _interopRequireWildcard(_index);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var isReactComponent = exports.isReactComponent = t.buildMatchMemberExpression("React.Component");

function isCompatTag(tagName) {
  return !!tagName && /^[a-z]|\-/.test(tagName);
}

function cleanJSXElementLiteralChild(child, args) {
  var lines = child.value.split(/\r\n|\n|\r/);

  var lastNonEmptyLine = 0;

  for (var i = 0; i < lines.length; i++) {
    if (lines[i].match(/[^ \t]/)) {
      lastNonEmptyLine = i;
    }
  }

  var str = "";

  for (var _i = 0; _i < lines.length; _i++) {
    var line = lines[_i];

    var isFirstLine = _i === 0;
    var isLastLine = _i === lines.length - 1;
    var isLastNonEmptyLine = _i === lastNonEmptyLine;

    var trimmedLine = line.replace(/\t/g, " ");

    if (!isFirstLine) {
      trimmedLine = trimmedLine.replace(/^[ ]+/, "");
    }

    if (!isLastLine) {
      trimmedLine = trimmedLine.replace(/[ ]+$/, "");
    }

    if (trimmedLine) {
      if (!isLastNonEmptyLine) {
        trimmedLine += " ";
      }

      str += trimmedLine;
    }
  }

  if (str) args.push(t.stringLiteral(str));
}

function buildChildren(node) {
  var elems = [];

  for (var i = 0; i < node.children.length; i++) {
    var child = node.children[i];

    if (t.isJSXText(child)) {
      cleanJSXElementLiteralChild(child, elems);
      continue;
    }

    if (t.isJSXExpressionContainer(child)) child = child.expression;
    if (t.isJSXEmptyExpression(child)) continue;

    elems.push(child);
  }

  return elems;
}
},{"./index":"../node_modules/babel-types/lib/index.js"}],"../node_modules/babel-types/lib/index.js":[function(require,module,exports) {
"use strict";

exports.__esModule = true;
exports.createTypeAnnotationBasedOnTypeof = exports.removeTypeDuplicates = exports.createUnionTypeAnnotation = exports.valueToNode = exports.toBlock = exports.toExpression = exports.toStatement = exports.toBindingIdentifierName = exports.toIdentifier = exports.toKeyAlias = exports.toSequenceExpression = exports.toComputedKey = exports.isNodesEquivalent = exports.isImmutable = exports.isScope = exports.isSpecifierDefault = exports.isVar = exports.isBlockScoped = exports.isLet = exports.isValidIdentifier = exports.isReferenced = exports.isBinding = exports.getOuterBindingIdentifiers = exports.getBindingIdentifiers = exports.TYPES = exports.react = exports.DEPRECATED_KEYS = exports.BUILDER_KEYS = exports.NODE_FIELDS = exports.ALIAS_KEYS = exports.VISITOR_KEYS = exports.NOT_LOCAL_BINDING = exports.BLOCK_SCOPED_SYMBOL = exports.INHERIT_KEYS = exports.UNARY_OPERATORS = exports.STRING_UNARY_OPERATORS = exports.NUMBER_UNARY_OPERATORS = exports.BOOLEAN_UNARY_OPERATORS = exports.BINARY_OPERATORS = exports.NUMBER_BINARY_OPERATORS = exports.BOOLEAN_BINARY_OPERATORS = exports.COMPARISON_BINARY_OPERATORS = exports.EQUALITY_BINARY_OPERATORS = exports.BOOLEAN_NUMBER_BINARY_OPERATORS = exports.UPDATE_OPERATORS = exports.LOGICAL_OPERATORS = exports.COMMENT_KEYS = exports.FOR_INIT_KEYS = exports.FLATTENABLE_KEYS = exports.STATEMENT_OR_BLOCK_KEYS = undefined;

var _getOwnPropertySymbols = require("babel-runtime/core-js/object/get-own-property-symbols");

var _getOwnPropertySymbols2 = _interopRequireDefault(_getOwnPropertySymbols);

var _getIterator2 = require("babel-runtime/core-js/get-iterator");

var _getIterator3 = _interopRequireDefault(_getIterator2);

var _keys = require("babel-runtime/core-js/object/keys");

var _keys2 = _interopRequireDefault(_keys);

var _stringify = require("babel-runtime/core-js/json/stringify");

var _stringify2 = _interopRequireDefault(_stringify);

var _constants = require("./constants");

Object.defineProperty(exports, "STATEMENT_OR_BLOCK_KEYS", {
  enumerable: true,
  get: function get() {
    return _constants.STATEMENT_OR_BLOCK_KEYS;
  }
});
Object.defineProperty(exports, "FLATTENABLE_KEYS", {
  enumerable: true,
  get: function get() {
    return _constants.FLATTENABLE_KEYS;
  }
});
Object.defineProperty(exports, "FOR_INIT_KEYS", {
  enumerable: true,
  get: function get() {
    return _constants.FOR_INIT_KEYS;
  }
});
Object.defineProperty(exports, "COMMENT_KEYS", {
  enumerable: true,
  get: function get() {
    return _constants.COMMENT_KEYS;
  }
});
Object.defineProperty(exports, "LOGICAL_OPERATORS", {
  enumerable: true,
  get: function get() {
    return _constants.LOGICAL_OPERATORS;
  }
});
Object.defineProperty(exports, "UPDATE_OPERATORS", {
  enumerable: true,
  get: function get() {
    return _constants.UPDATE_OPERATORS;
  }
});
Object.defineProperty(exports, "BOOLEAN_NUMBER_BINARY_OPERATORS", {
  enumerable: true,
  get: function get() {
    return _constants.BOOLEAN_NUMBER_BINARY_OPERATORS;
  }
});
Object.defineProperty(exports, "EQUALITY_BINARY_OPERATORS", {
  enumerable: true,
  get: function get() {
    return _constants.EQUALITY_BINARY_OPERATORS;
  }
});
Object.defineProperty(exports, "COMPARISON_BINARY_OPERATORS", {
  enumerable: true,
  get: function get() {
    return _constants.COMPARISON_BINARY_OPERATORS;
  }
});
Object.defineProperty(exports, "BOOLEAN_BINARY_OPERATORS", {
  enumerable: true,
  get: function get() {
    return _constants.BOOLEAN_BINARY_OPERATORS;
  }
});
Object.defineProperty(exports, "NUMBER_BINARY_OPERATORS", {
  enumerable: true,
  get: function get() {
    return _constants.NUMBER_BINARY_OPERATORS;
  }
});
Object.defineProperty(exports, "BINARY_OPERATORS", {
  enumerable: true,
  get: function get() {
    return _constants.BINARY_OPERATORS;
  }
});
Object.defineProperty(exports, "BOOLEAN_UNARY_OPERATORS", {
  enumerable: true,
  get: function get() {
    return _constants.BOOLEAN_UNARY_OPERATORS;
  }
});
Object.defineProperty(exports, "NUMBER_UNARY_OPERATORS", {
  enumerable: true,
  get: function get() {
    return _constants.NUMBER_UNARY_OPERATORS;
  }
});
Object.defineProperty(exports, "STRING_UNARY_OPERATORS", {
  enumerable: true,
  get: function get() {
    return _constants.STRING_UNARY_OPERATORS;
  }
});
Object.defineProperty(exports, "UNARY_OPERATORS", {
  enumerable: true,
  get: function get() {
    return _constants.UNARY_OPERATORS;
  }
});
Object.defineProperty(exports, "INHERIT_KEYS", {
  enumerable: true,
  get: function get() {
    return _constants.INHERIT_KEYS;
  }
});
Object.defineProperty(exports, "BLOCK_SCOPED_SYMBOL", {
  enumerable: true,
  get: function get() {
    return _constants.BLOCK_SCOPED_SYMBOL;
  }
});
Object.defineProperty(exports, "NOT_LOCAL_BINDING", {
  enumerable: true,
  get: function get() {
    return _constants.NOT_LOCAL_BINDING;
  }
});
exports.is = is;
exports.isType = isType;
exports.validate = validate;
exports.shallowEqual = shallowEqual;
exports.appendToMemberExpression = appendToMemberExpression;
exports.prependToMemberExpression = prependToMemberExpression;
exports.ensureBlock = ensureBlock;
exports.clone = clone;
exports.cloneWithoutLoc = cloneWithoutLoc;
exports.cloneDeep = cloneDeep;
exports.buildMatchMemberExpression = buildMatchMemberExpression;
exports.removeComments = removeComments;
exports.inheritsComments = inheritsComments;
exports.inheritTrailingComments = inheritTrailingComments;
exports.inheritLeadingComments = inheritLeadingComments;
exports.inheritInnerComments = inheritInnerComments;
exports.inherits = inherits;
exports.assertNode = assertNode;
exports.isNode = isNode;
exports.traverseFast = traverseFast;
exports.removeProperties = removeProperties;
exports.removePropertiesDeep = removePropertiesDeep;

var _retrievers = require("./retrievers");

Object.defineProperty(exports, "getBindingIdentifiers", {
  enumerable: true,
  get: function get() {
    return _retrievers.getBindingIdentifiers;
  }
});
Object.defineProperty(exports, "getOuterBindingIdentifiers", {
  enumerable: true,
  get: function get() {
    return _retrievers.getOuterBindingIdentifiers;
  }
});

var _validators = require("./validators");

Object.defineProperty(exports, "isBinding", {
  enumerable: true,
  get: function get() {
    return _validators.isBinding;
  }
});
Object.defineProperty(exports, "isReferenced", {
  enumerable: true,
  get: function get() {
    return _validators.isReferenced;
  }
});
Object.defineProperty(exports, "isValidIdentifier", {
  enumerable: true,
  get: function get() {
    return _validators.isValidIdentifier;
  }
});
Object.defineProperty(exports, "isLet", {
  enumerable: true,
  get: function get() {
    return _validators.isLet;
  }
});
Object.defineProperty(exports, "isBlockScoped", {
  enumerable: true,
  get: function get() {
    return _validators.isBlockScoped;
  }
});
Object.defineProperty(exports, "isVar", {
  enumerable: true,
  get: function get() {
    return _validators.isVar;
  }
});
Object.defineProperty(exports, "isSpecifierDefault", {
  enumerable: true,
  get: function get() {
    return _validators.isSpecifierDefault;
  }
});
Object.defineProperty(exports, "isScope", {
  enumerable: true,
  get: function get() {
    return _validators.isScope;
  }
});
Object.defineProperty(exports, "isImmutable", {
  enumerable: true,
  get: function get() {
    return _validators.isImmutable;
  }
});
Object.defineProperty(exports, "isNodesEquivalent", {
  enumerable: true,
  get: function get() {
    return _validators.isNodesEquivalent;
  }
});

var _converters = require("./converters");

Object.defineProperty(exports, "toComputedKey", {
  enumerable: true,
  get: function get() {
    return _converters.toComputedKey;
  }
});
Object.defineProperty(exports, "toSequenceExpression", {
  enumerable: true,
  get: function get() {
    return _converters.toSequenceExpression;
  }
});
Object.defineProperty(exports, "toKeyAlias", {
  enumerable: true,
  get: function get() {
    return _converters.toKeyAlias;
  }
});
Object.defineProperty(exports, "toIdentifier", {
  enumerable: true,
  get: function get() {
    return _converters.toIdentifier;
  }
});
Object.defineProperty(exports, "toBindingIdentifierName", {
  enumerable: true,
  get: function get() {
    return _converters.toBindingIdentifierName;
  }
});
Object.defineProperty(exports, "toStatement", {
  enumerable: true,
  get: function get() {
    return _converters.toStatement;
  }
});
Object.defineProperty(exports, "toExpression", {
  enumerable: true,
  get: function get() {
    return _converters.toExpression;
  }
});
Object.defineProperty(exports, "toBlock", {
  enumerable: true,
  get: function get() {
    return _converters.toBlock;
  }
});
Object.defineProperty(exports, "valueToNode", {
  enumerable: true,
  get: function get() {
    return _converters.valueToNode;
  }
});

var _flow = require("./flow");

Object.defineProperty(exports, "createUnionTypeAnnotation", {
  enumerable: true,
  get: function get() {
    return _flow.createUnionTypeAnnotation;
  }
});
Object.defineProperty(exports, "removeTypeDuplicates", {
  enumerable: true,
  get: function get() {
    return _flow.removeTypeDuplicates;
  }
});
Object.defineProperty(exports, "createTypeAnnotationBasedOnTypeof", {
  enumerable: true,
  get: function get() {
    return _flow.createTypeAnnotationBasedOnTypeof;
  }
});

var _toFastProperties = require("to-fast-properties");

var _toFastProperties2 = _interopRequireDefault(_toFastProperties);

var _clone = require("lodash/clone");

var _clone2 = _interopRequireDefault(_clone);

var _uniq = require("lodash/uniq");

var _uniq2 = _interopRequireDefault(_uniq);

require("./definitions/init");

var _definitions = require("./definitions");

var _react2 = require("./react");

var _react = _interopRequireWildcard(_react2);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var t = exports;

function registerType(type) {
  var is = t["is" + type];
  if (!is) {
    is = t["is" + type] = function (node, opts) {
      return t.is(type, node, opts);
    };
  }

  t["assert" + type] = function (node, opts) {
    opts = opts || {};
    if (!is(node, opts)) {
      throw new Error("Expected type " + (0, _stringify2.default)(type) + " with option " + (0, _stringify2.default)(opts));
    }
  };
}

exports.VISITOR_KEYS = _definitions.VISITOR_KEYS;
exports.ALIAS_KEYS = _definitions.ALIAS_KEYS;
exports.NODE_FIELDS = _definitions.NODE_FIELDS;
exports.BUILDER_KEYS = _definitions.BUILDER_KEYS;
exports.DEPRECATED_KEYS = _definitions.DEPRECATED_KEYS;
exports.react = _react;


for (var type in t.VISITOR_KEYS) {
  registerType(type);
}

t.FLIPPED_ALIAS_KEYS = {};

(0, _keys2.default)(t.ALIAS_KEYS).forEach(function (type) {
  t.ALIAS_KEYS[type].forEach(function (alias) {
    var types = t.FLIPPED_ALIAS_KEYS[alias] = t.FLIPPED_ALIAS_KEYS[alias] || [];
    types.push(type);
  });
});

(0, _keys2.default)(t.FLIPPED_ALIAS_KEYS).forEach(function (type) {
  t[type.toUpperCase() + "_TYPES"] = t.FLIPPED_ALIAS_KEYS[type];
  registerType(type);
});

var TYPES = exports.TYPES = (0, _keys2.default)(t.VISITOR_KEYS).concat((0, _keys2.default)(t.FLIPPED_ALIAS_KEYS)).concat((0, _keys2.default)(t.DEPRECATED_KEYS));

function is(type, node, opts) {
  if (!node) return false;

  var matches = isType(node.type, type);
  if (!matches) return false;

  if (typeof opts === "undefined") {
    return true;
  } else {
    return t.shallowEqual(node, opts);
  }
}

function isType(nodeType, targetType) {
  if (nodeType === targetType) return true;

  if (t.ALIAS_KEYS[targetType]) return false;

  var aliases = t.FLIPPED_ALIAS_KEYS[targetType];
  if (aliases) {
    if (aliases[0] === nodeType) return true;

    for (var _iterator = aliases, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {
      var _ref;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var alias = _ref;

      if (nodeType === alias) return true;
    }
  }

  return false;
}

(0, _keys2.default)(t.BUILDER_KEYS).forEach(function (type) {
  var keys = t.BUILDER_KEYS[type];

  function builder() {
    if (arguments.length > keys.length) {
      throw new Error("t." + type + ": Too many arguments passed. Received " + arguments.length + " but can receive " + ("no more than " + keys.length));
    }

    var node = {};
    node.type = type;

    var i = 0;

    for (var _iterator2 = keys, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {
      var _ref2;

      if (_isArray2) {
        if (_i2 >= _iterator2.length) break;
        _ref2 = _iterator2[_i2++];
      } else {
        _i2 = _iterator2.next();
        if (_i2.done) break;
        _ref2 = _i2.value;
      }

      var _key = _ref2;

      var field = t.NODE_FIELDS[type][_key];

      var arg = arguments[i++];
      if (arg === undefined) arg = (0, _clone2.default)(field.default);

      node[_key] = arg;
    }

    for (var key in node) {
      validate(node, key, node[key]);
    }

    return node;
  }

  t[type] = builder;
  t[type[0].toLowerCase() + type.slice(1)] = builder;
});

var _loop = function _loop(_type) {
  var newType = t.DEPRECATED_KEYS[_type];

  function proxy(fn) {
    return function () {
      console.trace("The node type " + _type + " has been renamed to " + newType);
      return fn.apply(this, arguments);
    };
  }

  t[_type] = t[_type[0].toLowerCase() + _type.slice(1)] = proxy(t[newType]);
  t["is" + _type] = proxy(t["is" + newType]);
  t["assert" + _type] = proxy(t["assert" + newType]);
};

for (var _type in t.DEPRECATED_KEYS) {
  _loop(_type);
}

function validate(node, key, val) {
  if (!node) return;

  var fields = t.NODE_FIELDS[node.type];
  if (!fields) return;

  var field = fields[key];
  if (!field || !field.validate) return;
  if (field.optional && val == null) return;

  field.validate(node, key, val);
}

function shallowEqual(actual, expected) {
  var keys = (0, _keys2.default)(expected);

  for (var _iterator3 = keys, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {
    var _ref3;

    if (_isArray3) {
      if (_i3 >= _iterator3.length) break;
      _ref3 = _iterator3[_i3++];
    } else {
      _i3 = _iterator3.next();
      if (_i3.done) break;
      _ref3 = _i3.value;
    }

    var key = _ref3;

    if (actual[key] !== expected[key]) {
      return false;
    }
  }

  return true;
}

function appendToMemberExpression(member, append, computed) {
  member.object = t.memberExpression(member.object, member.property, member.computed);
  member.property = append;
  member.computed = !!computed;
  return member;
}

function prependToMemberExpression(member, prepend) {
  member.object = t.memberExpression(prepend, member.object);
  return member;
}

function ensureBlock(node) {
  var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "body";

  return node[key] = t.toBlock(node[key], node);
}

function clone(node) {
  if (!node) return node;
  var newNode = {};
  for (var key in node) {
    if (key[0] === "_") continue;
    newNode[key] = node[key];
  }
  return newNode;
}

function cloneWithoutLoc(node) {
  var newNode = clone(node);
  delete newNode.loc;
  return newNode;
}

function cloneDeep(node) {
  if (!node) return node;
  var newNode = {};

  for (var key in node) {
    if (key[0] === "_") continue;

    var val = node[key];

    if (val) {
      if (val.type) {
        val = t.cloneDeep(val);
      } else if (Array.isArray(val)) {
        val = val.map(t.cloneDeep);
      }
    }

    newNode[key] = val;
  }

  return newNode;
}

function buildMatchMemberExpression(match, allowPartial) {
  var parts = match.split(".");

  return function (member) {
    if (!t.isMemberExpression(member)) return false;

    var search = [member];
    var i = 0;

    while (search.length) {
      var node = search.shift();

      if (allowPartial && i === parts.length) {
        return true;
      }

      if (t.isIdentifier(node)) {
        if (parts[i] !== node.name) return false;
      } else if (t.isStringLiteral(node)) {
        if (parts[i] !== node.value) return false;
      } else if (t.isMemberExpression(node)) {
        if (node.computed && !t.isStringLiteral(node.property)) {
          return false;
        } else {
          search.push(node.object);
          search.push(node.property);
          continue;
        }
      } else {
        return false;
      }

      if (++i > parts.length) {
        return false;
      }
    }

    return true;
  };
}

function removeComments(node) {
  for (var _iterator4 = t.COMMENT_KEYS, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : (0, _getIterator3.default)(_iterator4);;) {
    var _ref4;

    if (_isArray4) {
      if (_i4 >= _iterator4.length) break;
      _ref4 = _iterator4[_i4++];
    } else {
      _i4 = _iterator4.next();
      if (_i4.done) break;
      _ref4 = _i4.value;
    }

    var key = _ref4;

    delete node[key];
  }
  return node;
}

function inheritsComments(child, parent) {
  inheritTrailingComments(child, parent);
  inheritLeadingComments(child, parent);
  inheritInnerComments(child, parent);
  return child;
}

function inheritTrailingComments(child, parent) {
  _inheritComments("trailingComments", child, parent);
}

function inheritLeadingComments(child, parent) {
  _inheritComments("leadingComments", child, parent);
}

function inheritInnerComments(child, parent) {
  _inheritComments("innerComments", child, parent);
}

function _inheritComments(key, child, parent) {
  if (child && parent) {
    child[key] = (0, _uniq2.default)([].concat(child[key], parent[key]).filter(Boolean));
  }
}

function inherits(child, parent) {
  if (!child || !parent) return child;

  for (var _iterator5 = t.INHERIT_KEYS.optional, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : (0, _getIterator3.default)(_iterator5);;) {
    var _ref5;

    if (_isArray5) {
      if (_i5 >= _iterator5.length) break;
      _ref5 = _iterator5[_i5++];
    } else {
      _i5 = _iterator5.next();
      if (_i5.done) break;
      _ref5 = _i5.value;
    }

    var _key2 = _ref5;

    if (child[_key2] == null) {
      child[_key2] = parent[_key2];
    }
  }

  for (var key in parent) {
    if (key[0] === "_") child[key] = parent[key];
  }

  for (var _iterator6 = t.INHERIT_KEYS.force, _isArray6 = Array.isArray(_iterator6), _i6 = 0, _iterator6 = _isArray6 ? _iterator6 : (0, _getIterator3.default)(_iterator6);;) {
    var _ref6;

    if (_isArray6) {
      if (_i6 >= _iterator6.length) break;
      _ref6 = _iterator6[_i6++];
    } else {
      _i6 = _iterator6.next();
      if (_i6.done) break;
      _ref6 = _i6.value;
    }

    var _key3 = _ref6;

    child[_key3] = parent[_key3];
  }

  t.inheritsComments(child, parent);

  return child;
}

function assertNode(node) {
  if (!isNode(node)) {
    throw new TypeError("Not a valid node " + (node && node.type));
  }
}

function isNode(node) {
  return !!(node && _definitions.VISITOR_KEYS[node.type]);
}

(0, _toFastProperties2.default)(t);
(0, _toFastProperties2.default)(t.VISITOR_KEYS);

function traverseFast(node, enter, opts) {
  if (!node) return;

  var keys = t.VISITOR_KEYS[node.type];
  if (!keys) return;

  opts = opts || {};
  enter(node, opts);

  for (var _iterator7 = keys, _isArray7 = Array.isArray(_iterator7), _i7 = 0, _iterator7 = _isArray7 ? _iterator7 : (0, _getIterator3.default)(_iterator7);;) {
    var _ref7;

    if (_isArray7) {
      if (_i7 >= _iterator7.length) break;
      _ref7 = _iterator7[_i7++];
    } else {
      _i7 = _iterator7.next();
      if (_i7.done) break;
      _ref7 = _i7.value;
    }

    var key = _ref7;

    var subNode = node[key];

    if (Array.isArray(subNode)) {
      for (var _iterator8 = subNode, _isArray8 = Array.isArray(_iterator8), _i8 = 0, _iterator8 = _isArray8 ? _iterator8 : (0, _getIterator3.default)(_iterator8);;) {
        var _ref8;

        if (_isArray8) {
          if (_i8 >= _iterator8.length) break;
          _ref8 = _iterator8[_i8++];
        } else {
          _i8 = _iterator8.next();
          if (_i8.done) break;
          _ref8 = _i8.value;
        }

        var _node = _ref8;

        traverseFast(_node, enter, opts);
      }
    } else {
      traverseFast(subNode, enter, opts);
    }
  }
}

var CLEAR_KEYS = ["tokens", "start", "end", "loc", "raw", "rawValue"];

var CLEAR_KEYS_PLUS_COMMENTS = t.COMMENT_KEYS.concat(["comments"]).concat(CLEAR_KEYS);

function removeProperties(node, opts) {
  opts = opts || {};
  var map = opts.preserveComments ? CLEAR_KEYS : CLEAR_KEYS_PLUS_COMMENTS;
  for (var _iterator9 = map, _isArray9 = Array.isArray(_iterator9), _i9 = 0, _iterator9 = _isArray9 ? _iterator9 : (0, _getIterator3.default)(_iterator9);;) {
    var _ref9;

    if (_isArray9) {
      if (_i9 >= _iterator9.length) break;
      _ref9 = _iterator9[_i9++];
    } else {
      _i9 = _iterator9.next();
      if (_i9.done) break;
      _ref9 = _i9.value;
    }

    var _key4 = _ref9;

    if (node[_key4] != null) node[_key4] = undefined;
  }

  for (var key in node) {
    if (key[0] === "_" && node[key] != null) node[key] = undefined;
  }

  var syms = (0, _getOwnPropertySymbols2.default)(node);
  for (var _iterator10 = syms, _isArray10 = Array.isArray(_iterator10), _i10 = 0, _iterator10 = _isArray10 ? _iterator10 : (0, _getIterator3.default)(_iterator10);;) {
    var _ref10;

    if (_isArray10) {
      if (_i10 >= _iterator10.length) break;
      _ref10 = _iterator10[_i10++];
    } else {
      _i10 = _iterator10.next();
      if (_i10.done) break;
      _ref10 = _i10.value;
    }

    var sym = _ref10;

    node[sym] = null;
  }
}

function removePropertiesDeep(tree, opts) {
  traverseFast(tree, removeProperties, opts);
  return tree;
}
},{"babel-runtime/core-js/object/get-own-property-symbols":"../node_modules/babel-runtime/core-js/object/get-own-property-symbols.js","babel-runtime/core-js/get-iterator":"../node_modules/babel-runtime/core-js/get-iterator.js","babel-runtime/core-js/object/keys":"../node_modules/babel-runtime/core-js/object/keys.js","babel-runtime/core-js/json/stringify":"../node_modules/babel-runtime/core-js/json/stringify.js","./constants":"../node_modules/babel-types/lib/constants.js","./retrievers":"../node_modules/babel-types/lib/retrievers.js","./validators":"../node_modules/babel-types/lib/validators.js","./converters":"../node_modules/babel-types/lib/converters.js","./flow":"../node_modules/babel-types/lib/flow.js","to-fast-properties":"../node_modules/babel-types/node_modules/to-fast-properties/index.js","lodash/clone":"../node_modules/lodash/clone.js","lodash/uniq":"../node_modules/lodash/uniq.js","./definitions/init":"../node_modules/babel-types/lib/definitions/init.js","./definitions":"../node_modules/babel-types/lib/definitions/index.js","./react":"../node_modules/babel-types/lib/react.js"}],"../node_modules/invariant/browser.js":[function(require,module,exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
'use strict';
/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var invariant = function (condition, format, a, b, c, d, e, f) {
  if ("development" !== 'production') {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  }

  if (!condition) {
    var error;

    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame

    throw error;
  }
};

module.exports = invariant;
},{}],"cljs-types.js":[function(require,module,exports) {
var program = function program(children) {
  return {
    type: "program",
    children: children
  };
};

var comment = function comment(value) {
  return {
    type: "comment",
    value: value
  };
};

var symbol = function symbol(name) {
  return {
    type: "symbol",
    name: name
  };
};

var list = function list(children) {
  return {
    type: "list",
    children: children
  };
};

var vector = function vector(children) {
  return {
    type: "vector",
    children: children
  };
};

var keyword = function keyword(value) {
  return {
    type: "keyword",
    value: value
  };
};

var tagged = function tagged(tag, expr) {
  return {
    type: "tagged",
    tag: tag,
    expr: expr
  };
}; // ==========================


var NumericLiteral = function NumericLiteral(value) {
  return {
    type: "NumericLiteral",
    value: value
  };
};

var StringLiteral = function StringLiteral(value) {
  return {
    type: "StringLiteral",
    value: value
  };
};

var BooleanLiteral = function BooleanLiteral(value) {
  return {
    type: "BooleanLiteral",
    value: value
  };
};

var ArrayExpression = function ArrayExpression(children) {
  return {
    type: "ArrayExpression",
    children: children
  };
};

var ObjectExpression = function ObjectExpression(children) {
  return {
    type: "ObjectExpression",
    children: children
  };
};

var ObjectProperty = function ObjectProperty(children) {
  return {
    type: "ObjectProperty",
    children: children
  };
};

var EmptyStatement = function EmptyStatement() {
  return {
    type: "EmptyStatement"
  };
};

var BreakStatement = function BreakStatement() {
  return {
    type: "BreakStatement"
  };
};

var RegExpLiteral = function RegExpLiteral(_ref) {
  var pattern = _ref.pattern,
      flags = _ref.flags;
  return {
    type: "RegExpLiteral",
    pattern: pattern,
    flags: flags
  };
}; // ==========================


var HashMap = function HashMap(children) {
  return {
    type: "HashMap",
    children: children
  };
};

var MapEntry = function MapEntry(key, value) {
  return {
    type: "MapEntry",
    children: [key, value]
  };
}; // ============================


var DEF = "def";
var DEFN = "defn";
var FN = "fn";
var LET = "let";
var IF = "if";
var WHEN = "when";
var COND = "cond";
var CASE = "case";
var NIL = "nil";
var TRY = "try";
var CATCH = "catch";
var FINALLY = "finally";
var THROW = "throw";
var DO = "throw";
module.exports = {
  NumericLiteral: NumericLiteral,
  StringLiteral: StringLiteral,
  BooleanLiteral: BooleanLiteral,
  ArrayExpression: ArrayExpression,
  ObjectExpression: ObjectExpression,
  ObjectProperty: ObjectProperty,
  EmptyStatement: EmptyStatement,
  BreakStatement: BreakStatement,
  RegExpLiteral: RegExpLiteral,
  program: program,
  comment: comment,
  symbol: symbol,
  list: list,
  vector: vector,
  tagged: tagged,
  keyword: keyword,
  HashMap: HashMap,
  MapEntry: MapEntry,
  DEF: DEF,
  DEFN: DEFN,
  FN: FN,
  LET: LET,
  IF: IF,
  WHEN: WHEN,
  COND: COND,
  CASE: CASE,
  NIL: NIL,
  TRY: TRY,
  CATCH: CATCH,
  FINALLY: FINALLY,
  THROW: THROW,
  DO: DO
};
},{}],"utils.js":[function(require,module,exports) {
var global = arguments[3];
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function _toArray(arr) { return _arrayWithHoles(arr) || _iterableToArray(arr) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var bt = require("babel-types");

var t = require("./cljs-types");

var globalObj = typeof window !== "undefined" ? window : global;

var isComponentElement = function isComponentElement(n) {
  return /^[A-Z]/.test(n);
};

var flatMap = function flatMap(fn, coll) {
  return coll.map(fn).reduce(function (ret, e) {
    return ret.concat(e);
  }, []);
};

function takeWhile(pred, _ref) {
  var _ref2 = _toArray(_ref),
      x = _ref2[0],
      xs = _ref2.slice(1);

  var ret = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];

  if (pred(x)) {
    return takeWhile(pred, xs, ret.concat(x));
  }

  if (x === undefined) {
    return [ret];
  } else {
    return [ret, [x].concat(_toConsumableArray(xs))];
  }
}

function getCondEntries(node) {
  var ret = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  var test = node.test,
      consequent = node.consequent,
      alternate = node.alternate;

  if (bt.isIfStatement(alternate)) {
    return getCondEntries(alternate, ret.concat([test, consequent]));
  }

  return ret.concat([test, consequent, ":else", alternate === null ? t.NIL : alternate]);
}

function getDotProps(node) {
  var ret = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

  if (bt.isMemberExpression(node.object)) {
    return getDotProps(node.object, [node.property].concat(_toConsumableArray(ret)));
  }

  return [node.object, node.property].concat(_toConsumableArray(ret));
}

function normalizeOperator(op) {
  if (op === "==") {
    return "=";
  }

  if (op === "===") {
    return "=";
  }

  if (op === "!=") {
    return "not=";
  }

  if (op === "!==") {
    return "not=";
  }

  if (op === "||") {
    return "or";
  }

  if (op === "&&") {
    return "and";
  }

  if (op === "!") {
    return "not";
  }

  return op;
}

function maybeThreadMemberSyntax(next, node) {
  if (bt.isCallExpression(node)) {
    if (bt.isCallExpression(node.callee.object)) {
      return [t.list([next(node.callee.property, {
        isCall: true
      })].concat(_toConsumableArray(node.arguments.map(next))))].concat(_toConsumableArray(maybeThreadMemberSyntax(next, node.callee.object)));
    }

    var f;

    if (bt.isIdentifier(node.callee) && globalObj.hasOwnProperty(node.callee.name)) {
      f = t.symbol("js/".concat(node.callee.name));
    } else {
      f = next(node.callee);
    }

    return [t.list([f].concat(_toConsumableArray(node.arguments.map(next))))];
  }
}

function isNestedThisExpression(node) {
  if (bt.isThisExpression(node.object)) {
    return node;
  }

  if (node.object.hasOwnProperty("object")) {
    return isNestedThisExpression(node.object);
  }

  return false;
}

function alterNestedThisExpression(name, node) {
  var thisNode = isNestedThisExpression(node);

  if (thisNode) {
    thisNode.object = bt.identifier(name);
  }
}

module.exports = {
  isComponentElement: isComponentElement,
  flatMap: flatMap,
  takeWhile: takeWhile,
  getCondEntries: getCondEntries,
  getDotProps: getDotProps,
  normalizeOperator: normalizeOperator,
  maybeThreadMemberSyntax: maybeThreadMemberSyntax,
  isNestedThisExpression: isNestedThisExpression,
  alterNestedThisExpression: alterNestedThisExpression,
  globalObj: globalObj
};
},{"babel-types":"../node_modules/babel-types/lib/index.js","./cljs-types":"cljs-types.js"}],"ast-types/javascript.js":[function(require,module,exports) {
module.exports = ["ArrayExpression", "AssignmentExpression", "BinaryExpression", "Directive", "DirectiveLiteral", "BlockStatement", "BreakStatement", "CallExpression", "CatchClause", "ConditionalExpression", "ContinueStatement", "DebuggerStatement", "DoWhileStatement", "EmptyStatement", "ExpressionStatement", "File", "ForInStatement", "ForStatement", "FunctionDeclaration", "FunctionExpression", "Identifier", "IfStatement", "LabeledStatement", "StringLiteral", "NumericLiteral", "NullLiteral", "BooleanLiteral", "RegExpLiteral", "LogicalExpression", "MemberExpression", "NewExpression", "Program", "ObjectExpression", "ObjectMethod", "ObjectProperty", "RestElement", "ReturnStatement", "SequenceExpression", "SwitchCase", "SwitchStatement", "ThisExpression", "ThrowStatement", "TryStatement", "UnaryExpression", "UpdateExpression", "VariableDeclaration", "VariableDeclarator", "WhileStatement", "WithStatement", "AssignmentPattern", "ArrayPattern", "ArrowFunctionExpression", "ClassBody", "ClassDeclaration", "ClassExpression", "ExportAllDeclaration", "ExportDefaultDeclaration", "ExportNamedDeclaration", "ExportSpecifier", "ForOfStatement", "ImportDeclaration", "ImportDefaultSpecifier", "ImportNamespaceSpecifier", "ImportSpecifier", "MetaProperty", "ClassMethod", "ObjectPattern", "SpreadElement", "Super", "TaggedTemplateExpression", "TemplateElement", "TemplateLiteral", "YieldExpression", "ClassImplements", "ClassProperty", "DeclareClass", "DeclareFunction", "DeclareInterface", "DeclareModule", "DeclareModuleExports", "DeclareVariable", "DeclareExportDeclaration", "InterfaceExtends", "InterfaceDeclaration", "Noop", "ParenthesizedExpression", "AwaitExpression", "ForAwaitStatement", "BindExpression", "Import", "Decorator", "DoExpression", "ExportDefaultSpecifier", "ExportNamespaceSpecifier", "RestProperty", "SpreadProperty", "NumberLiteral", "RegexLiteral"];
},{}],"ast-types/jsx.js":[function(require,module,exports) {
module.exports = ["JSXAttribute", "JSXClosingElement", "JSXElement", "JSXEmptyExpression", "JSXExpressionContainer", "JSXSpreadChild", "JSXIdentifier", "JSXMemberExpression", "JSXNamespacedName", "JSXOpeningElement", "JSXSpreadAttribute", "JSXText"];
},{}],"ast-builders.js":[function(require,module,exports) {
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

var t = require("./cljs-types");

var utils = require("./utils");

var DEF = function DEF(id, init) {
  return t.list([t.symbol(t.DEF), id, init]);
};

var FN = function FN(next, id, params, body) {
  var opts = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {
    isImplicitDo: true
  };
  var bodies = next(body, opts);
  var larr = [t.symbol(t.FN)];

  if (id !== null) {
    larr.push(next(id));
  }

  larr.push(t.vector(params.map(next)));
  var l = t.list(larr);

  if (Array.isArray(bodies)) {
    var _l$children;

    (_l$children = l.children).push.apply(_l$children, _toConsumableArray(bodies));
  } else {
    l.children.push(bodies);
  }

  return l;
};

var DEFN = function DEFN(next, id, params, body) {
  var bodies = next(body, {
    isImplicitDo: true
  });
  var l = t.list([t.symbol(t.DEFN), next(id), t.vector(params.map(next))]);

  if (Array.isArray(bodies)) {
    var _l$children2;

    (_l$children2 = l.children).push.apply(_l$children2, _toConsumableArray(bodies));
  } else {
    l.children.push(bodies);
  }

  return l;
};

var FN_CALL = function FN_CALL(next, fn) {
  var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
  return t.list([fn].concat(_toConsumableArray(args.map(next))));
};

var METHOD_CALL = function METHOD_CALL(next, method, object, args) {
  return t.list([next(method, {
    isCall: true
  }), object].concat(_toConsumableArray(args.map(next))));
};

var THIS_AS = function THIS_AS(name, bodies) {
  return t.list([t.symbol("this-as"), t.symbol(name)].concat(_toConsumableArray(bodies)));
};

var PROP_GET = function PROP_GET(next, prop, object) {
  return t.list([next(prop, {
    isDotGetter: true
  }), next(object, {
    checkGlobal: true
  })]);
};

var NESTED_PROPS_GET = function NESTED_PROPS_GET(next, target, props) {
  return t.list([t.symbol(".."), next(target, {
    checkGlobal: true
  })].concat(_toConsumableArray(props.map(function (n) {
    return next(n, {
      isGetter: true
    });
  }))));
};

var DO = function DO(bodies) {
  return t.list([t.symbol("do")].concat(_toConsumableArray(bodies)));
};

var IF = function IF(next, test, consequent, alternate) {
  var l = t.list([t.symbol(t.IF), next(test)]);

  if (consequent.body === undefined || consequent.body.length > 1) {
    l.children.push(next(consequent));
  } else {
    var _l$children3;

    (_l$children3 = l.children).push.apply(_l$children3, _toConsumableArray(next(consequent, {
      isImplicitDo: true
    })));
  }

  if (alternate.body === undefined || alternate.body.length > 1) {
    l.children.push(next(alternate));
  } else {
    var _l$children4;

    (_l$children4 = l.children).push.apply(_l$children4, _toConsumableArray(next(alternate, {
      isImplicitDo: true
    })));
  }

  return l;
};

var WHEN = function WHEN(next, test, consequent) {
  var ret = t.list([t.symbol(t.WHEN), next(test)]);
  var conseq = next(consequent, {
    isImplicitDo: true
  });

  if (Array.isArray(conseq)) {
    var _ret$children;

    (_ret$children = ret.children).push.apply(_ret$children, _toConsumableArray(conseq));
  } else {
    ret.children.push(conseq);
  }

  return ret;
};

var COND = function COND(next, ast) {
  var entries = utils.getCondEntries(ast).map(function (n) {
    if (n === ":else") {
      return t.keyword("else");
    }

    if (n === "nil") {
      return t.symbol(t.NIL);
    }

    if (n.body && n.body.length === 1) {
      var r = next(n, {
        isImplicitDo: true
      });
      return r[0];
    }

    return next(n);
  });
  return t.list([t.symbol(t.COND)].concat(_toConsumableArray(entries)));
};

var CASE = function CASE(next, discriminant, cases) {
  return t.list([t.symbol(t.CASE), next(discriminant)].concat(_toConsumableArray(utils.flatMap(next, cases))));
};

var HICCUP_ELEMENT = function HICCUP_ELEMENT(next, tag, attrs, children) {
  return t.vector([next(tag), t.HashMap(attrs ? attrs.map(next) : null)].concat(_toConsumableArray(children.map(next))));
};

module.exports = {
  DEF: DEF,
  FN: FN,
  DEFN: DEFN,
  FN_CALL: FN_CALL,
  METHOD_CALL: METHOD_CALL,
  THIS_AS: THIS_AS,
  PROP_GET: PROP_GET,
  NESTED_PROPS_GET: NESTED_PROPS_GET,
  DO: DO,
  IF: IF,
  WHEN: WHEN,
  COND: COND,
  CASE: CASE,
  HICCUP_ELEMENT: HICCUP_ELEMENT
};
},{"./cljs-types":"cljs-types.js","./utils":"utils.js"}],"ast-transforms.js":[function(require,module,exports) {
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _toArray(arr) { return _arrayWithHoles(arr) || _iterableToArray(arr) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

var bt = require("babel-types");

var invariant = require("invariant");

var t = require("./cljs-types");

var utils = require("./utils");

var jsTypes = require("./ast-types/javascript");

var jsxTypes = require("./ast-types/jsx");

var globalObj = utils.globalObj;

var _require = require("./ast-builders"),
    DEF = _require.DEF,
    FN = _require.FN,
    DEFN = _require.DEFN,
    FN_CALL = _require.FN_CALL,
    METHOD_CALL = _require.METHOD_CALL,
    THIS_AS = _require.THIS_AS,
    PROP_GET = _require.PROP_GET,
    NESTED_PROPS_GET = _require.NESTED_PROPS_GET,
    DO = _require.DO,
    IF = _require.IF,
    WHEN = _require.WHEN,
    COND = _require.COND,
    CASE = _require.CASE,
    HICCUP_ELEMENT = _require.HICCUP_ELEMENT;

var File = function File(next, ast, opts) {
  return next(ast.program);
};

var Program = function Program(next, ast, opts) {
  return t.program(ast.body.map(next));
};

var ExpressionStatement = function ExpressionStatement(next, ast, opts) {
  return next(ast.expression);
};

var BinaryExpression = function BinaryExpression(next, ast, opts) {
  var operator = ast.operator,
      left = ast.left,
      right = ast.right;
  return t.list([t.symbol(utils.normalizeOperator(operator)), next(left), next(right)]);
};

var DeleteStatement = function DeleteStatement(next, ast, opts) {
  var argument = ast.argument;
  invariant(bt.isMemberExpression(argument), "Can't transform \"delete\" for non MemberExpression node");
  var prop = next(argument.property);
  invariant(prop.value !== undefined || prop.name !== undefined, "Couldn't infer \"delete\" key. Should be a symbol or a number");
  var property = prop.type === "StringLiteral" ? prop : prop.type === "NumericLiteral" ? prop : t.StringLiteral(prop.name);
  return t.list([t.symbol("js-delete"), next(argument.object), property]);
};

var UnaryExpression = function UnaryExpression(next, ast, opts) {
  var operator = ast.operator,
      argument = ast.argument;

  if (operator === "delete") {
    return DeleteStatement(next, ast, opts);
  }

  return t.list([t.symbol(utils.normalizeOperator(operator)), next(argument)]);
};

var Identifier = function Identifier(next, ast, opts) {
  if (opts.isGetter) {
    return t.symbol("-".concat(ast.name));
  }

  if (opts.isDotGetter) {
    return t.symbol(".-".concat(ast.name));
  }

  if (opts.isCall) {
    return t.symbol(".".concat(ast.name));
  }

  if (opts.checkGlobal && globalObj.hasOwnProperty(ast.name)) {
    return t.symbol("js/".concat(ast.name));
  }

  return t.symbol(ast.name);
};

var NumericLiteral = function NumericLiteral(next, ast, opts) {
  return t.NumericLiteral(ast.extra.raw);
};

var VariableDeclaration = function VariableDeclaration(next, ast, opts) {
  return next(ast.declarations[0]);
};

var VariableDeclarator = function VariableDeclarator(next, ast, opts) {
  var id = ast.id,
      init = ast.init;

  if (init === null) {
    return DEF(next(id), t.symbol(t.NIL));
  }

  if (bt.isArrowFunctionExpression(init)) {
    var body = init.body,
        params = init.params;
    return DEFN(next, id, params, body);
  }

  return DEF(next(id), next(init, {
    isVar: true
  }));
};

var FunctionDeclaration = function FunctionDeclaration(next, ast, opts) {
  var id = ast.id,
      params = ast.params,
      body = ast.body;
  return DEFN(next, id, params, body);
};

var FunctionExpression = function FunctionExpression(next, ast, opts) {
  var id = ast.id,
      params = ast.params,
      body = ast.body;

  if (id === null || opts.isVar) {
    return FN(next, id, params, body);
  } else {
    return DEFN(next, id, params, body);
  }
};

var ArrowFunctionExpression = function ArrowFunctionExpression(next, ast, opts) {
  var params = ast.params,
      body = ast.body;
  return FN(next, null, params, body, {
    isImplicitDo: !ast.expression
  });
};

var ReturnStatement = function ReturnStatement(next, ast, opts) {
  return next(ast.argument);
};

var CallExpression = function CallExpression(next, ast, opts) {
  var callee = ast.callee;
  var memberChain = utils.maybeThreadMemberSyntax(next, ast).reverse();
  var isSpreadCall = ast.arguments.some(function (arg) {
    return bt.isSpreadElement(arg);
  });
  var spreadArgs = isSpreadCall ? ArrayExpression(next, {
    elements: ast.arguments
  }, opts) : undefined;

  if (memberChain.length > 2) {
    return t.list([t.symbol("->")].concat(_toConsumableArray(memberChain)));
  }

  if (bt.isMemberExpression(callee)) {
    if (callee.object.name && globalObj.hasOwnProperty(callee.object.name)) {
      var fn = t.symbol("js/".concat(callee.object.name));

      if (isSpreadCall) {
        return t.list([t.symbol(".apply"), t.list([next(callee.property, {
          isDotGetter: true
        }), fn]), fn, spreadArgs]);
      }

      return METHOD_CALL(next, callee.property, fn, ast.arguments);
    } else {
      var _fn = next(callee, {
        isCallExpression: true
      });

      if (isSpreadCall) {
        var object = _fn.children[1];
        return t.list([t.symbol(".apply"), t.list([next(callee.property, {
          isDotGetter: true
        }), object]), object, spreadArgs]);
      }

      return t.list([].concat(_toConsumableArray(_fn.children), _toConsumableArray(ast.arguments.map(next))));
    }
  }

  if (globalObj.hasOwnProperty(callee.name)) {
    var _fn2 = t.symbol("js/".concat(callee.name));

    if (isSpreadCall) {
      return t.list([t.symbol(".apply"), _fn2, t.symbol(t.NIL), spreadArgs]);
    }

    return FN_CALL(next, _fn2, ast.arguments);
  }

  if (isSpreadCall) {
    return t.list([t.symbol(".apply"), next(callee), t.symbol(t.NIL), spreadArgs]);
  }

  return FN_CALL(next, next(callee), ast.arguments);
};

var MemberExpression = function MemberExpression(next, ast, opts) {
  var object = ast.object,
      property = ast.property;

  if (opts.isCallExpression) {
    if (bt.isThisExpression(object)) {
      return THIS_AS("this", [METHOD_CALL(next, property, t.symbol("this"), [])]);
    }

    if (ast.computed) {
      return FN_CALL(next, FN_CALL(next, t.symbol("aget"), [object, property]), []);
    }

    return METHOD_CALL(next, property, next(object), []);
  }

  if (bt.isThisExpression(object)) {
    return THIS_AS("this", [METHOD_CALL(next, property, t.symbol("this"), [])]);
  }

  if (ast.computed) {
    return FN_CALL(next, t.symbol("aget"), [object, property]);
  }

  var _utils$getDotProps = utils.getDotProps(ast),
      _utils$getDotProps2 = _toArray(_utils$getDotProps),
      target = _utils$getDotProps2[0],
      props = _utils$getDotProps2.slice(1);

  if (props.length === 1) {
    return PROP_GET(next, props[0], target);
  }

  return NESTED_PROPS_GET(next, target, props);
};

var StringLiteral = function StringLiteral(next, ast, opts) {
  return t.StringLiteral(ast.value);
};

var ArrayExpression = function ArrayExpression(next, ast, opts) {
  var elements = ast.elements;
  return elements.reduce(function (ret, el) {
    if (bt.isSpreadElement(el)) {
      return t.list([t.symbol(".concat"), ret, next(el)]);
    } else {
      ret.children.push(next(el));
      return ret;
    }
  }, t.ArrayExpression([]));
};

var ObjectExpression = function ObjectExpression(next, ast, opts) {
  var properties = ast.properties;
  return properties.reduce(function (ret, el) {
    if (bt.isSpreadProperty(el)) {
      return t.list([t.symbol("js/Object.assign"), ret, next(el)]);
    } else {
      var lastChild = ret.children[ret.children.length - 1];

      if (lastChild && lastChild.type !== "ObjectProperty") {
        ret.children.push(t.ObjectExpression([next(el)]));
      } else {
        ret.children.push(next(el));
      }

      return ret;
    }
  }, t.ObjectExpression([]));
};

var ObjectProperty = function ObjectProperty(next, ast, opts) {
  return t.ObjectProperty([next(ast.key), next(ast.value)]);
};

var ThisExpression = function ThisExpression(next, ast, opts) {
  return THIS_AS("this", []);
};

var AssignmentExpression = function AssignmentExpression(next, ast, opts) {
  if (bt.isMemberExpression(ast.left) && ast.left.computed) {
    return t.list([t.symbol("aset"), next(ast.left.object), next(ast.left.property), next(ast.right)]);
  }

  var expr = t.list([t.symbol("set!"), next(ast.left), next(ast.right)]);

  if (bt.isMemberExpression(ast.left) && utils.isNestedThisExpression(ast.left)) {
    utils.alterNestedThisExpression("that", ast.left);
    return THIS_AS("that", [expr]);
  }

  return expr;
};

var NewExpression = function NewExpression(next, ast, opts) {
  return t.list([t.symbol("new"), next(ast.callee, {
    isCallExpression: true
  })].concat(_toConsumableArray(ast.arguments.map(next))));
};

var ObjectMethod = function ObjectMethod(next, ast, opts) {
  return t.ObjectProperty([next(ast.key), FN(next, null, ast.params, ast.body)]);
};

var EmptyStatement = function EmptyStatement(next, ast, opts) {
  return t.EmptyStatement();
};

var BlockStatement = function BlockStatement(next, ast, opts) {
  if (bt.isVariableDeclaration(ast.body[0])) {
    var _utils$takeWhile = utils.takeWhile(function (n) {
      return bt.isVariableDeclaration(n);
    }, ast.body),
        _utils$takeWhile2 = _slicedToArray(_utils$takeWhile, 2),
        decls = _utils$takeWhile2[0],
        rest = _utils$takeWhile2[1];

    var entries = utils.flatMap(function (d) {
      var _d$declarations$ = d.declarations[0],
          id = _d$declarations$.id,
          init = _d$declarations$.init;

      if (init === null) {
        return [next(id), t.symbol(t.NIL)];
      }

      return [next(id), next(init)];
    }, decls);
    var ret = t.list([t.symbol(t.LET), t.vector(entries)]);

    if (rest) {
      var _ret$children;

      (_ret$children = ret.children).push.apply(_ret$children, _toConsumableArray(rest.map(next)));
    }

    return ret;
  }

  if (opts.isImplicitDo) {
    return ast.body.map(next);
  }

  return DO(ast.body.map(next));
};

var IfStatement = function IfStatement(next, ast, opts) {
  var test = ast.test,
      consequent = ast.consequent,
      alternate = ast.alternate;

  if (bt.isIfStatement(alternate)) {
    return COND(next, ast);
  }

  if (alternate !== null) {
    return IF(next, test, consequent, alternate);
  }

  return WHEN(next, test, consequent);
};

var SwitchStatement = function SwitchStatement(next, ast, opts) {
  var discriminant = ast.discriminant,
      cases = ast.cases;
  return CASE(next, discriminant, cases);
};

var SwitchCase = function SwitchCase(next, ast, opts) {
  var test = ast.test,
      consequent = ast.consequent;
  var csqf = consequent.filter(function (n) {
    return !bt.isBreakStatement(n);
  });
  var csq = csqf.map(next);

  if (bt.isVariableDeclaration(consequent[0])) {
    var _utils$takeWhile3 = utils.takeWhile(function (n) {
      return bt.isVariableDeclaration(n);
    }, csqf),
        _utils$takeWhile4 = _slicedToArray(_utils$takeWhile3, 2),
        decls = _utils$takeWhile4[0],
        rest = _utils$takeWhile4[1];

    var entries = utils.flatMap(function (d) {
      var _d$declarations$2 = d.declarations[0],
          id = _d$declarations$2.id,
          init = _d$declarations$2.init;
      return [next(id), next(init)];
    }, decls);
    return [next(test), t.list([t.symbol(t.LET), t.vector(entries)].concat(_toConsumableArray(rest.map(next))))];
  }

  if (test === null) {
    return csq;
  }

  return [next(test), csq.length > 1 ? DO(csq) : csq[0]];
};

var BreakStatement = function BreakStatement(next, ast, opts) {
  return t.BreakStatement();
};

var ImportDeclaration = function ImportDeclaration(next, ast, opts) {
  var source = ast.source,
      specifiers = ast.specifiers;
  var sxs = specifiers.map(function (s) {
    if (bt.isImportSpecifier(s)) {
      return [next(s.imported, {
        isDotGetter: true
      }), next(s.local)];
    }

    if (bt.isImportDefaultSpecifier(s)) {
      return [t.symbol(".-default"), next(s.local)];
    }

    if (bt.isImportNamespaceSpecifier(s)) {
      return ["*", next(s.local)];
    }
  });
  var imported = sxs[0][0];
  var local = sxs[0][1];

  if (imported === "*") {
    return DEF(local, FN_CALL(next, t.symbol("js/require"), [source]));
  }

  return DEF(local, t.list([imported, FN_CALL(next, t.symbol("js/require"), [source])]));
};

var ExportDefaultDeclaration = function ExportDefaultDeclaration(next, ast, opts) {
  var declaration = ast.declaration;
  return t.list([t.symbol("set!"), t.list([t.symbol(".-default"), t.symbol("js/exports")]), next(declaration)]);
};

var ExportNamedDeclaration = function ExportNamedDeclaration(next, ast, opts) {
  var declaration = next(ast.declaration);
  var id = declaration.children[1];
  var exporter = t.list([t.symbol("set!"), t.list([t.symbol(".-".concat(id.name)), t.symbol("js/exports")]), id]);
  return DO([declaration, exporter]);
};

var ConditionalExpression = function ConditionalExpression(next, ast, opts) {
  var test = ast.test,
      consequent = ast.consequent,
      alternate = ast.alternate;
  return IF(next, test, consequent, alternate);
};

var LogicalExpression = function LogicalExpression(next, ast, opts) {
  var operator = ast.operator,
      left = ast.left,
      right = ast.right;
  return FN_CALL(next, t.symbol(utils.normalizeOperator(operator)), [left, right]);
};

var NullLiteral = function NullLiteral(next, ast, opts) {
  return t.symbol(t.NIL);
};

var BooleanLiteral = function BooleanLiteral(next, ast, opts) {
  return t.BooleanLiteral(ast.value);
};

var RegExpLiteral = function RegExpLiteral(next, ast, opts) {
  return t.RegExpLiteral(ast);
};

var TryStatement = function TryStatement(next, ast, opts) {
  var block = ast.block,
      handler = ast.handler,
      finalizer = ast.finalizer;
  var body = next(block, {
    isImplicitDo: true
  });
  var expr = t.list([t.symbol(t.TRY)]);

  if (Array.isArray(body)) {
    var _expr$children;

    (_expr$children = expr.children).push.apply(_expr$children, _toConsumableArray(body));
  } else {
    expr.children.push(body);
  }

  expr.children.push(t.list([t.symbol(t.CATCH)].concat(_toConsumableArray(next(handler)))));

  if (finalizer) {
    var finalBody = next(finalizer, {
      isImplicitDo: true
    });

    if (Array.isArray(finalBody)) {
      expr.children.push(t.list([t.symbol(t.FINALLY)].concat(_toConsumableArray(finalBody))));
    } else {
      expr.children.push(t.list([t.symbol(t.FINALLY), finalBody]));
    }
  }

  return expr;
};

var CatchClause = function CatchClause(next, ast, opts) {
  var param = ast.param,
      body = ast.body;
  var catchBody = next(body, {
    isImplicitDo: true
  });

  if (Array.isArray(catchBody)) {
    return [t.symbol("js/Object"), next(param)].concat(_toConsumableArray(catchBody));
  } else {
    return [t.symbol("js/Object"), next(param), catchBody];
  }
};

var ThrowStatement = function ThrowStatement(next, ast, opts) {
  return t.list([t.symbol(t.THROW), next(ast.argument)]);
};

var TemplateLiteral = function TemplateLiteral(next, ast, opts) {
  var expressions = ast.expressions,
      quasis = ast.quasis;
  var args = quasis.reduce(function (ret, q, idx) {
    var s = t.StringLiteral(q.value.raw);

    if (q === quasis[quasis.length - 1]) {
      return ret.concat(s);
    } else {
      return ret.concat([s, next(expressions[idx])]);
    }
  }, []);
  return t.list([t.symbol("str")].concat(_toConsumableArray(args)));
};

var DebuggerStatement = function DebuggerStatement(next, ast, opts) {
  return FN_CALL(next, t.symbol("js-debugger"));
};

var SpreadElement = function SpreadElement(next, ast, opts) {
  return next(ast.argument);
};

var SpreadProperty = function SpreadProperty(next, ast, opts) {
  return next(ast.argument);
};

var ArrayPattern = function ArrayPattern(next, ast, opts) {
  var elements = ast.elements;
  return t.vector(elements.map(function (el) {
    return next(el);
  }));
};
/* ========= JSX ========= */


var JSXExpressionContainer = function JSXExpressionContainer(next, ast, opts) {
  return next(ast.expression);
};

var JSXElement = function JSXElement(next, ast, opts) {
  var attrs = ast.openingElement.attributes;
  return HICCUP_ELEMENT(next, ast.openingElement, attrs, ast.children);
};

var JSXAttribute = function JSXAttribute(next, ast, opts) {
  return t.MapEntry(next(ast.name), next(ast.value));
};

var JSXOpeningElement = function JSXOpeningElement(next, ast, opts) {
  return next(ast.name, {
    isJSXElement: utils.isComponentElement(ast.name.name)
  });
};

var JSXIdentifier = function JSXIdentifier(next, ast, opts) {
  return opts.isJSXElement ? t.symbol(ast.name) : t.keyword(ast.name);
};

var JSXText = function JSXText(next, ast, opts) {
  return ast.value.trim() !== "" ? t.StringLiteral(ast.value) : t.EmptyStatement();
};

var transforms = {
  File: File,
  Program: Program,
  ExpressionStatement: ExpressionStatement,
  BinaryExpression: BinaryExpression,
  UnaryExpression: UnaryExpression,
  Identifier: Identifier,
  NumericLiteral: NumericLiteral,
  VariableDeclaration: VariableDeclaration,
  VariableDeclarator: VariableDeclarator,
  FunctionDeclaration: FunctionDeclaration,
  FunctionExpression: FunctionExpression,
  ArrowFunctionExpression: ArrowFunctionExpression,
  ReturnStatement: ReturnStatement,
  CallExpression: CallExpression,
  StringLiteral: StringLiteral,
  MemberExpression: MemberExpression,
  ArrayExpression: ArrayExpression,
  ObjectExpression: ObjectExpression,
  ObjectProperty: ObjectProperty,
  ThisExpression: ThisExpression,
  AssignmentExpression: AssignmentExpression,
  NewExpression: NewExpression,
  ObjectMethod: ObjectMethod,
  EmptyStatement: EmptyStatement,
  BlockStatement: BlockStatement,
  IfStatement: IfStatement,
  SwitchStatement: SwitchStatement,
  SwitchCase: SwitchCase,
  BreakStatement: BreakStatement,
  ImportDeclaration: ImportDeclaration,
  ExportDefaultDeclaration: ExportDefaultDeclaration,
  ExportNamedDeclaration: ExportNamedDeclaration,
  ConditionalExpression: ConditionalExpression,
  LogicalExpression: LogicalExpression,
  NullLiteral: NullLiteral,
  BooleanLiteral: BooleanLiteral,
  RegExpLiteral: RegExpLiteral,
  TryStatement: TryStatement,
  CatchClause: CatchClause,
  ThrowStatement: ThrowStatement,
  TemplateLiteral: TemplateLiteral,
  DebuggerStatement: DebuggerStatement,
  SpreadElement: SpreadElement,
  SpreadProperty: SpreadProperty,
  ArrayPattern: ArrayPattern,
  JSXExpressionContainer: JSXExpressionContainer,
  JSXElement: JSXElement,
  JSXAttribute: JSXAttribute,
  JSXOpeningElement: JSXOpeningElement,
  JSXIdentifier: JSXIdentifier,
  JSXText: JSXText
};

if (false) {
  var missingJSTypes = jsTypes.filter(function (t) {
    return Object.keys(transforms).includes(t) === false;
  });
  var missingJSXTypes = jsxTypes.filter(function (t) {
    return Object.keys(transforms).includes(t) === false;
  });
  console.warn("Missing JS types", missingJSTypes);
  console.warn("Missing JSX types", missingJSXTypes);
}

module.exports = transforms;
},{"babel-types":"../node_modules/babel-types/lib/index.js","invariant":"../node_modules/invariant/browser.js","./cljs-types":"cljs-types.js","./utils":"utils.js","./ast-types/javascript":"ast-types/javascript.js","./ast-types/jsx":"ast-types/jsx.js","./ast-builders":"ast-builders.js"}],"js2cljs.js":[function(require,module,exports) {
var astt = require("./ast-transforms");

function tr(ast) {
  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  if (astt.hasOwnProperty(ast.type)) {
    return astt[ast.type](tr, ast, opts);
  }

  console.info(ast);
  throw new Error("".concat(ast.type, " is not implemented"));
}

module.exports = tr;
},{"./ast-transforms":"ast-transforms.js"}],"syntax-builder.js":[function(require,module,exports) {
function walk(node) {
  if (Array.isArray(node.children)) {
    node.children.forEach(function (ch) {
      return walk(ch);
    });
  }
}

module.exports = walk;
},{}],"index.js":[function(require,module,exports) {
var _require = require("babylon"),
    parse = _require.parse;

var zprint = require("zprint-clj");

var generate = require("./cljs-gen");

var transformAST = require("./js2cljs");

var addSyntaxSugar = require("./syntax-builder");

var toLispAST = function toLispAST(code) {
  return transformAST(parse(code, {
    sourceType: "module",
    plugins: ["jsx", "objectRestSpread"]
  }));
};

var transform = function transform(code) {
  return zprint(generate(toLispAST(code)), "sample", {
    isHangEnabled: false
  });
};

module.exports = {
  toLispAST: toLispAST,
  transform: transform,
  addSyntaxSugar: addSyntaxSugar
};
},{"babylon":"../node_modules/babylon/lib/index.js","zprint-clj":"../node_modules/zprint-clj/js-src/index.js","./cljs-gen":"cljs-gen.js","./js2cljs":"js2cljs.js","./syntax-builder":"syntax-builder.js"}],"ui.js":[function(require,module,exports) {
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

var js2cljs = require("./index");

window.html = j2c.core.compileHiccup;
var overlay = document.querySelector(".popup-overlay");
var popup = document.querySelector(".popup");

var openPopup = function openPopup() {
  popup.style.display = "block";
  overlay.style.display = "block";
};

var closePopup = function closePopup() {
  popup.remove();
  overlay.remove();
};

if (localStorage.getItem("seen-popup?") === "1") {
  closePopup();
} else {
  openPopup();
  localStorage.setItem("seen-popup?", "1");
  overlay.addEventListener("click", closePopup);
  window["close-btn"].addEventListener("click", closePopup);

  if (popup.clientWidth >= document.body.clientWidth) {
    popup.style.width = "".concat(document.body.clientWidth - 96, "px");
  }
}

function router(_ref) {
  var urls = _ref.urls,
      fn = _ref.fn;

  var handle = function handle(v) {
    var r = v.replace("#", "");

    if (urls.includes(r)) {
      return fn(r);
    }
  };

  window.addEventListener("hashchange", function (e) {
    return handle(window.location.hash);
  });
  return handle;
} // =================


var examples = {
  primitives: "01.primitives.js",
  variables: "02.variables.js",
  functions: "03.functions.js",
  conditionals: "04.conditionals.js",
  operators: "05.operators.js",
  array: "06.array.js",
  object: "07.object.js",
  "try..catch": "08.try-catch.js",
  threading: "09.threading.js",
  basic: "basic.js",
  react: "react.js"
};

var loadExample = function loadExample(id) {
  return fetch("examples/".concat(examples[id])).then(function (r) {
    return r.text();
  });
};

var jsEditor = new CodeMirror(window.jsCode, {
  lineNumbers: true,
  mode: "javascript"
});
var cljsEditor = new CodeMirror(window.cljsCode, {
  lineNumbers: true,
  readOnly: true,
  mode: "clojure"
});
var stdoutEditor = new CodeMirror(window.stdout, {
  readOnly: true
});
var cljsCompiledCodeEditor = new CodeMirror(window.cljsCompiledCode, {
  readOnly: true
});

var debounce = function debounce(t, fn) {
  var id;
  return function () {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (id !== undefined) {
      clearTimeout(id);
    }

    id = setTimeout(function () {
      fn.apply(void 0, args);
    }, t);
  };
};

console.log = function () {
  var v = stdoutEditor.getValue();

  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    args[_key2] = arguments[_key2];
  }

  stdoutEditor.setValue(v + "\n" + args.join(" "));
};

console.error = function () {
  var v = stdoutEditor.getValue();

  for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
    args[_key3] = arguments[_key3];
  }

  stdoutEditor.setValue(v + "\n" + args.join(" "));
};

var handleJSChange = function handleJSChange() {
  stdoutEditor.setValue("");

  try {
    var code = js2cljs.transform(jsEditor.getValue());
    cljsEditor.setValue(code);
    j2c.core.evalExpr(code, function (err, code) {
      if (err) {
        console.error(err);
      } else {
        cljsCompiledCodeEditor.setValue(code);
        window.cljs.user = {};

        try {
          eval(code);
        } catch (err) {
          console.log(err);
        }
      }
    });
  } catch (err) {
    console.error(err);
    console.error("Couldn't compile JavaScript code into ClojureScript :(");
  }
};

var handleJSChangeD = debounce(1000, handleJSChange);
jsEditor.on("change", handleJSChangeD);

var loadExampleAndDisplay = function loadExampleAndDisplay(id) {
  return loadExample(id).then(function (code) {
    jsEditor.setValue(code);
  }).catch(function () {
    alert("Couldn't load example \"".concat(val, "\""));
  });
};

var r = router({
  urls: Object.keys(examples).concat([""]),
  fn: loadExampleAndDisplay
});

var h = function h(tag, attrs) {
  var el = document.createElement(tag);
  Object.assign(el, attrs);

  for (var _len4 = arguments.length, children = new Array(_len4 > 2 ? _len4 - 2 : 0), _key4 = 2; _key4 < _len4; _key4++) {
    children[_key4 - 2] = arguments[_key4];
  }

  el.append.apply(el, children);
  return el;
};

var options = Object.keys(examples).map(function (id) {
  return h("option", {
    value: id
  }, id);
});
var select = h.apply(void 0, ["select", {}].concat(_toConsumableArray(options)));
document.querySelector(".selector").append(select);
r(window.location.hash || "basic");
select.value = window.location.hash.replace("#", "") || "basic";
select.addEventListener("change", function (e) {
  var val = e.target.value;
  window.location.hash = val;
});
var tabToView = {
  "btn-cljs": document.querySelector("#view-cljs"),
  "btn-ccljs": document.querySelector("#view-ccljs"),
  "btn-console": document.querySelector("#view-console"),
  "btn-dom": document.querySelector("#view-dom")
};
var tabs = document.querySelectorAll(".tabs .btn");
Array.from(tabs).forEach(function (btn) {
  btn.addEventListener("click", function () {
    document.querySelector(".tabs .btn.active").classList.remove("active");
    btn.classList.add("active");
    tabToView[btn.id].style.display = "flex";

    if (btn.id === "btn-ccljs") {
      cljsCompiledCodeEditor.setValue(cljsCompiledCodeEditor.getValue());
    }

    if (btn.id === "btn-console") {
      stdoutEditor.setValue(stdoutEditor.getValue());
    }

    Object.entries(tabToView).forEach(function (_ref2) {
      var _ref3 = _slicedToArray(_ref2, 2),
          id = _ref3[0],
          view = _ref3[1];

      if (id !== btn.id) {
        view.style.display = "none";
      }
    });
  });
});
},{"./index":"index.js"}],"../node_modules/parcel/src/builtins/hmr-runtime.js":[function(require,module,exports) {
var global = arguments[3];
var OVERLAY_ID = '__parcel__error__overlay__';
var OldModule = module.bundle.Module;

function Module(moduleName) {
  OldModule.call(this, moduleName);
  this.hot = {
    data: module.bundle.hotData,
    _acceptCallbacks: [],
    _disposeCallbacks: [],
    accept: function (fn) {
      this._acceptCallbacks.push(fn || function () {});
    },
    dispose: function (fn) {
      this._disposeCallbacks.push(fn);
    }
  };
  module.bundle.hotData = null;
}

module.bundle.Module = Module;
var checkedAssets, assetsToAccept;
var parent = module.bundle.parent;

if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {
  var hostname = "" || location.hostname;
  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';
  var ws = new WebSocket(protocol + '://' + hostname + ':' + "52788" + '/');

  ws.onmessage = function (event) {
    checkedAssets = {};
    assetsToAccept = [];
    var data = JSON.parse(event.data);

    if (data.type === 'update') {
      var handled = false;
      data.assets.forEach(function (asset) {
        if (!asset.isNew) {
          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);

          if (didAccept) {
            handled = true;
          }
        }
      }); // Enable HMR for CSS by default.

      handled = handled || data.assets.every(function (asset) {
        return asset.type === 'css' && asset.generated.js;
      });

      if (handled) {
        console.clear();
        data.assets.forEach(function (asset) {
          hmrApply(global.parcelRequire, asset);
        });
        assetsToAccept.forEach(function (v) {
          hmrAcceptRun(v[0], v[1]);
        });
      } else {
        window.location.reload();
      }
    }

    if (data.type === 'reload') {
      ws.close();

      ws.onclose = function () {
        location.reload();
      };
    }

    if (data.type === 'error-resolved') {
      console.log('[parcel] ✨ Error resolved');
      removeErrorOverlay();
    }

    if (data.type === 'error') {
      console.error('[parcel] 🚨  ' + data.error.message + '\n' + data.error.stack);
      removeErrorOverlay();
      var overlay = createErrorOverlay(data);
      document.body.appendChild(overlay);
    }
  };
}

function removeErrorOverlay() {
  var overlay = document.getElementById(OVERLAY_ID);

  if (overlay) {
    overlay.remove();
  }
}

function createErrorOverlay(data) {
  var overlay = document.createElement('div');
  overlay.id = OVERLAY_ID; // html encode message and stack trace

  var message = document.createElement('div');
  var stackTrace = document.createElement('pre');
  message.innerText = data.error.message;
  stackTrace.innerText = data.error.stack;
  overlay.innerHTML = '<div style="background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;">' + '<span style="background: red; padding: 2px 4px; border-radius: 2px;">ERROR</span>' + '<span style="top: 2px; margin-left: 5px; position: relative;">🚨</span>' + '<div style="font-size: 18px; font-weight: bold; margin-top: 20px;">' + message.innerHTML + '</div>' + '<pre>' + stackTrace.innerHTML + '</pre>' + '</div>';
  return overlay;
}

function getParents(bundle, id) {
  var modules = bundle.modules;

  if (!modules) {
    return [];
  }

  var parents = [];
  var k, d, dep;

  for (k in modules) {
    for (d in modules[k][1]) {
      dep = modules[k][1][d];

      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {
        parents.push(k);
      }
    }
  }

  if (bundle.parent) {
    parents = parents.concat(getParents(bundle.parent, id));
  }

  return parents;
}

function hmrApply(bundle, asset) {
  var modules = bundle.modules;

  if (!modules) {
    return;
  }

  if (modules[asset.id] || !bundle.parent) {
    var fn = new Function('require', 'module', 'exports', asset.generated.js);
    asset.isNew = !modules[asset.id];
    modules[asset.id] = [fn, asset.deps];
  } else if (bundle.parent) {
    hmrApply(bundle.parent, asset);
  }
}

function hmrAcceptCheck(bundle, id) {
  var modules = bundle.modules;

  if (!modules) {
    return;
  }

  if (!modules[id] && bundle.parent) {
    return hmrAcceptCheck(bundle.parent, id);
  }

  if (checkedAssets[id]) {
    return;
  }

  checkedAssets[id] = true;
  var cached = bundle.cache[id];
  assetsToAccept.push([bundle, id]);

  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    return true;
  }

  return getParents(global.parcelRequire, id).some(function (id) {
    return hmrAcceptCheck(global.parcelRequire, id);
  });
}

function hmrAcceptRun(bundle, id) {
  var cached = bundle.cache[id];
  bundle.hotData = {};

  if (cached) {
    cached.hot.data = bundle.hotData;
  }

  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {
    cached.hot._disposeCallbacks.forEach(function (cb) {
      cb(bundle.hotData);
    });
  }

  delete bundle.cache[id];
  bundle(id);
  cached = bundle.cache[id];

  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    cached.hot._acceptCallbacks.forEach(function (cb) {
      cb();
    });

    return true;
  }
}
},{}]},{},["../node_modules/parcel/src/builtins/hmr-runtime.js","ui.js"], null)
//# sourceMappingURL=/bundle.js.map